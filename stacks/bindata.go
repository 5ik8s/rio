// Code generated by go-bindata.
// sources:
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x2d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x4d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x18\x0e\xf6\xc8\x72\x05\x50\xca\xf2\xbf\x54\x19\x43\x96\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\x28\x1f\x12\x45\xe2\x45\x63\x44\xe5\xf2\xb8\x68\x9c\xa6\x67\xa4\x80\x19\x19\xb4\x9b\x38\x23\x09\x17\xb5\x72\x60\x43\xa3\x8c\x21\xa1\x28\x29\xb0\xe9\xff\x5a\x2c\x87\x97\x2f\x45\xc3\x60\x03\xa3\x9e\x08\xdf\x60\x53\xe2\x4c\xa8\xfc\x9b\xf6\x41\x39\x97\x47\x8a\xd3\x71\xfc\xf7\x23\x0b\xfe\xef\x45\x9d\x28\x7a\xcc\x23\x4e\x0c\xf2\x63\xbf\x19\xfe\x86\x5e\xcf\x20\xa0\xc5\xac\x5b\x42\x8e\xee\x45\x14\x9d\x16\x14\xad\xf4\x88\x30\x74\xab\x79\x30\x23\xbd\x58\x8d\x57\x4d\x09\x4d\xe0\x2a\x6b\x29\x60\x8c\x9c\xab\xc8\x2a\xed\x95\x31\x12\x9e\x76\xdf\xf6\x9f\x1e\x9f\x3e\xef\xbf\xee\xbe\x7c\x7f\x7c\xd8\xdd\x50\x43\x31\x49\x50\xce\x5d\x4d\xf1\x5e\x05\x53\x47\x35\xd0\xdc\xd6\x68\xea\x76\xd7\xa7\xda\x87\x48\x78\xb0\x0e\x67\x27\x67\x7b\x0b\xf1\x62\xf1\xfb\x6c\x7c\x4d\x91\x71\x26\xf7\x9d\xf8\x6f\x10\x9d\xe8\x3b\xb9\x19\xe4\x66\x68\x27\x93\xd6\x26\xf0\x3b\x70\x81\x9a\xac\xd3\x15\x2e\x42\xae\x3d\x66\xb2\xba\xde\x38\xba\xf8\xac\xdc\x3e\x21\x79\xcb\x6c\x63\xb8\x6d\xe5\x2c\xe7\xf5\x0f\x95\xf5\x08\x18\x4c\x8a\x36\x64\xbe\x87\x66\x59\xef\x91\x12\x95\xfb\x6e\x50\x1e\x39\xa9\xf9\x46\xcd\xa7\x1e\x51\x9f\x24\x8c\x39\x27\xd9\xb6\x97\x3c\x16\x43\xe4\xb6\xdb\x76\xed\x22\xc2\xd6\xab\x23\x4a\x38\x6d\x59\x1c\x35\x09\x1b\x67\xc1\x64\x2f\x7a\x51\x13\xe2\xd1\x47\x3a\x4b\xf8\xd0\xd5\x20\x12\x2a\xb3\x8f\xc1\x9d\x25\x64\x9a\xaa\xa2\xac\x95\x43\x09\xfd\xea\x4f\x00\x00\x00\xff\xff\xd5\x57\x8c\x0c\x68\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 872, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9c\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x9e\xed\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x24\x8b\x72\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\x92\x0e\x42\x29\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x09\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xa2\x04\xa7\xbb\xe1\x06\xe8\xa3\x49\x90\xd5\x39\x94\x72\x2e\xd7\x1a\x8c\x19\x2a\x69\xb5\x12\x02\xf4\xbd\x62\x90\xa0\x68\xfc\xe9\x53\x54\x42\x48\x6e\x37\x85\x7e\x82\x1e\xc6\x0f\xa3\xf2\x58\x33\x33\x85\x95\x06\xb3\xb9\x01\x41\x76\x09\xba\xec\x99\x52\x94\xf2\x67\xd0\x53\xc8\x94\xb6\x33\xd0\x5b\xd0\x09\xe2\xc6\x72\x85\x2d\x08\x48\xc1\xea\x5d\xf7\xec\xdb\x7c\x74\x37\xba\x1f\xcd\xa7\x5f\x17\x0f\x83\xfb\xd1\x6c\x32\x18\x8e\xbe\x77\xcd\x96\x76\xa9\xc8\x8d\x05\xdd\x15\x8a\x12\x91\x5c\xf7\xae\x2f\x4b\xb3\x2a\xb7\x4b\x95\x4b\x36\xd7\x64\xb5\xe2\xb4\xf4\xa9\x14\x22\x94\x7a\xcf\x07\x77\x77\xe3\x5f\x17\x83\x87\xaf\x55\x02\x60\x45\x72\x61\x87\x3e\x5d\x35\x98\x71\x43\xd5\x16\xf4\xee\x58\x0c\x3e\x99\x12\xa8\x9d\xf3\x14\x54\x6e\x13\xf4\xbe\x29\x5b\xf1\xf5\x84\xd8\x4d\x82\xa2\x18\x2c\x8d\x7d\x80\x71\xa6\xd5\xf3\x2e\xda\xc3\x96\x5c\x12\xbd\xab\x60\xb9\xd1\xb1\x0f\x2a\x5e\x72\x19\x83\xdc\xaa\x00\x6a\x40\x6f\x39\x85\x61\x11\x7c\x95\x30\x6f\xaf\x76\x5a\x13\x2e\x6f\x72\x4d\x2c\x57\x32\x41\x1f\xae\x6a\x87\x32\xa2\x41\xda\xd9\x26\xb7\x4c\x3d\x05\x98\xcb\x34\xf0\x9a\x4b\x0b\x9a\x42\xe6\x44\x45\x9d\xa7\xa3\x9b\xdb\xe9\x68\x38\xaf\xed\xb8\x17\x0e\x58\xca\xe5\x44\x69\x9b\xa0\xcb\xab\x5e\xaf\x17\x86\xed\xda\x64\x22\x88\x84\x41\x7b\x5b\x04\xa9\x1d\x30\xe6\x7a\x6b\x1f\x0b\x17\xca\x76\xcf\xbe\xd5\xe5\x4e\x9c\xf5\x9f\x3b\x9d\x32\x76\xdf\xcc\x01\xb6\xa8\x96\x20\x4b\x10\xa6\xaa\x9c\x17\x27\xc8\xcb\xfd\xd1\x5a\xa8\x25\x11\x8b\x0c\x74\xca\x8d\xe1\x4a\x96\x50\x8c\xce\xdf\x96\x65\xea\x7a\xa5\x2e\x57\xf1\xdb\xf3\x5a\x26\xc1\x3e\x29\xfd\xc8\xe5\x11\xb9\x6b\x7b\x90\x96\x53\x9f\xc9\x23\x98\x8c\xc3\xb3\x05\xe9\xdf\xdb\x7d\xfc\x68\x1c\x80\xe6\xc6\xaa\x54\x83\x51\xb9\xa6\xc0\x60\xc5\x25\x77\x26\x4c\xa0\x58\x6b\xc5\x76\xc3\x35\xcb\x88\xb6\xbb\x4a\xe5\xf5\xc0\x6e\x2d\x6e\xd7\x29\xc7\xfb\x98\xc9\xbd\x38\x36\x96\xd8\x7c\x8f\xd2\x4b\x42\x83\x88\xcb\x53\xaa\x81\x58\xb8\x58\x83\xbd\x10\xdc\xd8\x8b\x27\x62\xe9\xe6\x22\xcf\x18\xb1\x50\xa6\x3a\x25\x99\x29\xd1\x20\x59\xa6\xb8\xb4\xd5\x73\xa6\x58\xf5\xb3\xaa\x77\xf9\x28\x49\x0a\x26\x23\xc1\x81\x62\x50\x63\xa9\x86\xd2\x88\xe1\x0c\x1e\xb9\xa3\xb0\xce\x41\xab\x25\x41\x8b\xa6\x29\x91\x2c\xa9\x65\x08\x63\xa1\xd6\x0b\x95\xdb\x2c\xb7\x0b\x01\x5b\x10\x7d\x06\xcb\x7c\x8d\x30\xd6\x60\x76\x92\xf6\xdf\x6d\x0e\x26\xdb\xd4\x06\x71\xc1\xaf\xc1\x90\x17\x90\xd8\x1d\xef\x51\x20\xb7\x5c\x2b\x99\x3a\xf6\x0d\x54\x27\xe3\x1b\x4f\x6f\xfd\xb3\xff\x1b\x10\xab\xd8\x85\xfa\xa6\x45\xee\xe7\x21\x04\xf9\x7c\x34\x90\xb7\x77\xe3\xf9\x62\xfe\x79\x3a\x9e\xcf\xef\x46\xfd\xab\x60\x2a\x2b\xe1\x70\x30\xfc\x3c\x5a\xcc\x7e\xf9\x32\x98\x7d\xee\x5f\xd5\x53\x9f\x92\x35\x94\x43\x18\x17\x83\x75\xd9\xed\x75\xaf\x02\xea\xf1\x29\x4e\x10\x67\xae\xe1\xed\xae\x08\x96\x82\xb6\x26\x1c\xbb\x82\x8d\xea\xf0\xe0\x39\x53\x06\xc2\x70\xfd\x3c\xc7\x1b\x6b\xb3\xe6\xe1\x65\x2f\x5e\xeb\x8c\x06\x87\xd7\xbd\xeb\xf7\x1e\x78\xe1\xfe\xe0\x54\x49\x6e\x95\xe6\x72\x7d\xc4\x6d\xf7\xe6\xed\xbb\x03\xc7\xab\x5a\x07\x76\x9b\x84\x89\x11\xc6\x4d\x62\x0d\x44\x01\xd3\x34\x14\x2c\xa4\x99\x20\x16\x3e\x71\x01\x81\xe0\x90\xe5\x0b\x02\x5f\x14\xac\xb6\x23\xa9\xe8\xda\x34\x13\x0d\x4b\xed\x74\x19\x40\x1a\xbc\xf9\xaf\xb7\xd0\xed\xc3\x6c\x3e\x78\x18\x8e\x16\xb7\x93\x0a\xc7\xb3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x78\xd8\xa8\x51\x25\xa9\x6b\xd4\xa8\x8f\x4b\x08\xc9\x32\x90\x0c\x33\x69\xb0\xf7\xb0\xbf\xdf\x44\x9c\xd4\xb5\x08\x76\x4b\x43\xff\x63\xef\xa7\x5e\xf3\x78\xa3\x8c\x75\x2a\xfd\xf2\x2d\x9d\xba\xbc\x62\x85\x0d\x5f\x4b\x60\x98\x92\xa6\xc1\x12\x8b\x8d\x55\x9a\xac\x01\xef\xb3\xd2\xd7\x5c\x61\xb3\x33\x16\xd2\x13\x97\xc8\x93\xe6\x16\x1a\x24\xb4\xa7\x2f\x42\xa9\xca\xe5\xe1\x69\xf1\xd8\x62\xc9\xd1\x26\x03\x01\x16\x10\x83\x4c\xa8\x9d\x2b\xb4\x79\x29\x6c\xb7\xfe\x12\xd0\x22\x69\xb7\xeb\xb9\xba\x60\xe9\x0a\x18\x5c\x01\x7f\x47\x47\x43\x26\x38\x25\x66\xcf\xcb\xaf\xea\x9c\x35\xb1\xf0\x44\x76\x6d\xb7\x7a\x54\xca\xa2\x04\x45\xee\x3d\x5a\x12\x11\x9d\xa8\x4c\xe4\xfc\x2c\xae\xa0\xc0\xdb\x13\x17\x66\xf4\x63\xe5\xb7\xf1\x96\x6b\x9b\x13\x51\xe5\xf8\x24\x9e\x81\xb1\x5c\xfa\x15\x41\xe7\xe2\x15\x0a\x65\xa4\x25\xb0\x38\x5e\x28\xcd\xdc\xce\x67\xac\xca\xf0\x8a\x6b\x63\xdb\xaf\xbb\x56\x16\x76\x03\x63\x12\x74\xf6\x6d\x32\x9e\xce\x67\xdf\x0f\xf9\x33\x6a\x21\xd0\xe8\xaf\x30\xa8\x56\x79\x93\x37\xf1\x36\x78\x88\xde\x45\x0d\xca\x6b\xdd\xab\x03\xc4\xf9\xa5\x39\x47\xff\x3b\x85\xc2\xb8\xb1\xea\x86\xfa\x1f\xae\xbc\x81\x23\x62\x8c\xdb\x17\xe1\x86\x07\x69\xcf\x99\x38\x09\xf4\xfc\x1d\x7c\x01\x34\x6c\x78\x13\x47\xe5\xa7\x6f\x9d\x17\xd7\xd4\xef\x3c\x7b\xe4\xb2\x5c\x99\xc3\x04\x37\xf3\xeb\xf6\x34\xc3\xbe\xb0\xec\x24\xb2\xb9\xc9\x87\x38\xbf\xd3\x47\xff\xe0\xa6\x6a\x14\xfa\xa5\x23\xe1\x0a\x5f\x6c\xf8\x95\x0c\xe4\xf6\x3f\xb9\xda\x30\xba\x9d\xcd\x6f\xc7\x8b\xfb\xd1\x7c\xb0\xf8\xf1\x5b\x2b\x2e\x0b\xe3\x39\xba\x16\xf9\xf9\x70\x97\xa2\x3b\x0b\x57\xc4\x72\xb1\x2e\x87\x1d\x97\x4c\xd8\xf9\x2d\x77\x74\xe1\x49\x0c\xa3\x2d\xd1\xdc\x7d\x9b\x27\xa8\xe5\x53\xb8\xe3\xbe\x5c\x0d\xd5\x3c\x2b\xbe\xe3\xa2\x83\x0f\xe8\x7a\x69\x8e\x3a\x9d\xce\x9f\x01\x00\x00\xff\xff\x87\x77\x60\xa3\x0d\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4109, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\xdb\x3a\x96\xff\xbf\x9f\x82\x70\x0b\xdc\x16\x88\x1f\xc9\xb4\xbb\x13\x01\xf9\xc3\x8d\x9d\x5b\xef\xb6\x8e\x11\x3b\xbb\xd8\xbd\x18\x08\x8c\x74\x6c\x73\x23\x91\x5a\x92\x72\xea\x4e\x76\x3f\xfb\x80\xd4\x8b\x7a\x5a\x4a\x6f\xa7\x98\xb9\xea\xbd\x68\x13\xf1\xfc\x0e\xc9\xc3\xf3\xd2\x21\x4d\x3b\x8c\x6e\xc9\x4e\x58\xaf\x10\xda\x71\xbc\xc5\x14\x0f\x5d\x2c\xf6\x0f\x0c\x73\x37\xe0\xec\x40\x5c\xe0\xba\x15\x21\x87\x51\x09\x54\x5a\xe8\x59\xff\x8a\x10\x0e\xc8\x7f\x00\x17\x84\x51\x0b\x9d\xc7\xcf\x0a\x18\x84\x86\xc8\x25\x02\x3f\x78\x30\x03\x0f\xa4\xa6\xdd\x62\x4f\x40\xdc\x8c\xd0\x96\x79\x2e\x70\x0b\x11\x21\x09\x4b\x9f\x52\xec\x43\xf1\x19\x0b\x14\x3e\xe5\xac\xbb\xc3\x72\x6f\xa1\xf1\x01\xf3\xb1\x47\x1e\xc6\xf1\x14\xc6\xe9\x14\xc4\xb8\xc0\x82\xef\x16\x6e\x36\x5a\x84\xe4\x31\x00\x0b\x6d\x89\x07\x39\x09\x48\x2c\x58\xc8\x1d\xa8\x9b\x7a\xf5\xe4\x11\x2a\x21\x23\x11\x60\xc7\x01\x21\x2c\x25\x9d\xaf\x47\x63\xf8\xe0\x12\xa9\x64\x63\x21\xc9\x43\x30\x1a\x88\x98\xc1\x16\x87\x9e\x2c\xb5\xfc\x8f\x60\x74\x86\x25\x36\xa5\x80\x90\x24\x3e\x2c\xa8\x04\x7e\xc0\x9e\x85\x3e\x08\xa3\x31\x92\xe4\x8a\x33\x1f\xe4\x1e\x42\xb3\xa9\x24\x8d\x44\x1e\x41\x15\x75\xc8\x3d\x0b\xed\xa5\x0c\xac\xf1\x38\x23\x18\xbd\xf9\xeb\xea\xee\xf6\xcb\x7c\xf3\x69\x7e\xbf\xb6\x97\xd3\x2f\xf3\xf5\x6a\x7a\x3d\xff\xbf\x91\x38\x38\x23\xc7\x0b\x85\x04\x3e\xf2\x98\x83\x3d\xeb\x72\x72\x39\x79\xf5\x4a\x00\x3f\x90\x58\x3e\xb1\xc0\xa3\xb9\x00\x3d\x10\xce\xa8\xaf\x04\xfd\x2a\x92\xdb\xaf\x77\xd3\x9b\xe9\x72\x6a\xaf\x6e\xef\x36\x57\x7f\x9a\x4c\x26\xc9\xf3\x1b\x7b\x7a\xbf\xf9\x64\x7f\x9c\xae\x17\xd7\xf6\x7c\x39\xfd\xf8\x79\x3e\xbb\xca\xf4\x2a\xa3\x98\x2e\x6f\x97\xff\xf5\xe5\xf6\x7e\x9d\x52\xa5\xf2\xac\x22\xba\xbd\xfb\xd5\xbe\xbb\xfd\x3c\xbf\xc2\xae\x4f\x68\x46\xb6\x9a\x6e\x3e\xad\xed\xd9\x74\x33\xbd\x1a\xab\x35\x4e\x34\x4d\x53\x10\x1f\xef\xc0\x42\x2e\x26\x62\x8f\xe9\xf9\xe5\xe5\x45\xd2\x6c\x79\x58\x82\x90\x19\xd5\x2a\xf4\xbc\x15\xf3\x88\x73\xb4\x10\xf6\x9e\xf0\x31\x12\x30\x7c\x0d\x98\x80\x64\xd6\x6a\xa2\x63\x25\xe8\x44\xf7\x12\x0b\x55\x8d\x0d\x56\x3a\x06\xe9\xa4\x26\xa0\x1f\x2b\xf5\x24\x74\x67\xda\x43\x19\x37\x3a\x62\xdf\x2b\x71\xcf\xf4\xb8\x89\x6d\x4a\x65\xfe\x9c\x31\x3c\x30\x2f\xf4\x21\x1d\xbb\xa2\xb1\x8a\xf2\xd3\x06\x3a\x94\xe0\x81\x0f\x92\x1f\x23\xda\x9d\xc7\x1e\xb0\x67\x07\xc0\x7d\x22\x44\x66\xf5\x43\xc4\x99\x07\x57\xb1\x5e\x0d\xb3\x55\x8a\xd7\x40\x33\x1b\xfb\xe4\x2b\x70\xeb\x7c\x34\x19\xbd\x3f\x29\x7a\x87\xf9\x3e\xa6\x6e\xc2\x7e\x38\xc4\xae\xcb\x41\x88\xf8\xf7\x90\x92\xaf\xd6\x78\x3c\x16\xcc\x79\x8c\xf8\x8e\xd4\x8f\x20\x53\xfa\x68\x7d\xd6\x92\x71\xb8\xbf\xfb\x7c\xf5\xf8\x67\x61\x8d\xc7\x85\xd6\xd8\x98\x97\xd8\x07\x11\x60\x07\xae\xde\xfc\x35\xb3\x94\x2a\x49\x85\xae\x18\x46\xfd\x58\xba\xeb\x5a\x03\xb9\x9d\xcd\x3f\xde\xff\x7a\xb5\x73\x24\x57\x7c\x2f\x2a\xd4\xe9\x72\x72\xf9\xa7\xb1\x74\x82\x33\xa5\x52\x43\x9f\x51\x22\x19\x27\x74\x17\x37\xbf\xbf\x78\x7f\x71\xa1\xdb\x0b\x56\x2f\x88\x0b\x8f\xc4\x79\x4c\x3d\x59\xb4\x52\xda\x87\x65\xde\xc7\xec\x4b\xfd\x79\x8d\x86\xe8\xfc\xc3\xe4\x72\x92\x75\x09\xf4\xc0\x8e\x0a\xe7\x1b\x2e\xf1\xfc\xc3\x64\xf2\x5e\xd1\x18\xcf\x2e\x27\x97\xe7\x1a\xb6\xe3\x81\x93\x3e\xcf\x2d\xad\xee\xfd\x70\x61\x2c\x6e\x69\x11\x23\x5e\x79\x57\xab\x96\x22\x76\x3c\xd7\x91\xee\x18\x4d\x05\x0d\xcc\x81\x24\xf8\x81\x32\xe2\x9b\x28\x42\x24\x0d\xda\x26\x8c\x11\x8d\xf5\x1c\xed\x94\x87\x36\x81\x91\xf4\x03\x2f\xc7\x4d\xc5\x11\xce\xbc\x95\x87\x29\x4c\x43\xb9\x8f\xf4\xd1\x20\x59\xde\x2e\xe7\x99\x68\x8b\xeb\x1d\xd1\xac\x6e\x67\xda\xcf\x5e\xbd\x79\x2b\xc0\xdb\x8e\x95\x83\x7f\x57\xd1\xae\xb5\xcb\x24\xd2\xaa\x67\x52\x2e\x96\xeb\xcd\x74\x79\x3d\xb7\x17\xab\x84\x8e\x04\x19\x81\x00\x87\x83\x14\x16\x22\x2e\x50\x49\xe4\x31\x72\x05\x0e\x70\x99\xc5\x85\x9c\xe2\xd6\x28\xef\xab\xff\x0d\x41\xc4\xb1\x7b\x88\x0e\x98\x93\x28\xe8\x7d\xfe\x98\x0d\xf4\x15\x42\x2e\x08\x87\x93\x20\x4a\x12\x06\xd1\xaa\x88\xa3\x90\xe0\xa3\x74\xf8\x83\x1c\x83\xaa\xc8\x53\x62\x94\xa9\xb5\xc9\xe6\xd5\x63\xf8\x00\x9c\x82\x8c\xc6\x9e\xb6\xb8\xb6\x13\x0a\xc9\x7c\x9b\x43\xe4\xce\x6c\x17\xb6\x84\x92\x34\xf5\x18\x22\xb5\xc2\xc4\x19\x45\xa6\x3d\xd2\xe3\x1c\x11\x36\x3e\x9c\x63\x2f\xd8\xe3\x0b\x4d\xc3\x43\x0f\x9a\x29\x8c\x10\xda\x48\x97\x8d\xb3\x99\x2e\xd1\xd4\x66\x2a\x2c\x25\x27\x0f\xa1\x04\x1f\x53\xb2\x05\x21\x9b\xc9\x09\x15\x12\x53\xe7\x14\x53\x17\x07\x2a\xcc\x37\x12\xed\x31\x75\xbd\x53\x44\x1e\xdb\x01\x55\xf6\xd3\x48\x25\xa4\x4b\x58\x5b\xa9\x01\x3d\x34\x91\x1a\x0b\x9f\x88\xc4\x42\xcf\x43\xad\xce\x66\x8e\x37\xa8\xe3\x31\xd0\xa4\x8f\x84\xba\x56\x59\xba\xba\xcd\x07\x89\x5d\x23\x65\x33\x72\xdb\xcc\x4b\x89\x00\x9c\x84\x20\x65\x63\x98\x15\xe3\x64\x47\xe8\x88\x04\x66\xe2\x77\xc0\x5e\x08\x1b\x9d\xb2\x2d\x56\xf6\x74\x36\xbb\x9b\xaf\xd7\x45\x48\x48\xdc\x1a\xcc\x7a\x73\xb7\x58\xfe\x5a\xa2\x17\xc0\xdb\x01\x38\x68\xc3\x1e\xed\x01\x9b\x29\x7f\x25\xc8\xfe\x32\x5d\x95\x80\x6d\x47\x96\x76\xc4\x84\xec\x86\x50\x26\xc6\x3a\xf6\xa2\x5f\x2a\x3a\x21\x38\x60\xc1\x68\x57\xcc\x16\x78\x57\x49\x0b\x67\x0f\x3e\x74\xc3\x48\x26\xb1\x67\x0b\xf2\x0d\xf2\xef\x0c\x79\xf5\x59\x6e\xfe\xe5\x7d\xb9\xbb\x02\xe8\x24\x40\xbd\x87\xd4\x00\x36\x8b\x2f\xf3\xf5\x66\xfa\xa5\xac\x05\x4a\xe1\xf0\x2e\x17\xe5\x9a\xe7\x25\x02\x46\x85\xf2\x49\x6e\xdb\xd1\xc5\x08\x37\xe4\x58\x47\x85\x6a\xd4\xec\xfe\x6e\xba\x59\xdc\x2e\xcb\xc0\x17\x68\x78\x8c\x7c\x91\xf4\x63\x6c\x07\xf1\x27\xbd\x75\x91\x7f\x14\xdf\xda\xfb\x87\x84\x5e\xf9\x07\xf4\x1a\xcd\xe6\xab\xbb\xf9\xf5\x74\x33\x9f\x75\x41\x07\x9c\x50\x87\x04\xd8\x6b\xd7\xa7\xab\x12\x07\xaa\x17\xad\xfd\x40\x4d\xd0\x77\xf4\x17\x30\x5e\xa7\x92\x79\xf1\x3b\x8c\x52\x70\x34\x06\x0e\xad\xf5\xd8\x40\xb5\x9d\x98\x01\xe1\xe0\x00\x39\x80\x3b\x7a\x38\xe6\xe2\x44\xbb\x61\xe6\xd1\xb6\x56\xd2\xae\x3c\x04\x50\xf9\xb2\xde\x33\xe4\xcb\x7a\xee\x6a\xc6\x06\xd4\x97\x5e\xdd\x70\x3f\xde\xde\x7e\xae\x96\x95\x76\x53\xe0\xda\xea\x0d\x02\xb8\xad\xe3\x77\xdb\xf5\x92\xf0\x55\x8e\x02\xce\x24\x73\x58\x4b\x1d\x4c\x50\xca\x98\x85\xc4\x7e\x5d\xc8\x2f\x5b\xb4\x89\x6c\x0d\x7a\x8d\x66\x10\x70\x70\xb0\x04\xf7\x0c\x3d\x42\x20\xd1\x96\x71\xf5\x4e\x15\x60\x49\x1e\x88\x47\xe4\xb1\xd4\x03\x07\x65\x1d\x69\x69\xa7\x9d\x44\xf3\x48\x9d\x32\x75\x12\x48\x0a\x6d\xed\x09\x70\x40\x46\xf1\x7b\x5f\x7b\xc0\x21\xce\xf9\x5a\x03\x58\x00\x8d\x0a\x59\x01\xe9\xa6\x11\x49\xa4\xc4\xa1\xdc\x77\xf5\x68\x39\x2c\x0e\x5d\x02\xd4\xa9\x35\xd9\xe6\x7e\x55\x32\x2d\xbb\xa6\x2c\x1a\xeb\x78\x98\xf8\x2f\x48\x10\x35\x98\xe3\x27\xbb\x05\x83\x32\x38\x20\xf6\x23\x1c\x4f\x83\x86\xc3\xbf\x43\xbe\x9f\xbd\x91\xb4\xca\xf7\xe3\x70\xd9\x25\xdf\x8f\x21\x1e\x7e\x80\x5a\x27\x57\x21\xeb\x18\x56\x1c\x75\x6b\x60\x7b\x77\x68\x00\xf4\x2b\x57\x27\x14\x7b\xa2\x6d\x55\x2f\x46\x24\x86\x8f\x5e\x9c\xac\xc4\x1c\xa6\x8e\xc3\xc2\xb6\x61\x3d\x0f\x6d\xa9\xb2\x31\xe8\x89\xf1\x47\x8f\x61\xb7\x73\x4e\x96\x02\x3b\x2f\x46\x0e\xd9\x61\x55\xcc\x44\xa9\x8b\x92\x9a\xb8\xae\x9a\x6a\x62\xbb\xab\xab\x89\xee\xa0\x4c\x26\xac\xbd\x74\x4d\x94\x0a\x5f\x98\x50\xe0\x2f\xc4\x7f\xc7\xca\xa4\x26\xd0\xd9\x02\x2a\xb8\xbc\x2c\x01\x4f\xc0\x2f\x9b\xbb\x89\xfe\x3e\x19\x74\x28\x1e\x54\xa0\x3b\xb9\x00\x13\xdf\xdd\xa4\x2b\xd1\x2f\x93\xde\x4b\x8c\xfb\xc5\xc1\x50\x57\xe5\x1a\x02\x60\x5c\x00\x2c\x45\x3f\x16\xca\x20\x94\x53\xf1\x6f\x42\x75\x95\x6d\xcf\xbd\x74\x1c\x49\x0d\xb1\x61\x28\xd1\x7e\xac\xc7\x76\xa5\xc1\x08\x38\x00\x27\xf2\x68\xa1\x5f\x06\x0b\xba\x65\x83\x5f\xe2\x86\x2c\x19\xcf\x15\x3b\x5e\x25\xa2\x8c\x4a\xd2\xa5\x00\xbe\x08\xac\x2c\x94\xa3\x67\x44\x82\xb7\x83\xc9\x48\xff\x37\x78\x57\xa0\x9d\x06\x19\x71\xe4\x1a\x7f\x1b\xe0\x20\x18\xfc\x05\x3d\xa3\xc1\xa0\x40\xbc\x4a\xb3\xc0\xd2\x9b\x75\x15\xf9\x52\xcf\xdb\x08\xc0\x55\x44\xff\x19\xab\x8b\x55\x19\x1c\xea\xd8\x46\x7a\x55\x0a\xee\x55\xe4\xb7\xda\xed\xe6\x22\x7a\x9e\xcc\x50\x5e\x2d\x8d\x72\xb4\xa8\x14\x89\x41\xb6\x28\xa0\x1a\xa4\x6e\x90\xad\x23\x2b\xff\xa4\x5c\x44\xad\xf3\xa8\xed\x33\x93\x5b\xad\xf1\xd5\x62\xa3\x85\x29\xba\xfb\x46\xf2\x58\xe0\x95\x21\xa2\x16\x18\x8b\xbe\x14\x04\x6b\x01\x86\x82\x55\xd6\x53\xf2\x40\x1c\x90\xeb\x28\x45\xaf\xcb\xdd\x4b\xf4\xff\x0e\x47\xab\x98\xab\xa3\xe7\x62\x51\xf9\xb7\xc1\xd7\x21\x0e\xc8\xf0\x11\x8e\xc5\x55\x4f\xdf\xa1\x0a\xe5\x51\xf4\x5c\x7a\xf1\x56\xc0\xbd\x94\x41\x06\x8e\x0b\xc3\x85\x42\x71\xbe\x03\x7d\xe2\xc1\xac\x0a\xe7\x9b\x93\xaa\xdb\x35\x73\xc1\xca\x97\x25\xd1\x33\x9a\x94\xe8\xd6\xe4\x9b\x49\x27\xc8\xb7\x22\x9d\xee\x29\x21\xcb\x4a\xb0\x55\x54\x0b\x63\xec\x86\xa8\xe2\x47\x43\xe2\x16\xa5\xe5\x78\x04\xa8\xdc\x70\xec\x40\x0d\x36\xa2\x18\xea\x9d\xe4\x0a\x06\x1e\x96\x40\x9d\xa3\x55\x2e\xa7\x2a\xba\x89\x2f\x06\xe6\x0b\x7b\x5c\x3d\xb1\x05\x38\xa1\x72\xa8\x76\x10\xef\xbd\x3b\x8c\xba\x7a\x37\x0d\x7b\x6f\xdf\x56\x16\x05\x14\x3b\x42\x1f\x58\x48\xdd\xc1\x3b\x74\x75\x85\x06\x2c\x94\xd1\xaf\x67\x68\x10\xd2\x47\xca\x9e\xe8\xe0\x2c\xc7\xa9\x50\xe2\x41\xcf\xd1\x29\xa3\x33\x34\xf0\x43\x19\x62\xcf\x96\x9e\x50\x68\xca\x28\x0c\xde\xbd\x2b\x4a\x13\xdc\xb5\xae\xed\x44\xd6\x78\xaa\xf8\x53\xd0\x12\x01\x7c\xaa\xcb\xd7\xe5\x8a\x76\xb5\xc2\x6c\xcc\x58\x62\x54\x6e\x0d\xc2\xa8\x3c\xf7\x51\x57\xd7\x2a\x2a\xf9\x39\x8d\x50\x6f\xe5\x29\x65\xa9\xec\x5c\x50\x9e\x68\xd3\xa1\xb8\x0b\x91\x1f\xa7\xb2\x94\x69\x28\xf7\x2c\x8a\x84\x25\x55\xb1\x70\xd2\xa8\x75\xc4\xdc\x9d\xc9\x33\xfa\x7a\xc3\xf8\x13\xe6\x2e\xb8\x37\x8c\x57\xea\xdc\x36\x21\x50\x3f\x45\x1a\x97\x38\x6a\x63\xd0\x91\x72\x7c\xbf\xee\x44\x81\x47\xfd\x64\xb8\xb4\x34\x22\xc4\x47\x23\xc0\xcd\xf6\x7e\xa3\xe3\x50\xbf\x0c\xa2\xf3\x28\x71\x32\xf0\x23\x33\x13\xe9\x04\xdf\x97\x9c\x98\x25\x40\xf4\x9c\xb5\xbc\x1d\x5c\x4c\xce\xff\x75\x38\x39\x1f\x4e\xce\x37\x93\x89\xa5\xff\xff\xef\x74\xee\x15\x09\x4c\x66\x05\x73\x5d\xd4\x2e\x95\xb9\xab\x22\x7c\x9f\xef\x98\xe4\x7d\xbe\x53\xc2\xfe\x93\xe4\x3b\x59\xee\x51\x95\x6a\x48\x27\xa8\x0a\x86\xb3\x64\xdf\xa2\x6a\x33\xe3\x8f\x1d\x44\x0b\x11\xaf\x76\xab\xaa\x2e\xf0\x55\xee\x2e\xe5\x88\x75\x44\xbc\x6b\xd9\x4d\xb4\x2f\x55\xc6\xaf\x4f\xf4\x58\x81\xfb\xa7\x89\x5e\x3c\x8c\x8f\xc0\x55\x47\xae\xec\xf5\xdf\x0c\x59\x3e\x96\xce\xbe\xc2\x48\xd4\xdc\x74\x42\x8e\x9e\x2b\xb2\x75\xd5\xba\xe3\x81\x93\xe8\x07\x76\x72\x27\xbf\xd3\xc3\x44\x69\x51\x61\x94\xf5\xae\xfe\x24\xc7\x96\x2a\x0e\x61\x7b\x6c\x37\xca\xc5\xe1\x1f\x2a\x8f\xe4\x7c\x63\x5b\x91\x18\x8e\xe3\x77\x99\xb3\x99\x4e\xfc\x4e\xd3\x8e\x4e\xbf\x35\x4c\x3c\xb6\x76\x5d\x2f\x2b\x4d\x5e\xd7\x9c\x2c\x34\x38\x4f\xa6\xe9\x12\x1f\xa8\xc8\x9f\xeb\xff\x7b\x99\x4c\x12\xa6\xed\xa7\x93\x89\x40\xe2\x30\xeb\x90\x36\x2d\x65\x06\xe5\xe2\x5b\x13\xa3\xa0\x39\xbf\xa9\x83\xe1\xa6\x1c\xaa\x0e\x94\x6c\x70\x16\x81\xf1\xf3\x1a\xb0\x21\x41\x43\x60\x8d\x19\x40\x2b\x1e\xa6\xe8\x9a\x8b\x97\x27\x59\x06\x2d\x62\x78\x23\x03\x7c\x32\x09\x6b\x84\xa7\x82\xad\x62\xd1\x5e\xba\x69\xd5\xbe\x29\x33\x6b\xc3\x21\x3a\xaa\x50\x5b\x50\xef\xc4\xa6\x62\x85\x4a\xc5\xf9\x4a\x86\xb1\x3f\xb0\xb3\x94\xc9\xdc\x00\xaf\x29\xd6\x54\x70\x89\xde\x6c\x6d\xa7\xb2\xda\x72\x31\x99\xfc\xc3\x25\x4e\x0d\x11\xfb\x7e\xb9\x5e\xcd\xaf\x17\x37\x8b\xf9\xec\x7b\xc3\x76\x5b\x7f\x9d\xe4\xa1\x75\x2e\xfb\x54\xd5\xa7\x77\xe4\xbd\x23\xef\x1d\x79\xef\xc8\x7b\x47\xfe\x93\x1d\xb9\x20\xdf\xa0\xde\x89\x57\xee\x2a\xf4\xbe\xbb\xf7\xdd\xbd\xef\xee\x7d\x77\xef\xbb\x7f\x9e\xef\x8e\x44\xd9\xec\xbc\xab\x77\x8e\x7b\xef\xdd\x7b\xef\xde\x7b\xf7\xde\xbb\xf7\xde\x3f\xcb\x7b\x4b\x27\xd0\xdb\x3f\x50\x5f\xf1\x3e\xb5\x41\xd5\x3b\xf1\xde\x89\xf7\x4e\xbc\x83\x13\xef\xec\x7d\x7f\xb6\x13\xef\x7d\xea\x4b\x7c\x6a\xb2\x2f\xdf\xc2\xaf\xd6\x9e\x14\xe8\x7d\x6b\xef\x5b\x7b\xdf\xda\xfb\xd6\x3f\x8a\x6f\x2d\x5c\xe4\xd5\xed\xe3\x38\x91\x63\x36\xce\x9d\xe4\x8b\xcb\xd1\x09\xa7\x54\xf0\xc9\xa9\x13\xbb\x7c\xf6\x63\x14\xdf\x93\x54\xba\xeb\x2c\x1b\xe8\xf5\xed\xfd\x72\x33\xbf\x4b\x9f\x6a\x35\x8e\x34\xc1\x3c\xc5\x92\x2c\x96\xf1\x28\x73\x4d\xe5\x87\xa9\x29\x96\x9b\x12\x7b\xaf\x6f\xc9\xf4\xb0\x4c\x13\x5b\x97\xd1\x50\xb0\xeb\x9a\x96\xaa\x01\x55\x79\xa9\x13\xcd\x95\x43\xab\x70\x0d\x35\xad\xb1\x25\x35\xb7\xea\x3e\x5a\x90\x14\x87\x51\x7c\x43\xcd\x35\x19\xaf\x9d\xc6\xf3\x7a\x9b\xad\x56\x3d\x3b\xd9\x78\x56\xe4\x8c\xba\xe2\x84\x12\x26\xe4\x2d\xf4\x70\xb6\x58\x6f\xee\x16\x1f\xef\x73\xb7\x46\xf4\xca\xd8\x2b\xa3\x79\x3b\xdf\x43\xe8\x3c\x82\xcc\x7d\x5c\x19\xbe\x06\x1e\x71\x88\xb4\x2b\xda\x10\xd2\x11\x44\x58\xe8\xb7\xc9\x68\x32\xf9\x70\x86\x26\xa3\xc9\xb9\xfe\xfb\x22\xfa\x45\xff\xad\x9f\x44\x0f\x3e\x9c\xa1\xf3\x33\x74\xa1\xfe\x55\x3f\x4e\xfe\x52\x63\x07\x3a\xbd\x3d\xa1\xfc\x82\x7c\x83\x5e\xf1\x7b\xc5\xff\x71\x8a\xcf\x28\x50\x49\xb0\xf7\xb1\x4a\xf5\x69\xe8\xdf\x10\x4a\x24\x24\xad\xe8\xcf\xb9\x76\xe1\x60\x0f\xf2\x37\x0f\x23\xb4\xe3\xec\x49\xee\x6f\xb0\x23\x19\xb7\xd0\xf9\xa4\xa4\xfe\xf1\x0c\x4e\xe8\x7f\xb6\x91\xd2\x1b\x40\x6f\x00\x46\xd3\x3f\xba\x01\x48\x27\xb0\x05\xd0\x38\x00\x34\x27\xe2\x46\x45\xba\xcf\xc3\xff\x40\x06\xd0\x3a\xa9\x56\xca\x94\x14\xcc\x3a\x28\x54\x5a\x63\xeb\x95\xaa\x57\x2a\xe7\xc7\x7e\x82\x26\xe0\xcc\x4f\xaf\xc1\xff\x19\x1f\x2a\xaa\xf8\x1a\x84\xca\x4f\xd9\x54\x54\x3d\xca\xad\x85\xd7\xd1\x32\x81\x91\xb1\x54\x84\xad\x62\xeb\x8f\x14\xfa\x0f\xfd\xd4\x52\x5b\xa1\x96\x23\x58\xb9\xb1\xe0\x8d\xbe\x4f\x30\xb9\x2b\xa3\x1b\x24\x54\x57\x38\x7b\x8d\x9e\xf6\x40\x11\x0f\x29\x25\x74\x87\xb6\x9c\xf9\x48\x7f\x63\x00\xe2\x8c\xc9\x33\x14\x0a\x40\x72\x0f\x68\xcb\x3c\x8f\x3d\x29\x92\x68\x54\x08\x6f\x25\x70\x84\x5d\x57\x3d\xc3\x29\x37\x71\xf4\x1f\x94\x91\x21\x8f\xd0\x47\x24\x19\xc2\xc6\x10\x13\xec\x96\x78\x80\x0e\x24\x1d\xe2\xeb\x14\xfe\x06\x79\x14\x0d\x05\xfa\xff\xf1\x48\xc1\xc6\x31\x40\x8f\x68\x1c\xdf\xd8\x3d\xce\x18\xea\x1f\x23\x9a\x12\xab\xac\xc9\x8e\xbe\x70\x65\xd0\x82\xcb\xe0\x87\xaa\xa9\xea\x07\x4b\xc9\x77\x40\x15\x65\x4a\x9d\xbb\x56\xef\xa4\x2e\x96\x97\xbc\x56\x1d\xb3\x3b\xfa\x46\x85\x9b\xfc\x7e\xd4\x14\xa5\x13\xb4\x99\xe5\xef\x66\x98\x3f\x57\x18\x05\x3e\x35\xf7\x36\xa5\xfd\x56\x58\xdf\x0a\x0b\xa1\x0d\x4c\xf9\x53\xc2\xc1\xcd\xc8\xf5\x37\x8f\x28\x13\x52\xcd\xb1\xd6\xc6\xb8\x38\xfa\x87\x24\xdb\x98\x0b\x49\xee\x1e\x98\x98\x82\x34\xdd\x6c\x80\x5e\x23\x37\xfa\x8e\x0f\xd5\x4b\x48\xd5\xc8\xc8\x96\x80\x8b\x48\xa0\x2c\x3b\xe9\xcd\x8c\xb8\xba\x4b\x73\xab\xa3\xd0\x6f\x2e\xc9\x60\xbc\xf0\x41\x7d\xf5\xc4\xd8\xe2\x4c\xa7\x6a\x3f\x10\xaa\x1c\x89\xb1\x5e\xaf\xd1\x0d\xf1\x3c\x3d\x77\x0a\x4f\x86\x10\x23\x1f\x65\xc8\x44\x79\x7f\x37\x74\xc0\x8d\x2f\xe5\x1a\x19\x3c\xde\xb0\x50\x46\xf7\x87\x08\xed\x8c\x68\xaa\x1a\x88\x6d\xd1\xad\xa6\xdf\xc4\xdf\x41\x80\x7c\x10\x02\xef\xb2\x1c\x22\x15\x9c\xa5\xf9\x8c\x92\x64\x8e\xb9\xf6\xc9\x6b\x22\xf4\xcd\x69\x25\x58\x2c\xac\x9a\xed\xc7\xe4\x6a\xc1\x1c\x2c\x7a\x86\x9e\x11\xf8\x81\x3c\xae\x25\x27\x74\xf7\x05\x07\x6f\x4b\x1d\x46\xca\x56\xec\xf1\xc4\x36\xad\x71\xc7\x5a\x0e\x9a\xdb\xb8\x8a\x95\xa4\x84\x8d\xee\x23\xcc\xe1\xd2\xdb\x0a\xea\xfa\x2b\xdc\x4c\x97\x03\x27\xd9\x1c\x8e\x1a\x4f\x8e\x3d\x77\x4b\x5d\x8e\x53\x9a\x9f\x9e\x10\x78\xfe\xa6\xba\x6a\x16\xad\x47\x51\x23\xca\x72\xae\x7c\x6a\x77\x31\xd3\xb8\xbc\x35\x35\xaa\x5d\xc1\x26\x6b\x18\xd4\xc9\xa3\xbc\x2d\x5b\xc1\xe0\xb4\x2a\x9a\x6c\x0c\x91\x16\x47\xd1\x66\x8b\xb5\x78\x01\x65\x99\x53\x4a\xd0\x8e\x5f\x71\x79\x4c\x56\xcd\xea\x6e\x72\x31\x75\xde\xe4\x50\xaf\xf8\x15\xfb\xc2\x79\xed\xaf\x7a\xa1\x39\x69\x02\x95\xe7\x01\xaa\xd7\xfd\xa4\x31\xd4\x9e\x2d\x68\x62\xd6\x6d\x64\x4d\xc2\x6f\x61\x20\x2a\x40\xff\x2d\x00\x00\xff\xff\xc9\xe1\x1f\x7d\xf5\x6f\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 28661, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\xdb\x30\x14\x7d\xcf\xaf\xb8\x84\x40\x61\x34\x1f\x1d\x7b\x32\xe4\xc1\xa4\xda\x16\x68\xd3\x60\x27\xdd\xa3\xb9\xb1\x55\xe7\x12\x59\xf2\x24\xd9\x69\xc9\xfa\xdf\x87\x1c\x69\xe9\x46\x53\x96\x17\x73\x3f\xce\x39\xbe\xe8\xde\x93\x2b\xf9\x44\xa5\x89\x7a\x00\x3b\x42\x41\xc3\x63\xc1\xe5\x00\xb9\x92\x96\x4b\x1b\xc1\xaf\x61\x97\x03\x18\xae\x5b\xae\x23\x9f\x01\xd4\x4a\xdb\x08\x3e\x4f\x26\x93\x1b\x5f\xe3\xcf\x96\x6b\x89\x22\x73\x50\xca\xb9\x39\x81\x4b\x8d\x4f\x28\xf1\x54\x00\x68\xb4\x88\x60\x70\xf8\x96\xc4\x5f\xe3\x45\x9c\xad\x93\xbb\xd7\xde\x5b\x62\x37\xd3\x91\x50\x0a\xb5\x41\x91\xd5\x5c\x57\x64\x0c\x29\xe9\x95\x87\xd0\x2f\xb9\xbd\x16\x64\xec\xf5\x1e\x6d\xbe\x05\xc9\xed\x5e\xe9\x1d\xc9\x72\x44\xc6\x92\x1a\x91\x1a\xb7\xa4\x6d\x83\x22\x68\xf7\x2f\xa0\x16\xdc\x58\x92\x68\x49\x49\xdd\x88\xcb\xb8\xfe\x7f\x5c\x5a\x4d\x97\x31\x4b\xb4\x7c\x8f\x2f\x67\x39\xc7\x3d\x9d\xf0\x9f\xce\x01\xcf\x77\x36\xee\x7b\xbe\x8d\x75\x6d\x3e\xe8\x36\x56\x99\x1c\x05\xc9\x32\x80\xa8\xc2\x92\x47\x50\xa8\x7c\xc7\xb5\x9b\xa9\xdb\xde\xf1\x1b\xb5\x93\xd1\xcd\xa4\x83\x71\xd9\x92\x56\xb2\x72\x97\xe5\xc5\xe3\xd9\x6a\xfe\xc8\xb2\x45\x7c\xcf\xd2\x65\x3c\x63\xd3\xc1\xe1\x4f\xfc\xea\x31\x29\x4b\x1e\x59\x92\xcd\x12\x76\xcb\x16\xab\x79\x7c\x97\x66\xeb\x94\x25\x0e\x37\x1d\x1c\x42\xf8\x01\x7a\x19\xa7\xe9\x8f\x87\xe4\x76\x3a\x38\x84\x30\xa0\x97\xc9\xc3\x3d\x5b\x7d\x67\xeb\x34\x73\xc4\xf9\x8c\xb9\x53\x74\xc0\x53\xa3\xbb\xcd\xa3\x2b\xaa\x0a\x65\x11\x66\xf7\x8e\xf1\xd9\xf8\xad\x8b\x1a\xdd\x5d\xcd\xd8\xef\xea\x05\x2b\x11\x48\xad\x0f\xae\xbe\x5c\x05\xab\x05\x1f\xba\xf2\x5f\x5e\xfc\x2f\x4d\xfe\x5c\x2b\xc3\x03\xbf\x73\xe4\x78\x6b\x6d\xdd\xeb\xfd\x6c\xdc\x01\x7b\xbf\x0c\xa1\x45\x4d\xb8\x11\x3c\x82\xf0\x66\x1d\xa7\xe0\x26\xd7\x54\x3b\x60\x04\xfd\xc6\x38\x13\x57\x1c\xac\x02\xa1\x4a\x92\x50\xa0\xd9\x6e\x14\xea\xa2\xff\x8f\x4a\x78\xcb\x77\x54\x6a\x34\x66\xaf\x74\xf1\xae\xca\xef\x00\x00\x00\xff\xff\x77\x6e\x69\x96\x7a\x04\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1146, mode: os.FileMode(420), modTime: time.Unix(1547447273, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\xd8\x04\xb0\xdd\x46\x72\xd2\x97\x3d\x54\x41\x51\xf4\x0e\x01\xae\xb8\xdd\xbd\xe0\x36\x5f\x0e\xbd\xac\x40\x53\x63\x9b\x0d\x45\xea\xc8\x91\x1d\xa3\xe9\x7f\x3f\x90\x94\x64\xd9\xf1\x5b\xdc\xb4\xb9\x76\x93\x0f\xb1\x2d\x91\x33\x0f\x67\x1e\xce\x90\x43\x72\xad\x86\x62\x64\x93\x27\x00\x85\xd1\x39\xd2\x18\x4b\x1b\x85\xa7\xee\x21\x00\xd7\x8a\x50\x51\x02\x70\x13\xf9\x07\x00\x23\xa9\x07\x4c\x26\xd5\x2f\x00\xcb\x0d\x2b\x30\x15\x8a\xd0\x4c\x98\x4c\xe0\xe4\x95\x7d\xb2\xf0\xaa\xa5\xc6\xfd\x45\xf0\x51\x0f\x52\xc5\x72\x4c\xa0\x23\x2c\x09\x1d\xe5\x68\xc7\x9d\x46\xe2\x01\xfc\x73\x82\xc6\x88\x0c\x81\xc6\x58\x29\x84\x0c\x87\xac\x94\x04\x4c\x65\x95\x60\x20\x66\x46\x48\x16\x86\x46\xe7\x40\x63\x61\x9d\x64\xc0\x09\x9a\x19\xbc\x02\x8b\x5c\xab\xcc\xc6\xeb\x91\x36\x40\x01\xae\xca\x01\x1a\x85\x84\x36\xb5\xd9\x32\x62\x87\xd9\x68\x89\x09\xa0\xca\x0a\x2d\x14\xcd\x3b\x02\xb8\x91\xd8\x82\x71\x6c\xb5\x6f\x9e\x2f\x3e\x8a\xe0\xf0\xd3\xc5\xd9\x2f\x67\xbf\x9e\x5d\xfc\xeb\xdf\xe9\x6f\xef\x7e\x3d\xfb\xfd\xfc\xdd\xdf\xce\x3e\x37\x8d\x0c\x4a\x36\x40\xb9\x0a\x80\xd5\xa5\xe1\x98\xfa\xf7\x36\x81\x0f\x69\x9a\x23\xb1\xb4\x0d\x1c\xcd\x44\x70\xf4\xa6\x3d\x82\xdb\xef\x6b\xf0\x69\xa1\x0d\xf9\x56\x97\x2d\x74\x8c\x93\xd0\x2a\x81\x2b\xc4\xa2\xf5\xd8\xe0\x08\xaf\x13\x08\x7e\x22\x94\x98\x23\x99\xd9\xe9\x9c\x2f\x4f\x6a\xa7\xfd\x1e\x9c\x12\xa0\xc3\x50\x1b\x40\x35\xd1\x33\xb0\xc4\x1a\x7b\x2d\xf8\xde\xbf\x8e\xfc\xeb\xce\x4e\x4e\x72\xaa\x05\xb7\x69\xc1\x68\x9c\x40\xdf\xf7\xec\xdf\x42\xb2\xb3\x33\x0b\x9d\xdd\x8f\xe1\x0b\xed\xb5\x10\x13\x0a\xcd\x3e\xd6\xed\xc4\x4f\xa3\x60\x0d\x37\x9a\xce\x46\xe5\x2c\xcb\x0c\x5a\x9b\xa6\xab\x5c\xec\x90\x30\xa5\x34\x31\xa7\x2e\x9d\xdb\x26\x15\xda\x03\x5b\x85\xc9\x60\x21\x19\xc7\xdb\xb0\xba\x1f\xfe\x48\x2e\x9f\xf5\xba\x6f\x93\xe4\x3f\xd9\xb3\xde\xdb\xd3\xae\xfb\x58\x68\xe7\x7b\xe6\x3e\x44\x1c\x9e\x24\x27\xaf\x8e\x5f\x1f\xb7\xde\x87\x09\x1a\xd0\x27\xd0\xc2\xde\x1a\x61\x8d\xc2\x37\xca\xd9\x0a\xeb\xac\x1e\x66\xf0\x57\x37\x6e\x01\xda\xc5\x57\xcd\x6c\xdd\xcd\x12\x8b\x23\x68\x3a\xdf\x99\x1e\xeb\xf8\xb0\x4d\x63\xdd\x77\x69\x0e\xa4\x6b\xf9\x7a\x00\x67\xd7\x5c\x96\x19\x82\xd5\x39\x82\x1e\xfa\x18\x1a\x66\x62\x35\x7f\x80\xc6\x8c\x60\xcc\x26\x08\x39\xb3\x56\x4c\x10\x38\x33\x99\x50\x4c\x0a\x9a\xb5\x24\x5d\xb8\x90\x2a\x85\x25\xc8\xd9\x0c\x14\x62\x06\xa4\x61\x80\x50\x98\x52\x61\x06\xc3\xd2\xd0\x18\x0d\xe4\x7a\x22\x94\x9f\xf2\x53\x66\xb2\x23\x60\x16\x84\x1a\x6a\x93\x63\xd6\x92\x36\x98\x41\x81\xc6\x3d\x66\x8a\x63\x15\xc7\x99\x64\x03\xe1\xd4\x02\xa1\x25\xa1\x46\xf1\x06\xd3\x02\x97\xa5\x25\x34\xde\x22\x70\xb9\x62\x1e\x75\x75\x49\x03\x5d\xaa\xec\x46\xa8\xf0\xd9\x9a\x02\x3e\x5e\xf4\xe2\xa7\x9d\x15\x7e\xc8\x8c\x2e\x36\x69\x26\x5e\xa4\x85\xc1\xa1\xb8\xfe\xb6\x7a\x9d\xf5\xd1\x45\x95\x6a\xea\xac\xd6\x1e\x3f\xeb\xed\x23\x3c\xf5\x86\x4c\xd3\x95\x42\x3d\x65\x52\x92\x76\x3f\xe0\xbb\xc8\xe6\x45\x9a\xe9\xa9\xb2\x64\x90\xe5\x5f\x4d\xcd\x98\xa8\x48\xbb\xde\x09\x37\x2c\xcb\x85\xda\xd3\x15\x3b\xa8\xaa\xf9\xd9\x95\x83\x1b\xe3\xf2\xe4\xcd\x40\x78\x4e\x10\x1a\xc5\xe4\x4d\xce\xae\x6f\xb4\x11\x23\x37\xd5\xb6\xa3\x58\xb1\x50\x2a\xb4\x14\x7c\xf6\xb0\x4b\xa5\x83\x85\x3c\x5c\x2b\xb3\x2e\x34\x74\xfa\xd5\xab\x36\x42\xcb\xc7\x98\xe3\x62\x3b\xe7\x93\x4e\xfc\x00\xab\xaf\x5f\xfe\xfa\x1d\x2e\xbb\x82\xd7\x4f\x9d\xd1\xa2\x5c\x2b\x41\xda\x08\x35\x5a\xcf\x92\x66\x99\xf6\x48\x94\xbd\x89\xf2\x63\x2c\xd3\x77\xa0\x4c\x21\xa4\xa6\x47\xa2\xec\x4d\x94\xef\x33\xa2\x38\xa7\xef\xc2\x8e\x11\x93\x12\x1f\xe3\xc8\x9f\x8c\x1e\xc1\xeb\x6b\xf8\x71\x50\xbb\xb8\xb5\xd3\x7f\x77\xfe\x1e\x1c\x2c\x34\x2b\x77\xfa\x73\x70\x11\x2b\x44\xd5\xb0\xf3\xcd\xbd\x51\x31\xa2\x45\x3a\x47\x94\x04\xdc\x38\xe7\x42\x49\xda\xb4\x5d\x03\x0b\x7f\x9c\xa5\x43\xe1\x50\xf4\x27\xcc\xf4\x4d\xa9\xfa\x16\xb9\x41\xb2\xfd\x39\xfa\x58\xe8\x7e\xe5\x1c\xc6\xb9\x2e\x15\xf5\x39\x8b\xb9\x99\x6b\x1c\x20\x33\x68\x52\xd2\x57\xa8\xf6\x92\xe7\x7b\xfe\xff\xd3\x68\x2e\xe6\x74\xd1\xb8\xd1\x0e\x35\x81\xa5\xba\x42\xcb\x1e\x95\x03\x63\x3b\xe1\xc9\xcb\x97\x2f\x36\x10\x52\xe9\x0c\x2d\x74\x5d\x5f\x89\xd4\xdb\x42\x4a\xdf\xba\xf3\xe3\xf0\x62\xc7\x09\xe5\x86\xbd\x0b\x97\xf6\x29\xd1\x38\xd9\xab\x6b\x34\xf7\x4f\x80\x1d\x2b\x3f\x0e\xd1\x32\x8d\xeb\x4a\x57\xbc\x50\xd7\x5a\x86\xd8\xce\x3f\xeb\x71\xf6\x59\x21\xfa\x93\x93\xbe\x67\x53\xff\xf0\xf0\xd3\xc9\xe7\x7e\x61\xf4\xf5\xac\x4e\x52\x0d\x5f\x6f\x97\x4a\xff\x11\x88\x0a\xfc\x5d\x36\x11\x56\x9b\x3a\x55\x1d\x34\x7d\x7c\x31\x46\x58\x30\xf8\xdf\x52\x18\xcc\x9a\x6e\x61\x78\x70\x12\xff\x25\x7e\xe1\x33\xb0\x64\x84\xe6\x08\xa6\x63\x34\xd8\x08\x84\x65\x0c\x5d\x1a\x6b\x8b\x30\xf5\xff\x7d\xb8\x84\x01\x8e\x84\x82\xa9\xa0\x31\x74\xe6\xf5\xcc\x4e\x2f\xd4\x8a\x06\x88\x0a\x0c\xe6\x7a\xe2\x94\x87\xb4\x8e\x8d\xb8\x7a\x00\x75\x8d\xa9\x8e\x1e\x31\x04\xe4\x2e\xfb\x87\x69\x6a\xfd\xca\xa1\xc1\x55\x37\x04\xd2\x8d\x30\xb7\x77\x16\x38\x71\x6b\x0c\x87\xae\x92\x79\xdb\x26\xef\xd5\xb2\x05\x8e\x23\xf7\xff\xf9\x91\xd3\x31\xef\x09\xcc\x20\x68\x25\x67\x80\xd7\x85\xb6\x98\x81\x56\x0b\x28\x1a\x89\x7f\xbf\xb8\x38\x6f\x20\x9d\x42\x69\x11\x7e\xda\xe4\xe4\x4f\x27\x9f\x93\x97\x27\xaf\x5f\x2e\x3a\xfa\xa7\x46\x9e\x50\xa1\xda\xc6\x99\x45\xe8\x3a\xef\xa0\xb2\x65\xcb\x2f\x1d\x1b\x74\x86\xa4\x08\x63\x66\x55\x87\x82\xad\x33\x61\xd9\x40\x62\xe6\x3d\xd2\x48\x74\xb0\xa3\x88\xb3\xd0\x3d\x72\xc1\xf9\xcd\x71\x63\xfe\xa1\x64\xa3\xde\x1a\xf2\x38\x17\x08\x0b\x4a\x13\x28\xe4\x68\x2d\x33\xb3\xb0\x64\x1b\xeb\x52\x66\x30\xc0\xc6\xbd\x62\xc9\xb0\x3f\xbb\x76\x8d\x34\x64\x46\x0a\x34\xe0\xb2\xb8\xd0\xca\x1e\x81\x36\x20\x08\xa6\x42\x4a\xe0\xcc\x19\xcd\xa1\x6c\xca\x8d\xbe\x66\x18\x9c\x9f\x01\x4d\x05\xc7\x78\x4b\x40\xae\x87\xf7\x18\x93\x1f\x63\x72\xed\xea\xaf\x13\x93\xfb\x35\xd5\x36\x2c\x26\x2a\xbf\xce\x17\xa0\xdb\xe8\x5b\x75\x88\x9a\x0e\xf7\xb0\xd6\xbd\x97\xb5\xde\xda\xb3\xa1\x30\xe8\xdd\x17\x78\x64\xca\xbb\x1d\x82\xec\x80\xc0\x4d\xf0\x7d\xce\x48\xd2\xaa\xef\x12\x0b\x02\x89\x7c\xbc\x78\x7b\xb7\x33\xa2\xad\x58\x1d\xe7\xf6\x43\xba\x81\xb5\xb7\x49\x7f\xe7\xe3\xbf\xed\xc0\x77\x3e\x02\xdc\x2d\x22\xec\x77\x4c\x78\xf8\xfc\x0b\x03\x59\x3d\xce\x87\x38\x03\x5c\x25\x67\xef\x7d\xd7\x3d\x00\xd8\x12\x8a\x0a\x9d\xdd\x3d\xfa\x6c\x3a\x19\xf7\xeb\xae\x21\x0c\x85\xb1\x04\x34\xd5\xc1\x71\x61\x89\x55\x18\xb4\xa8\xe8\xc8\x09\x68\xad\x2a\xea\xd4\x0f\x83\x99\x5f\x18\x84\x22\x83\x45\xee\x16\x42\x1f\xf5\x60\xd3\x99\xdf\x1d\xcf\xb8\xbf\x7a\x1c\x5b\xd2\x6e\x45\x86\x9c\x99\xd4\x0f\xc9\x03\x20\x46\xa5\x5d\x05\x60\xe1\x7c\x69\xf7\x09\xbf\x05\x40\x50\x9c\x93\xbc\x8b\x4e\x37\xea\x2f\xd2\xfa\x7d\x84\xc3\x07\xbe\x0d\xd1\x0a\x73\x8f\x57\x21\xee\xfd\x2a\xc4\xa6\x80\x17\xb5\x23\xcc\x97\xee\x21\x90\x78\x3f\xc8\xe3\x68\xc8\xf6\x8d\xd6\xe4\xbf\xc6\x05\xe6\xed\x1e\x68\x68\x5d\x1f\xf7\x3f\xe2\x63\x26\xd4\x52\xa7\x2b\x9c\xad\xeb\x73\x85\xb3\xa5\xc6\x42\x85\x11\xa5\xf6\x4a\x14\xe9\x04\x8d\x18\xce\x42\x08\x73\x41\x79\x4e\x6f\xc8\x34\x86\x7d\x9e\x2d\x0b\xc7\x73\xa8\x62\xad\x62\xf9\xc2\x15\x8b\x87\xb8\x28\xf5\x75\x42\xf7\x01\x54\x91\x18\x42\x00\x86\xb9\x1a\xb7\xe7\x65\x59\x86\x99\x4b\x3f\x75\x2b\xa1\x3e\x22\x27\x6d\x5a\xfb\x5a\xbf\x5d\xf7\xd1\x74\xaa\xcd\x95\xd4\x2c\xf3\x61\x35\xad\x2f\xa8\x70\xa6\x7c\x32\x2b\x90\x8b\xa1\xe0\x4c\xca\x19\x78\xc6\xfa\x6a\x02\xf3\x39\x8f\x34\x08\x95\x09\xce\x08\x41\x90\x85\xe6\x72\x8b\x06\x83\x1c\xc5\x04\xc1\xc9\x04\x32\x6c\x38\x14\xfc\x8b\x12\xdf\x9a\xd4\xb3\x43\x20\xdc\x9c\x33\x56\x5b\xbb\xdb\xfd\xf0\xc7\xe9\xe5\xb3\xde\xa9\xff\x7c\xda\xeb\xdd\x74\xab\x6f\xa7\x21\x9d\xfc\x60\xf9\xe4\xd2\x9f\x75\x29\x39\xf3\xf6\x80\xfa\xfa\x8d\x2f\xe6\x08\x0b\x63\x6d\x29\x71\x53\x6b\x8d\x01\x03\x9d\x34\x8d\xd1\x4c\x85\x45\x60\x0a\xf0\x9a\x0c\xab\x10\x57\x45\x36\xb7\x5f\xee\xcc\xf9\xe9\xf6\x9a\x3e\x36\x55\x91\x6a\x6d\x0e\x4a\x16\x53\xcf\x63\x62\x7c\x4c\x8c\x2e\x31\x3e\xa9\xb6\x16\x4b\x37\xba\x43\x8c\x0e\x47\xb5\x69\x81\x26\x17\xd6\x97\xed\xc2\xf3\x28\x9c\x95\x54\xdf\x6b\x09\xd5\xcf\xc5\x32\x44\xe4\x54\xd5\x5f\xab\x92\x8a\x2f\xa6\x54\x8f\x42\x4e\xc8\x59\x51\xb7\x71\x4c\x2f\x8d\x7c\xb3\x50\x00\x17\x39\x1b\xb9\xa4\x62\x74\xde\xba\xbc\x9b\x4c\x9e\xc7\x2f\xe2\x93\x79\x8b\xf3\x52\xca\x73\x7f\xf1\x25\x81\xf7\xc3\xdf\x34\x9d\x87\xcd\x85\x6f\x11\xca\xb8\xf5\x00\x5e\x1f\xbf\x3e\xee\xbb\x89\xe3\x7f\x2f\x64\xa6\x68\xc5\xcd\x76\x9f\x69\xe7\x8f\x5b\x5f\xe3\x59\x2e\x2b\x19\x79\xce\x54\x56\xcb\x88\x22\x4b\xda\xb0\x11\xc6\x64\xb3\x41\x6c\x90\x50\x39\xdf\xbc\xf9\x79\xdc\xb4\x08\xc2\x63\x97\xcc\xdf\x6c\xd1\xf0\xbf\x00\x00\x00\xff\xff\xb8\xd0\x81\xbe\x78\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12152, mode: os.FileMode(420), modTime: time.Unix(1547445475, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xdb\x8a\x1b\x31\x0c\x7d\xcf\x57\xe8\x2d\x50\xe2\xdc\x28\x65\xd7\x5f\xb1\x7f\x50\x14\xfb\xec\xc4\xd4\x37\x6c\x4d\x66\x53\xfa\xf1\x65\xc6\x33\xc9\xa6\xa4\xb0\x8f\x3e\x17\xe9\x58\x92\x49\xf1\xdd\x75\x55\xaf\x88\xb8\x97\x54\x0d\x7b\xa8\x06\x8e\x18\x91\x49\x51\x10\x45\xd3\x1f\x35\xbd\x89\x10\xf9\xe4\xa1\x9a\x54\x92\xfa\x8d\x92\x34\x49\xe9\x31\x0b\x02\x7f\xcc\x6c\x9f\x55\x61\x81\xa6\xc3\x7e\xe6\xc6\x72\xec\x22\xca\xd8\xc4\xf4\xa5\x20\x9a\xab\x12\x2e\x1d\x44\x65\x14\x83\x28\xdc\x8d\x8e\xed\x97\x2c\x16\xef\xdc\x7b\xd1\x74\x98\xd5\x55\xa6\x74\x83\x8b\x36\x0d\x9a\x7e\xec\xeb\x4c\x64\x8e\xce\xdc\xf1\x05\x16\x67\x7e\x29\x17\x05\xe5\xc2\x5e\xd3\x71\xc1\x1f\xbe\xa7\xe4\x5c\x50\xcf\xc9\x5b\x4d\xdf\xc3\x53\x45\x57\xd8\x60\xfc\x81\x4b\x56\xd3\x31\xac\x56\x15\xe5\xe2\x0c\xa6\xd9\x76\x2c\x18\xf8\xda\x46\xda\xf9\x74\x62\xff\x33\xa3\x04\x57\xab\x4b\xb1\x36\x5c\xd1\xfa\x1b\xb5\xd9\x07\xce\x75\x7d\x07\x71\x41\x94\x1b\xd0\x41\x36\xde\x55\xd9\xf4\xd9\xb2\x60\x33\xb0\x98\xf3\xc6\xc2\x43\x40\xc5\xa5\xad\x61\x11\x8f\xad\x4b\xbb\x25\xc3\x27\x67\x53\x7f\xf2\x8f\x16\x75\x5b\xfe\x13\xf3\x08\x17\x98\x14\x02\xa2\x65\x19\x03\x3f\xad\x47\x39\xd9\xfa\x6f\xc6\x46\xcf\x9d\x10\x6d\x4e\x2e\xca\x7f\xfc\xb7\xb4\x13\xed\xc2\x74\x08\x96\x5d\x3d\x73\x3c\xbc\xbe\x1e\x77\x0f\x49\x8b\xb6\xb8\xdc\x95\x6f\xbd\xf7\x6f\xc9\x3b\x73\xd5\xc4\x7e\xe0\x6b\x6b\x82\x8f\x9c\x2a\x96\x01\xbf\xec\x77\x67\x91\x3c\x5f\x76\x08\x1c\xed\x42\x3d\xd6\x9e\x41\xa5\x2c\x4e\x7d\xb7\xc4\x6d\x5b\xbc\x71\x63\x68\xc4\x65\x4d\x2f\xfb\xf5\xea\x6f\x00\x00\x00\xff\xff\xc0\xfd\x0e\x9f\x4f\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 847, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":         stacksCorednsStackYaml,
	"stacks/istio-crd-stack.yaml":       stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":           stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":      stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":  stacksRioAutoscalerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":         &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":       &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":           &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":      &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":  &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
