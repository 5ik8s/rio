// Code generated by go-bindata.
// sources:
// stacks/cert-manager-crd-stack.yml
// stacks/cert-manager-stack.yml
// stacks/coredns-stack.yml
// stacks/istio-crd-stack.yml
// stacks/istio-stack.yml
// stacks/istio-telemetry-stack.yml
// stacks/local-storage-stack.yml
// stacks/nfs-stack.yml
// stacks/storageclasses-stack.yml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksCertManagerCrdStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\xca\x83\x40\x10\x06\x7b\x9f\x62\xe1\xaf\xf5\xc7\x2e\xa4\xb5\x4a\x95\x47\x90\xcd\xf9\xa9\x87\xe7\x9e\xec\xee\xe5\xf9\x43\x24\xfd\xd9\x0e\xc3\xc0\x6c\xe5\x05\x15\x38\xec\xde\x10\x09\xef\xb0\x83\x03\xa6\x31\x14\xf3\xbc\x8f\x0a\xcb\x45\x03\xc6\x09\x73\x94\xe8\x31\xcb\x69\xfe\x51\x80\x3a\xed\x2c\xbc\x40\x1b\xa2\x96\x1e\x66\x05\xda\x7d\xf9\x0f\x77\xdb\xcd\xba\x98\xff\xdf\x3d\xa7\x63\xe5\xfe\xd4\x86\x95\x53\x82\x2c\xa8\x9a\x4f\x9d\xae\xf4\xa0\x1e\xe7\x18\xd8\x6b\xc5\xca\x52\x4b\x43\x2a\xe6\xd0\x0b\x23\x9f\x00\x00\x00\xff\xff\xee\x88\x6c\x5a\x37\x01\x00\x00")

func stacksCertManagerCrdStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerCrdStackYml,
		"stacks/cert-manager-crd-stack.yml",
	)
}

func stacksCertManagerCrdStackYml() (*asset, error) {
	bytes, err := stacksCertManagerCrdStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-crd-stack.yml", size: 311, mode: os.FileMode(420), modTime: time.Unix(1544031211, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCertManagerStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x6a\xc3\x30\x10\x44\xef\xfe\x8a\x25\x14\x02\x01\x25\xd7\xe2\x9b\x29\x21\xf4\x90\x12\x42\xef\x41\x91\xa7\x46\x54\xd2\xba\xbb\x72\xda\x50\xfa\xef\xc5\xb1\xd3\xb8\xf4\xd2\xe3\xce\xbc\x91\x34\x2b\x85\x9c\xbc\x83\x96\x05\x91\x83\x64\x13\x6d\xb2\x0d\xa4\x9f\x89\x9a\xc0\x47\x1b\x0e\x2d\x24\x7a\x55\xcf\x49\x07\xdd\xd0\x7c\x71\xc1\x47\x7a\xf9\x7a\xaf\x4b\xcf\xab\xc5\xfc\x66\xe3\x23\x23\x5d\x32\x2b\x9f\x1a\x81\x2a\x74\x62\x3b\x4e\x2f\xbe\x89\xb6\x9d\x8a\x0a\x27\xc8\x53\x05\x27\xa4\xfc\x1b\x19\x1e\x3c\x91\x5a\xae\xc7\xd1\x47\xdb\xa0\xa4\xbb\xcf\x87\xf5\xfe\xf9\xb0\xad\x9e\xaa\xcd\x7a\x7f\x78\xdc\x56\x9b\xf5\xd7\x0d\xd8\x75\x21\xec\x38\x78\x77\x2e\xa9\x0a\xef\xf6\xac\x17\xcf\x71\x8c\x36\xd5\xd7\x86\xd3\x6d\x8c\x92\x31\x01\xb6\x86\x18\x04\xb8\xec\x39\x99\x64\x23\xb4\xb5\x0e\x23\x21\x9e\x8d\x9e\x35\x23\xfe\x44\x5c\xe8\x34\x43\x8c\x40\xb9\x13\x87\xff\x64\x02\x37\x99\x35\xd7\x90\xeb\xd5\xb3\x2c\x1d\x66\x45\xf1\xd6\x41\xf3\xf0\x11\x86\x4e\x56\xbc\x3d\x06\x94\xf4\xb7\x6f\x41\x54\x43\x9d\xf8\xb6\xc7\x4b\x9a\xf5\x7d\x68\xec\x33\xec\x81\x32\x53\xa7\xfd\xa9\xdf\x01\x00\x00\xff\xff\xa8\x8c\x1a\x9d\x06\x02\x00\x00")

func stacksCertManagerStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYml,
		"stacks/cert-manager-stack.yml",
	)
}

func stacksCertManagerStackYml() (*asset, error) {
	bytes, err := stacksCertManagerStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yml", size: 518, mode: os.FileMode(420), modTime: time.Unix(1544031211, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x2d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x4d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x18\x0e\xf6\xc8\x72\x05\x50\xca\xf2\xbf\x54\x19\x43\x96\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\x28\x1f\x12\x45\xe2\x45\x63\x44\xe5\xf2\xb8\x68\x9c\xa6\x67\xa4\x80\x19\x19\xb4\x9b\x38\x23\x09\x17\xb5\x72\x60\x43\xa3\x8c\x21\xa1\x28\x29\xb0\xe9\xff\x5a\x2c\x87\x97\x2f\x45\xc3\x60\x03\xa3\x9e\x08\xdf\x60\x53\xe2\x4c\xa8\xfc\x9b\xf6\x41\x39\x97\x47\x8a\xd3\x71\xfc\xf7\x23\x0b\xfe\xef\x45\x9d\x28\x7a\xcc\x23\x4e\x0c\xf2\x63\xbf\x19\xfe\x86\x5e\xcf\x20\xa0\xc5\xac\x5b\x42\x8e\xee\x45\x14\x9d\x16\x14\xad\xf4\x88\x30\x74\xab\x79\x30\x23\xbd\x58\x8d\x57\x4d\x09\x4d\xe0\x2a\x6b\x29\x60\x8c\x9c\xab\xc8\x2a\xed\x95\x31\x12\x9e\x76\xdf\xf6\x9f\x1e\x9f\x3e\xef\xbf\xee\xbe\x7c\x7f\x7c\xd8\xdd\x50\x43\x31\x49\x50\xce\x5d\x4d\xf1\x5e\x05\x53\x47\x35\xd0\xdc\xd6\x68\xea\x76\xd7\xa7\xda\x87\x48\x78\xb0\x0e\x67\x27\x67\x7b\x0b\xf1\x62\xf1\xfb\x6c\x7c\x4d\x91\x71\x26\xf7\x9d\xf8\x6f\x10\x9d\xe8\x3b\xb9\x19\xe4\x66\x68\x27\x93\xd6\x26\xf0\x3b\x70\x81\x9a\xac\xd3\x15\x2e\x42\xae\x3d\x66\xb2\xba\xde\x38\xba\xf8\xac\xdc\x3e\x21\x79\xcb\x6c\x63\xb8\x6d\xe5\x2c\xe7\xf5\x0f\x95\xf5\x08\x18\x4c\x8a\x36\x64\xbe\x87\x66\x59\xef\x91\x12\x95\xfb\x6e\x50\x1e\x39\xa9\xf9\x46\xcd\xa7\x1e\x51\x9f\x24\x8c\x39\x27\xd9\xb6\x97\x3c\x16\x43\xe4\xb6\xdb\x76\xed\x22\xc2\xd6\xab\x23\x4a\x38\x6d\x59\x1c\x35\x09\x1b\x67\xc1\x64\x2f\x7a\x51\x13\xe2\xd1\x47\x3a\x4b\xf8\xd0\xd5\x20\x12\x2a\xb3\x8f\xc1\x9d\x25\x64\x9a\xaa\xa2\xac\x95\x43\x09\xfd\xea\x4f\x00\x00\x00\xff\xff\xd5\x57\x8c\x0c\x68\x03\x00\x00")

func stacksCorednsStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYml,
		"stacks/coredns-stack.yml",
	)
}

func stacksCorednsStackYml() (*asset, error) {
	bytes, err := stacksCorednsStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yml", size: 872, mode: os.FileMode(420), modTime: time.Unix(1534733485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd3\x41\x4f\xfa\x40\x10\x05\xf0\x3b\x9f\x62\x13\xce\xff\xfe\x83\xde\xbc\x69\x24\xea\x0d\x81\x78\x25\xc3\xf6\xd1\x4e\x68\x67\x9b\xd9\x59\x88\xdf\xde\x58\x88\x44\x49\x76\x39\xbf\xdf\x9b\x76\xdb\x9d\x7d\xda\x42\x05\x86\xf8\x30\x71\x4e\xa8\x47\x1c\xc8\xa3\xde\xf8\x14\x2d\xf4\x1b\x45\x0c\x49\x3d\x36\x35\x76\x2c\x6c\x1c\x64\x94\x53\xe7\x83\xec\xb8\x99\x38\xf7\xcf\x3d\x23\x1a\x0b\x7d\x87\x8b\xd0\xb1\xff\xac\x4e\x61\xc5\xd1\x38\x54\x1c\xfe\x1f\x66\xd4\x0d\x2d\xdd\x8d\x7c\xde\x28\x62\x5c\xa6\x0e\x79\xb7\x0c\xc9\x50\x66\xaf\xeb\xf5\xe2\x71\xf1\xb6\x1a\xe0\x9f\x58\x6a\x96\xe6\x66\x9f\x87\xef\x29\x18\xdd\x3c\xf6\x47\xe7\x59\x0f\x53\x2e\x18\x2d\x9e\x79\xd0\xd0\xc3\x5a\xa4\x98\x77\x97\xdf\x9b\x77\x86\x7e\xe8\xc8\x0a\x4f\x25\x33\xe5\x6d\x32\xf4\x24\xbc\x43\xb4\x3c\x67\x89\x46\xe2\x4b\x43\x6b\x1a\x0c\x9a\x47\x2d\x49\xdd\x95\x50\x17\x1a\x88\x69\xe1\xf6\x45\xab\x39\xdc\xfa\xd5\x20\x87\x1c\x9d\x3a\x81\x1d\x83\xee\x59\x4e\x9b\xf0\xc1\x6a\x89\xba\x15\xf4\xc0\x1e\xd5\x25\xbd\xaa\xdf\xff\xdd\x9c\xf1\xa2\x17\x0b\xe7\xc9\xf3\xf1\x9c\x45\xfd\x42\x86\x23\x15\xe1\xd4\x51\xb2\x16\x62\xec\xc7\x57\x19\xbb\xe7\x4d\xfe\x9d\x5c\xd5\x67\x93\xaf\x00\x00\x00\xff\xff\x0b\xe5\x6d\x17\x42\x04\x00\x00")

func stacksIstioCrdStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYml,
		"stacks/istio-crd-stack.yml",
	)
}

func stacksIstioCrdStackYml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yml", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1544040565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9d\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x5e\xec\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x28\x8b\x4a\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\xd2\x0e\x42\x19\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x29\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xaa\x04\xa7\xbb\xd1\x06\xe8\x83\x49\x91\xd5\x05\x04\x39\x97\x6b\x0d\xc6\x8c\x94\xb4\x5a\x09\x01\xfa\x56\x31\x48\x51\x32\xf9\xf4\x29\x09\x10\x52\xd8\x4d\xa9\x9f\xa2\xbb\xc9\xdd\x38\x1c\x6b\x66\xee\x61\xa5\xc1\x6c\xae\x40\x90\x5d\x8a\xce\xfb\x26\x88\x32\xfe\x04\xfa\x1e\x72\xa5\xed\x0c\xf4\x16\x74\x8a\xb8\xb1\x5c\x61\x0b\x02\x32\xb0\x7a\xd7\x3d\xf9\x36\x1f\xdf\x8c\x6f\xc7\xf3\xfb\xaf\x8b\xbb\xe1\xed\x78\x36\x1d\x8e\xc6\xdf\xbb\x66\x4b\xbb\x54\x14\xc6\x82\xee\x0a\x45\x89\x48\x2f\xfb\x97\xe7\xc1\xac\x2a\xec\x52\x15\x92\xcd\x35\x59\xad\x38\x0d\x3e\x05\x21\x42\x99\xf7\x7c\x78\x73\x33\xf9\x75\x31\xbc\xfb\x5a\x25\x00\x56\xa4\x10\x76\xe4\xd3\x55\x83\x19\x37\x54\x6d\x41\xef\x0e\xc5\xe0\x93\x29\x81\xda\x39\xcf\x40\x15\x36\x45\xef\x9b\xb2\x15\x5f\x4f\x89\xdd\xa4\x28\xe9\x81\xa5\x3d\x1f\x60\x2f\xd7\xea\x69\x97\xec\x61\x4b\x2e\x89\xde\x55\xb0\xc2\xe8\x9e\x0f\xaa\xb7\xe4\xb2\x07\x72\xab\x22\xa8\x01\xbd\xe5\x14\x46\x65\xf0\x55\xc2\xbc\xbd\xda\x69\x4d\xb8\xbc\x2a\x34\xb1\x5c\xc9\x14\x7d\xb8\xa8\x1d\xca\x89\x06\x69\x67\x9b\xc2\x32\xf5\x18\x61\xce\xb3\xc8\x6b\x2e\x2d\x68\x0a\xb9\x13\x95\x75\xbe\x1f\x5f\x5d\xdf\x8f\x47\xf3\xda\x8e\x7b\xe1\x90\x65\x5c\x4e\x95\xb6\x29\x3a\xbf\xe8\xf7\xfb\x71\xd8\xae\x4d\xa6\x82\x48\x18\xb6\xb7\x45\x94\xda\x21\x63\xae\xb7\xf6\xb1\x70\xa1\x6c\xf7\xe4\x5b\x5d\xee\xd4\x59\xff\xb9\xd3\x09\xb1\xfb\x66\x8e\xb0\x65\xb5\x04\x59\x82\x30\x55\xe5\xbc\x38\x45\x5e\xee\x8f\xd6\x42\x2d\x89\x58\xe4\xa0\x33\x6e\x0c\x57\x32\x40\x31\x3a\x7d\x1b\xca\xd4\xf5\x4a\x5d\xae\x7a\x6f\x4f\x6b\x99\x04\xfb\xa8\xf4\x03\x97\x07\xe4\xae\xed\x41\x5a\x4e\x7d\x26\x0f\x60\x72\x0e\x4f\x16\xa4\x7f\x6f\xf7\xe1\xa3\x71\x00\x5a\x18\xab\x32\x0d\x46\x15\x9a\x02\x83\x15\x97\xdc\x99\x30\x91\x62\xad\xd5\xb3\x1b\xae\x59\x4e\xb4\xdd\x55\x2a\xaf\x07\x76\x6b\x71\xbb\x4e\x18\xef\x43\x26\xf7\xe2\x9e\xb1\xc4\x16\x7b\x94\x5e\x12\x1a\x45\x1c\x4e\xa9\x06\x62\xe1\x6c\x0d\xf6\x4c\x70\x63\xcf\x1e\x89\xa5\x9b\xb3\x22\x67\xc4\x42\x48\x75\x46\x72\x13\xd0\x20\x59\xae\xb8\xb4\xd5\x73\xae\x58\xf5\xb3\xaa\x77\x78\x94\x24\x03\x93\x93\xe8\x40\x31\xa8\xb1\x54\x43\x30\x62\x38\x83\x07\xee\x28\xac\xf3\xac\xd5\xd2\xa8\x45\xb3\x8c\x48\x96\xd6\x32\x84\xb1\x50\xeb\x85\x2a\x6c\x5e\xd8\x85\x80\x2d\x88\x01\x83\x65\xb1\x46\x18\x6b\x30\x3b\x49\x07\xef\x36\xcf\x26\xdb\xd4\x06\x71\xc9\xaf\xd1\x90\x97\x90\x9e\x3b\xde\xa3\x40\x6e\xb9\x56\x32\x73\xec\x1b\xa9\x4e\x27\x57\x9e\xde\x06\x27\xff\x37\x20\x56\x3d\x17\xea\x9b\x16\xb9\x9f\x87\x18\xe4\xf3\xd1\x40\x5e\xdf\x4c\xe6\x8b\xf9\xe7\xfb\xc9\x7c\x7e\x33\x1e\x5c\x44\x53\x59\x09\x47\xc3\xd1\xe7\xf1\x62\xf6\xcb\x97\xe1\xec\xf3\xe0\xa2\x9e\xfa\x8c\xac\x21\x0c\x61\xaf\x1c\xac\xf3\x6e\xbf\xfb\x21\xa2\x1e\x9f\xe2\x14\x71\xe6\x1a\xde\xee\xca\x60\x29\x68\x6b\xe2\xb1\x2b\xd9\xa8\x0e\x0f\x9e\x72\x65\x20\x0e\xd7\xcf\x73\x6f\x63\x6d\xde\x3c\x3c\xef\xf7\xd6\x3a\xa7\xd1\xe1\x65\xff\xf2\xbd\x07\x9e\xb9\x3f\x38\x53\x92\x5b\xa5\xb9\x5c\x1f\x70\xdb\xbd\x79\xfb\xee\x99\xe3\x55\xad\x23\xbb\x4d\xc2\xc4\x08\xe3\x26\xb1\x46\xa2\x88\x69\x1a\x0a\x16\xb2\x5c\x10\x0b\x9f\xb8\x80\x48\xf0\x9c\xe5\x4b\x02\x5f\x94\xac\xb6\x23\x99\xe8\xda\x2c\x17\x0d\x4b\xed\x74\x19\x41\x1a\xbc\xf9\xaf\xb7\xd0\xf5\xdd\x6c\x3e\xbc\x1b\x8d\x17\xd7\xd3\x0a\xc7\xf3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x7a\x18\x6a\x94\x84\xb9\x08\x22\x5f\xa4\xa4\xf3\xa2\x42\x2e\x25\x24\xcf\x41\x32\xcc\xa4\xc1\xde\xc7\xc1\x7e\x17\x71\x52\xd7\x24\xd8\xad\x0d\x83\x8f\xfd\x9f\xfa\xcd\xe3\x8d\x32\xd6\xa9\x0c\xc2\x6b\x3a\x75\x81\xc5\x0a\x1b\xbe\x96\xc0\x30\x25\x4d\x83\x01\x8b\x8d\x55\x9a\xac\x01\xef\xf3\x32\xd0\x5c\x61\xb3\x33\x16\xb2\x23\xd7\xc8\xa3\xe6\x16\x1a\x34\xb4\x27\x30\x42\xa9\x2a\xe4\xf3\xd3\xf2\xb1\xc5\x92\x23\x4e\x06\x02\x2c\x20\x06\xb9\x50\x3b\x57\x6a\xf3\x52\xd8\x6e\xfd\x25\xa0\x45\xd2\x6e\xd7\xb3\x75\xc9\xd3\x15\x30\xba\x04\xfe\x8e\x8e\x86\x5c\x70\x4a\xcc\x9e\x99\x5f\xd5\x3b\x6b\x62\xe1\x91\xec\xda\xee\xf5\x24\xc8\x92\x14\x25\xee\x3d\x5a\x12\x91\x1c\xa9\x4c\xe2\xfc\x2c\x2f\xa1\xc8\xdb\x23\x57\x66\xf2\x63\xe5\xb7\xbd\x2d\xd7\xb6\x20\xa2\xca\xf1\x51\x3c\x03\x63\xb9\xf4\x4b\x82\x2e\xc4\x2b\x14\x42\xa4\x01\x58\x1e\x2f\x94\x66\x6e\xeb\x33\x56\xe5\x78\xc5\xb5\xb1\xed\x17\x5e\x2b\x0f\xbb\x81\x31\x29\x3a\xf9\x36\x9d\xdc\xcf\x67\xdf\x9f\x33\x68\xd2\x42\xa1\xc9\x5f\xe1\x50\xad\x8a\x26\x73\xe2\x6d\xf4\x90\xbc\x4b\x1a\xa4\xd7\xba\x59\x47\x88\xd3\x73\x73\x8a\xfe\x77\x0c\x85\x71\x63\xd9\x8d\xf5\x3f\x5c\x78\x03\x07\xc4\x18\xb7\xaf\xc2\x0d\x0f\xb2\xbe\x33\x71\x14\xe8\x19\x3c\xfa\x06\x68\xd8\xf0\x26\x0e\xca\x8f\xdf\x3b\x2f\x2e\xaa\xdf\x79\xfe\xc0\x65\x58\x9a\xe3\x04\x37\xf3\xeb\x36\x35\xc3\xbe\xb0\xfc\x28\xb2\xb9\xcb\xc7\x38\xbf\xd5\x27\xff\xe0\xae\x6a\x14\xfa\xa5\x23\xf1\x12\x5f\xee\xf8\x95\x0c\xe4\xf6\x3f\xb9\xdc\x30\xba\x9e\xcd\xaf\x27\x8b\xdb\xf1\x7c\xb8\xf8\xf1\x5b\x2b\x2e\x8b\xe3\x39\xb8\x18\xf9\xf9\x70\xd7\xa2\x3b\x8b\x97\xc4\xb0\x5a\x87\x61\xc7\x81\x09\x3b\xbf\x15\x8e\x2e\x3c\x89\x61\xb4\x25\x9a\xbb\xaf\xf3\x14\xb5\x7c\x0c\x77\xdc\xb7\xab\xa1\x9a\xe7\xe5\x97\x5c\xf2\xec\x13\xba\x5e\x9b\x93\x4e\xa7\xf3\x67\x00\x00\x00\xff\xff\xe1\x56\x99\xce\x0f\x10\x00\x00")

func stacksIstioStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYml,
		"stacks/istio-stack.yml",
	)
}

func stacksIstioStackYml() (*asset, error) {
	bytes, err := stacksIstioStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yml", size: 4111, mode: os.FileMode(420), modTime: time.Unix(1544040565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\xfd\x73\xdb\x36\x96\xbf\xfb\xaf\xc0\x28\x99\xb1\xbd\xb5\x28\xd9\x4d\x77\x37\xca\x78\x3a\x4a\xec\xb4\xbe\x6d\x6d\x8f\xed\xdc\xcd\x5d\x2f\xcb\x81\xc8\x27\x09\x35\x09\x70\x01\x50\xb6\xba\xde\xfb\xdb\x6f\xf0\x41\x12\xfc\x92\x28\x39\x69\xb6\xad\xba\x3b\x89\x42\xbc\xf7\xf0\xf0\xf0\xbe\xf0\x00\x82\x01\xa3\x53\x32\x13\xa3\x3d\x84\x12\xce\x62\x90\x73\x48\x45\xdf\x3c\x55\x0f\x11\x0a\x18\x95\x40\xe5\x08\xa1\xa7\xbe\x7e\x80\xd0\x2c\x62\x13\x1c\x8d\xec\xbf\x10\x12\x01\xc7\x09\xf8\x84\x4a\xe0\x0b\x1c\x8d\xd0\xf1\x37\x62\xaf\xd4\x94\x77\x63\x1f\xf7\xd1\xcf\x6c\xe2\x53\x1c\xc3\x08\xed\x13\x21\x09\xeb\xc7\x20\xe6\xfb\x39\xc9\x17\xe8\x6a\x01\x9c\x93\x10\x90\x9c\x83\xed\x11\x85\x30\xc5\x69\x24\x11\xa6\xa1\xa5\x8c\x24\xe6\x33\x90\x02\x4d\x39\x8b\x91\x9c\x13\xa1\x28\x23\x58\x00\x5f\xa2\x6f\x90\x80\x80\xd1\x50\x78\xed\xac\x7e\x23\xf6\xf2\xc6\xfb\x74\x02\x9c\x82\x04\xe1\x8b\xd0\x77\x44\x93\x31\xcd\x59\x04\x23\x04\x34\x4c\x18\xa1\x52\xe4\x2d\x08\xa9\xa1\x88\x04\x07\xe0\xc0\xe7\xcf\xcb\x8f\xfa\xe8\xe5\x3f\x2f\xc7\x3f\x9e\xdf\x5e\x8f\xdf\x9d\xff\xab\xe8\x9d\x43\x84\x27\x10\x35\xf5\x2b\x58\xca\x03\xf0\x75\xbb\x18\xa1\x9f\x7c\x3f\x06\x89\x7d\x97\x5f\xe0\x0b\x12\x80\x16\xe9\x11\xaa\xb7\x67\x3c\xfb\x09\xe3\x52\x43\x7d\x74\x98\xc2\x81\x24\x8c\x8e\xd0\x3d\x40\xe2\x3c\xe6\x30\x83\xc7\x11\x32\xf3\x23\x21\x82\x18\x24\x5f\xbe\x29\x14\x65\x2f\xe3\xfe\x05\xba\x35\xd3\x61\x98\x47\x53\xc6\x11\xd0\x05\x5b\x22\x21\x71\x2e\xa8\xd2\xac\xeb\xe6\xbe\x6e\x2e\xa6\x5d\x75\x40\x02\xe1\x27\x58\xce\x47\x68\xa0\x5b\x07\x4e\x7f\x1b\xce\x54\xc2\xc2\x4f\x24\xdf\x84\xe9\x6e\x24\x26\x14\xf8\x36\x42\xdc\xf7\xfe\xd4\x37\x43\x56\xc3\xd9\x5f\xd9\x39\x0e\x43\x0e\x42\xf8\x7e\xd3\x4c\x2a\x4e\x30\xa5\x4c\x62\xd5\x9d\x5f\x08\xc7\x27\x4c\x33\xd6\xc4\x13\x87\x24\xc2\x01\xd4\xd9\x3a\xf8\xe9\xef\xa3\x8f\x5f\x1d\x1e\x7c\x3b\x1a\xfd\x6f\xf8\xd5\xe1\xb7\x6f\x0e\xd4\x5f\x25\x38\x8d\x19\x6b\x17\xf0\xf2\x78\x74\xfc\xcd\xf0\xf5\xd0\x69\x37\xf6\x67\xb8\x1f\x21\x87\x77\x67\x84\x19\x17\x1a\x28\xc6\x0d\xd2\x69\x1e\xa6\x99\xaf\x03\xcf\x61\xa8\xcb\x5c\xe5\xb6\xd8\x4d\x12\xe5\x11\xe4\xc8\x1b\xab\x47\x9b\x3e\xac\xeb\x31\xc3\xdd\xab\x58\x81\xdf\xaa\xb0\x2f\xd0\xf9\x63\x10\xa5\x21\x20\xc1\x62\x40\x6c\xaa\x7d\xa4\xb1\x37\x6b\x41\x48\xce\xb1\x44\x73\xbc\x00\x14\x63\x21\xc8\x02\x50\x80\x79\x48\x28\x8e\x88\x5c\x3a\x94\xee\x94\xcb\x8c\x88\x90\x28\xc6\x4b\x44\x01\x42\x24\x19\x9a\x00\x4a\x78\x4a\x21\x44\xd3\x94\xcb\x39\x70\x14\xb3\x05\xa1\xda\xb0\x1f\x30\x0f\x8f\x10\x16\x88\xd0\x29\xe3\x31\x84\x0e\xb5\xc9\x12\x25\xc0\xd5\x63\x4c\x03\xb0\x7e\x1a\x47\x78\x42\x54\xb7\x48\x82\x90\x84\xce\xbc\x15\xb2\x45\x41\x94\x0a\x09\x5c\x8b\x04\x7d\x6c\x30\xa4\x03\x96\xca\x09\x4b\x69\xf8\x44\xa8\xf9\xdb\xb1\x01\xed\x31\x0e\xbd\x3f\xed\x37\x4c\x44\xc8\x59\xb2\xaa\x67\x19\x24\x7e\xc2\x61\x4a\x1e\x7f\xdd\x7e\x95\xf4\x41\xb9\x15\x6b\x3b\xcd\xbd\x7b\x5f\x1d\x6e\x43\xdc\xd7\x82\xf4\xfd\x46\xa2\x5a\x65\x7c\x19\x89\xed\x18\xef\x42\x3b\x48\xfc\x90\x3d\x50\x21\x39\xe0\xf8\xb3\x75\x33\x97\x32\xf1\x0f\xf4\x24\x3c\xe1\x30\x26\x74\xcb\xa9\xe8\xd0\x55\xa6\x9f\x07\xd1\xe4\x89\xab\x78\xf8\x34\x21\x5a\x27\x24\x70\x8a\xa3\xa7\x18\x3f\x3e\x31\x4e\x66\xca\xd4\x56\x71\xb1\x22\x15\x4a\x58\x44\x82\xe5\x97\x49\x86\x8a\x3e\xdd\x58\x9c\x75\x26\x94\x73\xd8\x1f\xd8\x26\x97\x43\x11\xcc\x21\x86\x32\x9c\x9a\x95\x7d\xef\x4b\xe4\x57\x3f\xbc\xf5\xdd\x14\xeb\xb7\x92\x63\x99\x89\x7f\xa3\xe4\xd6\x8f\x19\x25\x92\x71\x42\x67\x2b\x34\x25\x4f\xca\x76\xca\xf2\x07\x4d\xc6\xbb\xe8\x4a\x42\x22\x26\x77\x1a\xf2\xc9\xdc\xc9\x6f\x44\x49\xf4\xb4\x77\x52\x90\x19\x8e\x22\xd8\xf9\x90\x3f\x9c\x86\x98\x79\x6f\x53\x91\x17\xd9\x2c\x3b\x8b\xfa\xf1\xf5\x05\x52\x7c\x01\x6f\x5c\xd4\x17\xdc\xf5\x71\x42\x2c\xe0\xfe\xaf\x3e\x1f\x56\x29\x1c\xbd\x53\xba\x32\x42\x6a\xa0\x05\x51\x19\x09\xdf\xad\x74\x99\xff\x02\xec\x4f\x89\xe2\x62\xb0\xc0\x7c\xc0\x53\x3a\x10\x10\x70\x90\x62\x50\x70\xef\x11\x36\xb0\xb3\x83\x83\x80\xa5\x54\x0e\x02\xec\x05\xbc\xe8\x71\x02\x98\x03\xf7\x25\xbb\x07\xba\x15\x3d\x8d\xf9\xef\xaf\x47\x05\x99\x37\x46\xb8\x2b\x74\x87\xb2\x10\x04\x3a\x50\x28\x11\xc8\xc3\x35\xfa\xa3\xa1\xf7\x7f\x3f\x53\xd8\x51\xf7\xd5\xb0\xbb\x4c\xfb\x36\x35\x15\x45\xbb\xb9\xa8\xb2\xbe\x8a\x53\xa9\x04\x39\x03\xb7\xc6\xe6\x89\x45\x30\x7a\xf5\xea\xeb\xcd\x4a\x35\x8a\xa3\xaa\xc6\x65\xa5\x29\xaf\x54\x88\xaa\xb2\xe8\x46\x8b\x76\x3e\x07\x38\x21\x83\xc5\xf1\x40\x6b\xd3\xe0\xe5\x3f\x8f\xff\x35\x48\x38\x7b\x5c\x66\x11\x65\x55\x01\xf3\x6f\x46\x51\x51\x30\x0e\x17\x44\x30\x9e\xc5\xb1\x17\x39\x8e\x2e\x9e\x10\x81\x38\xfc\x23\x25\x1c\xc2\x1c\xcd\x0c\x0f\x1d\x7b\x7f\xf1\xbe\xd6\xf1\x32\xc2\x12\xf8\x11\x7a\x98\x03\x87\x9c\x60\x16\xf1\x72\x7a\x07\x72\xce\x04\xa0\x07\xfd\xa7\xf6\x6c\x68\x02\x33\x42\xd1\x03\x91\x73\xb4\x5f\x14\x20\xf7\x0f\x4d\x6d\x67\x02\x40\x11\x87\x98\x2d\x54\xe7\x26\x08\x43\x4e\x2e\x1b\x40\x56\x13\xca\x0c\xdd\x43\x86\x73\x15\xab\x8d\x99\x0a\x1d\xe7\x73\xbe\x32\x40\x24\x59\x4e\x4c\xad\x75\x09\x2c\x54\x46\xa0\xb8\xb3\x34\xeb\x32\xb9\xa0\x55\x09\x0c\xfb\xea\xcf\x93\x23\xd5\x47\x81\x89\x30\x07\xc4\x68\xb4\x44\xf0\x98\x30\x01\x21\x62\xb4\xc4\x45\x4e\xf1\xfb\xbb\xbb\xeb\x9c\xa5\x37\x28\x15\x80\x7a\x6b\x26\x79\xf4\xea\xf8\xf5\xab\xf2\x4c\xf7\x72\x7a\x84\x9a\xea\x58\x80\x05\xa0\x03\x35\x3b\x40\x45\xea\xcc\xcb\xbe\x30\x7d\x9a\xf8\x85\xe6\x58\xd0\x7d\x69\x64\x1d\x12\x81\x27\x11\x84\x7a\x46\x72\x8a\x8a\xed\x7e\x3f\xc0\x06\xbd\xaf\xfc\xe8\xe9\x30\x17\xff\x34\xc2\xb3\xc3\x16\xe5\x51\x53\x40\x04\xa2\x4c\x22\x0a\x01\x08\x81\xf9\xd2\x24\x58\x73\x96\x46\x21\x9a\x40\x3e\xbd\xa4\x22\xd8\x3f\x2b\xb8\x9c\x1a\x60\x1e\x11\xe0\x48\x05\x5c\xc2\xa8\x38\x42\x8c\x23\x22\xd1\x03\x89\x22\x14\x60\x25\x34\xc5\x65\x5e\x1e\xd4\x35\x3e\x33\xf9\x21\x92\x0f\x24\x00\x6f\x8d\x43\xce\x86\xb7\xf3\xc9\x3b\x9f\x9c\x4d\xf5\x67\xf1\xc9\x83\x4c\xd3\x56\x25\x13\x76\x5e\x8b\x5c\x71\x9d\xfa\x5a\x84\x7e\x8e\xf0\x09\xd2\xd2\x4f\x92\x96\xb5\x6e\xe6\x98\x41\x77\xcf\xc5\x24\x4f\x37\xdb\xb5\xe8\xc0\x81\x32\xf0\x6d\x36\x35\x7c\x8b\x5b\xd1\x02\xa3\x44\xda\x5f\x7c\xbb\xd9\xa6\xce\x5a\x5e\x95\xce\x6d\xc7\xe9\x0a\xad\xad\x2b\xfd\xc6\xfb\x75\xeb\x19\xef\xbc\x67\xd7\xcd\x23\x6c\xb7\xaf\xf7\xf2\xe4\x99\x8e\x2c\x1b\xe7\x97\xd8\xb4\x6b\xa2\xb3\xf5\x12\xe9\x13\x30\xd0\x58\x64\x71\x7c\x51\xc2\xc2\xcd\xdd\x4f\xc2\xc2\x56\xc7\xa3\x13\xaf\x29\x9a\x12\x2e\x24\x92\x0f\xcc\xcc\x9c\xc9\xb1\x12\x0e\x02\xa8\x3c\x52\x04\x9c\xb4\x22\x8b\xfd\x68\xb2\xd4\x99\x81\xa9\x08\x08\x08\x54\x26\xf4\x33\x9b\xac\xda\xa4\xdb\x70\x57\xfa\xb3\x3b\xb2\x4a\xef\x82\x84\x10\x60\xee\xeb\x21\x69\x06\x24\x96\xa9\x68\x62\xa0\xb4\x21\xd4\xdd\xe2\xd7\x30\x60\x3a\x8e\x65\xb4\x49\x9f\x6a\xd4\xcf\xea\xf5\xb7\xe1\x0f\xbf\xf0\xf9\x05\xc7\xcf\xed\x0e\x2f\x7c\xfa\xc3\x0b\xab\x3c\x5e\xdf\x75\x31\xcf\x5d\x45\x80\x0c\x06\x86\x5e\x00\x5c\x8a\x01\x67\x4c\xea\x9f\x5e\x02\xb1\x8b\x01\x5c\xb6\xe1\xa8\x3f\xfb\xc1\x1c\x13\x5a\x41\xba\x87\x65\x1b\xce\x3d\x2c\x2b\xc0\x84\x9a\x11\xf9\xe2\x9e\x24\xfe\x02\x38\x99\x2e\x8d\x0f\x53\x5e\xb9\xd0\x6f\x14\x32\x30\x2b\x3d\x91\x26\x4a\xd1\x91\x75\xb6\x14\xc7\xa5\x43\x11\x9f\x20\x1e\xfc\x9b\xf8\xee\x17\xc8\xba\x62\x64\x3c\x30\x2a\xba\x51\xab\x5e\x1c\x86\x10\xaa\xf8\x93\x41\x11\xfa\x33\x04\x92\x71\x67\x65\xab\x17\xec\xda\x9d\x3e\x30\x7e\x1f\x31\x1c\x6a\xbf\xea\x67\x47\x4a\x02\x4c\x75\x34\x4b\x20\x20\x53\x12\xe0\x28\x5a\x22\xad\xb2\xba\x9e\x80\x75\xd0\x93\x0c\x11\x1a\x92\x00\x4b\x40\x44\x0a\x94\x1f\x47\x61\x88\x43\x00\x64\x01\x48\xd1\x44\x92\xe3\xe9\x94\x04\xcf\x8a\x7c\x2d\xb1\xa7\x83\x27\x5c\x1d\x34\x9a\xa5\x7d\x70\xf0\xd3\xdf\xdf\x7c\xfc\xea\xf0\x8d\xfe\xfb\x4f\x87\x87\x4f\x07\xf6\xd7\x1b\x13\x4f\x7e\x67\x01\xe5\xa3\xde\x9b\xa2\xd1\x52\xcb\x03\x65\x07\x66\x74\x39\x87\x08\x34\x67\x42\x8e\x94\x69\xb5\x08\xd0\xa8\x13\x93\x73\xe0\x0f\x44\x00\xc2\x14\xc1\xa3\xe4\xd8\x72\x6c\xcb\x6c\x6a\xc5\xbc\x5f\xe8\xa7\x5a\x6d\x6a\xdf\x64\x3d\x55\x6b\x10\x1a\x95\x63\xcf\x2e\x32\xee\x22\x23\xd6\xea\x32\xe3\x78\x8a\x29\xee\x87\x58\xcc\x27\x0c\xf3\x30\xe1\x6c\x41\x42\xe0\xa2\x72\xc4\xfa\xc9\x52\xc3\x09\xf9\x4f\x53\xc7\x1b\xa1\x63\xfb\xac\x82\xa3\xb7\xb9\x4c\x31\xf2\x0c\x22\x30\x3c\x4d\x71\x24\x0a\x8e\xa6\x2c\x0a\x81\xdb\xbd\xbe\xfc\xa9\x89\xcd\xe5\x67\x2c\x51\xf8\xa5\x6d\x34\x7b\x02\x77\x81\xf9\x20\x22\x93\x81\x1d\xc2\x20\x1f\x82\x18\x54\x48\xf0\xd9\x45\x58\x70\x8b\x90\x5c\x26\x30\x42\x2a\x8a\x96\x24\x20\xb1\x11\x7b\xdb\xd0\x9b\x07\x8f\x50\x0d\x33\xd3\xc1\x00\x84\x18\x21\x5d\x40\x72\xd8\x87\x90\x48\x25\x9b\x4a\x40\x42\x88\x88\x33\x53\x1b\xab\xb5\xfc\x2c\x18\x3d\xc3\x12\x97\x37\x13\x25\x89\xe1\xa2\x69\xbf\x3a\x93\xe4\x75\xfd\x74\x72\x83\x34\x32\x79\x34\x9c\x65\x46\x28\xe5\x91\x49\x7f\x46\x03\xe7\xb0\xf3\xe8\xf5\xf0\xf5\x70\x6f\xcf\x2e\x4d\x2b\x47\xf4\x0d\x93\x66\x63\xde\x4f\x80\xc7\x44\x08\x77\x0a\xfb\x66\xb7\x2d\xff\x57\x46\x25\x7f\x50\x2d\x66\xf5\x95\xc2\x8a\x32\xf6\xc0\x95\x6a\xdf\x56\xdf\x62\x9c\x14\x60\xca\x69\xa6\x3c\x3a\x1d\xb8\x3b\x19\x24\xc6\x33\x3b\x54\x77\x38\x8b\x13\xef\x6b\xef\xb8\x80\xb8\x4e\xa3\xe8\x5a\x1f\x78\x1a\xa1\x8b\xe9\x25\x93\xd7\x66\xa1\xaa\x21\xcc\x9e\x80\x19\x4d\x1f\x29\x49\x0c\x94\x80\x32\x9d\x29\x92\x9c\x7e\xc3\x7b\x0b\x3a\x69\x2b\x1e\x3b\x3f\xbd\x65\x1c\x59\x1a\x71\x8c\x69\x98\xd1\xe8\xf7\x85\x64\x1c\xcf\xc0\x93\x22\x9c\x78\x1c\x94\x52\x12\x46\x4f\xff\x3c\xcf\x21\x0c\x71\x4f\x69\xf4\xe9\xda\x1e\xac\xc2\x1b\xfa\x40\x17\x84\x33\xaa\x3d\xad\x25\xf7\xdd\xcd\xf8\xfd\xf8\x72\xec\x5f\x5f\xdd\xdc\x9d\x7e\x3d\x1c\x0e\xb3\xe7\xef\xfd\xf1\x87\xbb\xef\xfd\xb7\xe3\xdb\x8b\x77\xfe\xf9\xe5\xf8\xed\x0f\xe7\x67\xa7\x85\x5d\x17\x10\xe3\xcb\xab\xcb\xff\xfe\xf1\xea\xc3\x6d\x0e\x95\xeb\x73\x13\xd0\xd5\xcd\x77\xfe\xcd\xd5\x0f\xe7\xa7\xfa\x78\x64\x01\x76\x3d\xbe\xfb\xfe\xd6\x3f\x1b\xdf\x8d\x4f\x07\xca\xc6\x32\x4b\x77\x67\x32\xc4\x44\xcc\x31\x3d\x7e\xfd\xfa\x24\x6b\x1e\x45\x58\x82\x90\xcd\xb3\x89\xa3\x07\xbc\x14\x0d\xf3\xa8\x06\xda\x3a\x8f\x2b\xbc\xa4\x16\x77\xe6\x82\xf4\x63\xa5\xec\x84\xce\x5c\x7f\x54\xc7\xf3\x96\xd8\x4e\x77\xbf\xd1\x03\xad\x22\x9b\x43\xb9\xbf\x0b\x82\x0b\x16\xa5\xf9\xc1\x83\xbe\xf6\x4e\xa3\xaa\xfc\x2a\x47\xb5\x56\x9b\xac\xc9\xea\x4f\xed\xe9\xd2\x7e\x31\x4b\x76\x0e\x34\xb1\x41\x4c\x1e\x81\x8f\x8e\xbd\xa1\xf7\x6a\xad\xe8\x6b\x2a\x6e\x63\xb8\xfd\x77\x4a\xc9\xe3\x68\x30\x18\x08\x16\xdc\x1b\xba\x9e\xfa\x09\xb2\xa2\xf0\xb7\x92\x71\xf8\x70\xf3\xc3\xe9\xfd\x5f\xc5\x68\x30\xa8\xb4\x5a\x67\x7a\x99\x85\xd7\xd3\xd2\x71\xba\x06\x49\xa5\xa1\xe8\x9b\x7e\x46\xba\xeb\x56\x03\xb9\x3a\x3b\x7f\xfb\xe1\xbb\xd3\x59\x20\xb9\xa2\x7b\xd2\xec\x16\xbe\x1e\xc8\x20\x39\xaa\x1e\x60\x31\xcd\xaf\x4e\x5e\x9d\x9c\xe8\xf6\x8a\xd7\x55\x39\xfa\x3d\x09\xee\x73\x6f\x69\xcf\x4b\x29\x6f\x57\x78\xff\xac\xaf\x17\xd9\x83\x3e\xd2\x2f\x3f\x14\x3d\x16\xef\x73\xec\x95\x60\x86\xaf\x14\x8c\xf3\xec\xf5\xf0\xf5\xb1\x46\x9b\xf1\x24\xc8\x9f\x97\x66\x56\x77\xbe\x38\x71\xe6\xb6\x36\x87\xb9\xbb\x73\x22\x9d\x76\x5d\xc6\xb7\xbf\x33\xaa\xe3\x34\x55\x14\xb0\x84\x24\x21\x4e\x94\x0d\xbf\x37\x01\x3a\x6b\x28\xd6\xbb\x76\x4f\xc6\x1e\xe3\xce\x68\x68\x0b\xf0\x64\x9c\x44\x25\x6a\x2a\x8c\x73\x16\x5d\x47\x98\xc2\x38\x95\x73\xa3\x8e\x0e\xc8\xe5\xd5\xe5\x79\x21\xd9\xea\x74\x1b\x98\xeb\xab\x33\x7d\x88\xea\xf4\xe5\x81\x80\x68\x3a\x50\xf1\xf5\xb0\xa1\x5d\x2b\x97\x0b\xa4\x35\xcf\x85\xbc\xb8\xbc\xbd\x1b\x5f\xbe\x3b\xf7\x2f\xae\x33\x38\x92\x14\x00\x76\xa7\x70\x84\x48\xa8\xdc\xbc\x5c\x1a\x4f\xa0\x17\xf8\x39\x50\x49\x6f\x5b\x74\x77\x6f\xef\x1f\x29\x08\x9b\x3b\xf5\xd1\x02\x73\x62\x92\x0e\xf7\x38\xd8\x1e\x42\x21\x88\x80\x93\xc4\x24\x69\x3d\x5b\x06\x59\x0a\x09\x71\x91\x98\xf6\xf6\xf6\x8a\xcc\x53\xf5\x9a\xb7\x84\x7e\x8c\x29\x99\x82\x50\x69\x92\x79\x07\xcf\xcd\x91\x7a\x36\x30\x69\xb2\x1e\x61\x83\xc5\x31\x8e\x92\x39\x3e\x31\x3b\xde\xf7\x84\x86\x23\x84\xa5\xe4\x64\x92\x4a\xc8\x48\xe9\x36\x95\xef\x86\x4e\xca\xe3\xe4\x86\x85\x9a\xa9\xa5\x75\x06\x90\x93\x71\xe4\x62\x0e\xbb\x7b\x24\x71\x13\xa7\x05\x8e\x52\xb8\xd3\x29\xcf\xc5\xb5\x3f\x3e\x3b\xbb\x39\xbf\xbd\xad\xa2\xa4\x24\x6c\xc1\xb9\xbd\xbb\xb9\xb8\xfc\xae\x06\x2f\x80\x77\x43\xe0\xa0\x27\xc6\x9b\x03\x76\x53\xe6\x46\x24\xff\xc7\xf1\x75\x0d\xb1\x2b\x67\x79\x47\x6a\xe5\xb9\x11\x86\x72\x48\x6c\xc3\x5e\x74\x52\xbe\x11\x06\x07\x2c\x18\xdd\x14\x67\x0a\x7c\x53\x49\xdb\x2a\xde\x46\x38\x92\x49\x1c\xf9\x82\xfc\x02\xe5\x9c\xbb\xac\x3e\x97\x77\x7f\x7e\x55\xef\xae\x82\xb4\x16\x41\xe5\xf1\x2d\x08\x77\x17\x3f\x9e\xdf\xde\x8d\x7f\xac\x6b\x81\x52\x38\x3c\x2b\xb9\xa9\xd5\xe3\x12\x09\xa3\x02\xbc\x80\x85\x5d\xb9\xb3\x18\x61\xca\xf5\xaa\xbf\x05\xeb\xec\xc3\xcd\xf8\xee\xe2\xea\xb2\x8e\xb8\x85\x86\x5b\xcc\xad\xa4\x6f\x71\x37\x10\x7f\xd6\xdb\x26\xf2\x37\xe9\x56\x77\xff\x90\xc1\x2b\xff\x80\x5e\xa0\xb3\xf3\xeb\x9b\xf3\x77\xe3\xbb\xf3\xb3\x4d\xb0\x13\x4e\x68\x40\x12\xf7\xc5\xe6\x55\x58\xa1\x7e\x97\x4d\x4f\x5a\x77\x46\x5d\xa4\x67\xf4\x97\x30\xde\xa6\x92\x65\xf1\x07\x8c\x52\xd0\x05\x0b\x0f\x16\x9d\xf5\xd8\xc1\xea\x3a\x30\x07\xc5\x96\x54\x43\x6f\xb2\x94\xd0\xa6\x98\xad\x6c\x96\xb1\x7d\xad\xa4\x9b\xd2\x50\xab\xc8\xed\x7a\x2f\x30\xb7\xeb\x79\x53\x33\x76\x50\x63\x19\xb5\xb1\xfb\xf6\xea\xea\x87\x66\x59\x69\x37\x05\xa1\x6f\x4e\xaa\x99\x7d\x97\xae\xf3\x25\xe1\x51\x7a\x09\x67\x92\x05\xac\xa3\x0e\x66\x58\xca\x98\x85\xc4\x71\x5b\xc8\xaf\x5b\xb4\x8b\xd9\x19\xe9\x05\x3a\x83\x84\x43\x80\x25\x84\x47\xe8\x1e\x12\xa9\x8b\xb1\x01\x8b\x13\x2c\x89\x29\xe2\xd7\x7a\xe0\xa0\xac\x03\xb8\x17\xb1\xa0\x75\x02\xab\x12\x2d\x63\xea\x94\x69\x23\x81\xe4\xa8\x9d\x3d\x01\x4e\x88\x67\x13\xf7\xee\x08\xf6\x70\x5f\x77\x04\x96\xc0\x4a\x85\x6c\x40\xd9\x4c\x23\xb2\x48\x89\x53\x39\xdf\xd4\xa3\x95\x70\x71\x1a\x12\xa0\x41\xab\xc9\xae\xee\x57\x17\x8e\x36\x4d\x59\x34\x6e\x10\x61\x12\x6f\x91\x20\x6a\x64\x8e\x1f\xfc\x0e\x04\xea\xc8\x09\xf1\xef\x61\xb9\x1a\x49\x37\xf6\xfb\xbf\x42\xc2\x5f\xac\x3b\x3a\x25\xfc\x36\x5e\x6e\x92\xf0\x5b\x14\x5b\x6a\xef\x2c\x6c\x8b\x56\xe5\xba\x33\x62\x77\x7f\xe8\x20\xe8\x35\xd7\x46\x58\xec\x81\x76\xd5\x3d\x8b\x91\x59\x3e\xda\x3a\x5b\xb1\x14\xc6\xe6\x5c\xeb\x36\x9d\x77\xd4\x59\x8b\x94\xed\xbe\x6e\x9c\x94\xe5\x88\x1b\x4f\x46\x09\x73\x83\x59\x71\x33\xa5\x4d\x94\xd4\xc5\xdb\x54\x53\x5d\xdc\xcd\xd5\xd5\xc5\xde\x40\x99\x5c\xb4\xee\xd2\x75\xb1\xf2\x37\x0a\xb6\xc4\x7f\xc6\xcc\xe4\x26\xb0\xb1\x05\x34\x50\xd9\x2e\x03\xcf\x90\xb7\x1b\xbb\x8b\xfd\x3c\x19\x6c\x50\x3d\x68\xc0\xde\xc8\x05\xb8\xf8\x9b\x9b\x74\x23\xf6\x76\xd2\xdb\xc6\xb8\xb7\x0e\x86\x42\x86\x76\xab\xb2\x39\x00\xce\x31\x0d\x23\x5b\x3a\x75\xa3\x1f\x4b\x65\x92\xca\xb1\xf8\x0f\xa1\xba\x2a\xf6\x57\xb6\xe5\x23\x62\x33\xa0\x59\x25\xb6\x99\x15\xb3\xa1\x19\xb1\x59\x8d\x19\x01\x0b\xe0\x44\x2e\x47\x68\xbf\x77\x41\xa7\xac\x97\x1d\xa1\x2a\xb2\xf1\x52\xb5\x63\x2f\x13\xa5\x29\x4a\xd6\x02\xf8\x45\x32\x2a\x42\x39\x7a\x42\x24\x39\xe8\x0d\x3d\xfd\xbf\xde\x61\x05\x76\x9c\x14\xc0\xc6\x35\xfe\xd4\xc3\x49\xd2\xfb\x88\x9e\x50\xaf\x57\x01\xbe\xce\xd3\xc0\xda\xd2\xba\x09\xfc\x52\x8f\xdb\x09\xc0\x4d\x40\xff\x65\xd5\x65\xd4\x18\x1c\xda\xc8\x1a\xbd\xaa\x05\xf7\x26\xf0\x2b\xed\x76\x4b\x11\xbd\x0c\xe6\x28\xaf\x96\x46\x3d\x5a\x34\x8a\xc4\x01\xbb\xa8\x60\xad\x90\xba\x03\x76\x6b\xac\xfc\x7b\xe5\x22\x5a\x9d\x47\x6b\x9f\x85\xdc\x5a\x8d\xaf\x15\xd7\x4c\x4c\xd5\xdd\xaf\x04\xb7\x02\x6f\x0c\x11\xad\x88\x56\xf4\xb5\x20\xd8\x8a\xe0\x28\x58\x63\x41\xa5\x8c\x88\x13\xf2\xce\xe4\xe8\x6d\xc9\x7b\x0d\xfe\x6f\xb0\x1c\x55\x93\x75\xf4\x54\xad\x2a\xff\xd4\x7b\xec\xe3\x84\xf4\xef\x61\x59\x9d\xf5\x7c\x11\x55\xa9\x8f\xa2\xa7\xda\xca\x5b\x21\xce\xa5\x4c\x0a\x64\x5b\x19\xae\x54\x8a\xcb\x1d\xe8\x23\x03\x6e\x59\xb8\xdc\x9c\x95\xdd\xde\xb1\x10\x46\xe5\xba\x24\x7a\x42\xc3\x1a\xdc\x2d\xf9\xc5\x85\x13\xe4\x97\x2a\x9c\xee\x29\x03\x2b\x6a\xb0\x4d\x50\x17\x0e\xef\x8e\xa8\xec\xa3\x3e\x09\xab\xd2\x0a\x22\x02\x54\xde\x71\x1c\x40\x0b\xae\x81\xe8\xeb\xad\xc0\x06\x02\x11\x96\x40\x83\xe5\xa8\x5e\x4f\x55\x70\xc3\x58\xf4\xdc\x15\xbb\x2d\x9f\xf8\xfa\xf8\x25\x91\x4b\x3f\xb1\x9b\xa7\x01\xa3\x21\x51\x4d\x38\x3a\x38\x68\xac\x0a\x28\x72\xf6\xf6\xa7\xde\x21\x3a\x3d\x45\xbd\xec\x52\xa8\xde\x11\xea\xa5\xf4\x9e\xb2\x07\xda\x3b\x2a\x51\xaa\xd4\x78\xd0\x93\x39\xa6\x73\x84\x7a\x71\x2a\x53\x1c\xf9\x32\x12\x0a\x9b\x32\x0a\x3d\xe7\xc0\x5e\x5e\xdd\xb9\xd5\xc5\x1d\x63\x8d\xeb\xaa\x3f\x15\x2d\x11\xc0\xc7\xba\x7e\x5d\x2f\x69\x37\x2b\xcc\x9d\x1b\x4b\x9c\xd2\xad\x03\x68\xea\x73\x6f\x75\x79\xad\xa1\x94\x5f\xd2\x08\xb5\x2c\xcf\x21\x6b\x75\xe7\x8a\xf2\x98\x5d\x87\xea\x36\x44\x99\x4f\x65\x29\xe3\x54\xce\x99\x89\x84\x35\x55\x19\xe1\xac\x51\xeb\x88\xbb\x3d\x53\x26\xf4\xf8\xde\xdc\x64\x06\xe1\x7b\xc6\x1b\x75\x6e\x9a\x01\xa8\x5f\x46\xe3\x32\x47\xed\x30\x6d\x94\xe3\xf9\xba\x63\x02\x8f\xfa\xe5\xb8\xb4\x3c\x22\xd8\xbd\x6d\x08\x7d\x0e\xf6\xd8\x9a\x39\x4f\xb4\xdf\x33\x07\x0a\x6c\x32\xf0\x39\x33\x13\x19\x24\xcf\x4b\x4e\xdc\x1a\x20\x7a\x2a\x5a\x0e\x7a\x27\xc3\xe3\xbf\xf4\x87\xc7\xfd\xe1\xf1\xdd\x70\x38\xd2\xff\xff\x9f\x7c\xec\x0d\x09\x4c\x61\x05\xe7\xba\xaa\x5d\xab\x73\x37\x45\xf8\x5d\xbe\xe3\x82\xef\xf2\x9d\x1a\xee\xef\x24\xdf\x29\x72\x8f\xa6\x54\x43\x06\x49\x53\x30\x3c\xcb\x36\x2e\x9a\x76\x33\xfe\xd8\x41\xb4\x12\xf1\x5a\xf7\xaa\xda\x02\x5f\xe3\xf6\x52\x09\x58\x47\xc4\x9b\x8e\xdd\x98\x8d\xa9\x3a\xfe\xed\x9a\x1e\x1b\xf0\x7e\x37\xd1\x8b\xa7\xf6\x10\x53\x73\xe4\x2a\x96\xff\x6e\xc8\x8a\xb1\x0c\xe6\x0d\x46\xa2\xc6\xa6\x13\x72\xf4\xd4\x90\xad\xab\xd6\x19\x4f\x82\x4c\x3f\xcc\x71\x70\xe7\xdc\xad\xad\x25\xe4\x45\x05\xaf\xe8\x1d\x99\xb7\x85\x24\xa6\x8d\xa7\x98\x23\x36\xf3\x4a\x71\xf8\xb3\xca\x23\x3b\xa1\xd6\x55\x24\x8e\xe3\xf8\x24\x63\x76\xd3\x89\x4f\x34\x6c\x73\x08\x79\xc5\xc0\xad\xb5\xeb\x7a\x59\x6d\xf0\xba\xe6\x34\x42\xbd\xe3\x6c\x98\x21\x89\x81\x8a\xf2\xc1\xf8\x5f\xcb\x64\xb2\x30\x9d\xbf\xf5\xd4\x9e\x08\x64\x0e\xb3\x0d\xb3\x78\x71\xa2\x99\x46\x1e\xac\xda\x08\x25\xab\xf3\x9b\x36\x34\xbc\x2a\x87\x6a\x43\xca\x76\x38\xab\x88\xf6\x79\x0b\xb2\x23\x41\x47\x60\x2b\x33\x80\x4e\x34\x5c\xd1\xad\x2e\x5e\xae\x25\x99\x74\x88\xe1\x2b\x09\xe0\xb5\x49\xd8\x4a\xf4\x5c\xb0\x4d\x24\xba\x4b\x37\xaf\xda\xaf\xca\xcc\xba\x50\xb0\xef\x88\xb6\x15\xd4\x37\x22\xd3\x30\x43\xb5\xe2\x7c\x23\x41\xeb\x0f\xfc\x22\x65\x72\x77\xc0\x5b\x8a\x35\x0d\x54\xcc\xca\xd6\x0f\x1a\xab\x2d\x27\xc3\xe1\x6f\x2e\x71\x5a\x11\xb1\x3f\x5c\xde\x5e\x9f\xbf\xbb\x78\x7f\x71\x7e\xf6\xdc\xb0\xdd\xd5\x5f\x67\x79\x68\x9b\xcb\x5e\x57\xf5\xd9\x39\xf2\x9d\x23\xdf\x39\xf2\x9d\x23\xdf\x39\xf2\x2f\xec\xc8\x05\xf9\x05\xda\x9d\x78\xe3\xae\xc2\xce\x77\xef\x7c\xf7\xce\x77\xef\x7c\xf7\xce\x77\x7f\x39\xdf\x6d\x44\xb9\xda\x79\x37\xef\x1c\xef\xbc\xf7\xce\x7b\xef\xbc\xf7\xce\x7b\xef\xbc\xf7\x97\xf2\xde\x32\x48\xf4\xf6\x0f\xb4\x57\xbc\xd7\x6d\x50\xed\x9c\xf8\xce\x89\xef\x9c\xf8\x06\x4e\x7c\x63\xef\xfb\xa5\x9d\xf8\xce\xa7\x6e\xe3\x53\xb3\x7d\xf9\x0e\x7e\xb5\xf5\xa4\xc0\xce\xb7\xee\x7c\xeb\xce\xb7\xee\x7c\xeb\x1f\xc5\xb7\x56\x6e\x62\xda\xec\x75\x1c\x7b\xc9\x5c\x71\xee\xa4\x5c\x5c\x36\x27\x9c\x72\xc1\x67\xa7\x4e\xfc\xfa\xd9\x0f\xcf\x50\xf2\x6a\x97\x55\x15\x8c\xbe\xbb\xfa\x70\x79\x77\x7e\x93\x3f\x35\x97\x56\x52\x5c\xb9\x12\x28\x9b\x2c\xe7\x51\xe1\x9a\xea\x0f\x73\x53\xac\x37\x65\xf6\xde\xde\xb2\xea\x6e\x7b\x6b\x5d\x4e\x43\xc5\xae\x5b\x5a\x9a\x18\x6a\xf2\x52\x6b\x9a\x1b\x59\x6b\x70\x0d\x2d\xad\xd6\x92\x56\xb7\x66\xb7\x69\xae\x03\xa9\xb2\x51\x5d\xa1\x96\x9a\x9c\x65\xa7\xf3\xbc\xdd\x66\x9b\x55\xcf\xcf\x36\x9e\x7d\xfb\xc9\xc3\x35\x4a\x98\x81\x77\xd0\xc3\xb3\x8b\xdb\xbb\x9b\x8b\xb7\x1f\x4a\xd7\x46\xec\x94\x71\xa7\x8c\xee\xfd\x6a\x93\x34\xb8\x07\x59\x7a\x5d\x19\x1e\x93\x88\x04\x44\xfa\x0d\x6d\x08\xe9\x08\x22\x46\xe8\xa7\xa1\x37\x1c\x7e\x73\x84\x86\xde\xf0\x58\xff\x79\x62\xfe\xa1\xff\xd4\x4f\xcc\x83\x6f\x8e\xd0\xf1\x11\x3a\x51\x7f\xab\x9f\xc3\x8f\x2d\x76\xa0\xd3\xdb\x35\xca\x2f\xc8\x2f\xb0\x53\xfc\x9d\xe2\x7f\x3e\xc5\x67\x14\xa8\x24\x38\x7a\xdb\xa4\xfa\x34\x8d\xdf\x13\x4a\x24\x64\xad\xe8\xaf\xa5\x76\x11\xe0\x08\xca\x57\xf7\x22\x34\xe3\xec\x41\xce\xdf\xe3\x40\x32\x3e\x42\xc7\xc3\x9a\xfa\xdb\x11\xac\xd1\xff\x62\x23\x65\x67\x00\x3b\x03\x70\x9a\x7e\xeb\x06\x20\x83\xc4\x17\x40\x6d\x00\x58\x9d\x88\x3b\x15\xe9\x5d\x1e\xfe\x07\x32\x80\xce\x49\xb5\x52\xa6\xac\x60\xb6\x81\x42\xe5\x35\xb6\x9d\x52\xed\x94\x2a\xf8\xbc\x6f\xd0\x24\x9c\xc5\xf9\x3d\xe6\x5f\xe2\xa5\xa2\x86\xef\x08\x34\xbe\x65\xd3\x50\xf5\xa8\xb7\x56\x96\xa3\x75\x00\x27\x63\x69\x08\x5b\xd5\xd6\xcf\x29\xf4\xcf\xfa\xd6\x52\x57\xa1\xd6\x23\x58\xbd\xb1\xe2\x8d\x9e\x27\x98\xe2\x82\x36\xa0\x8b\x15\x12\x6a\x2b\x9c\xbd\x40\x0f\x73\xa0\x88\xa7\x94\x12\x3a\x33\x1f\x8a\xd6\x57\xbe\x23\xce\x98\x3c\x42\xd9\xd7\x81\xa7\x2c\x8a\xd8\x83\x02\xb1\x5f\x5a\xc5\x53\x09\x1c\xe1\x30\x54\xcf\x70\x4e\x4d\x2c\xe3\x89\x32\x32\x14\x11\x7a\x8f\x24\x43\xd8\x61\x31\xff\x4a\x2b\x89\x00\x2d\x48\xce\x62\xf1\xe5\xe3\x97\x28\xa2\xa8\x2f\xd0\xff\x0d\x3c\x85\x36\xb0\x08\x9a\xa3\x01\x0e\x71\x22\x81\x3b\x9f\xf1\xd5\x3f\x0d\x4c\x8d\x54\xd1\xe4\x9b\x2f\x96\xf4\x3a\x50\xe9\x3d\xf3\x6e\xbd\x35\x7a\xaa\x3a\xc2\x52\xf2\x19\x50\x05\x99\x43\x97\xee\xd5\x5b\xab\x8c\xf5\x39\x6f\xd5\xc7\xe2\x92\x3e\xaf\x72\x95\xdf\xe7\x1a\xa2\x0c\x92\x2e\xa3\xfc\x64\x96\xf9\x65\x85\x51\xa1\xd3\x72\x71\x53\xde\x6f\x83\xf9\x5d\x63\x61\x3e\xb1\x9e\x7f\x29\x3e\x07\xd7\xdf\x8e\x50\x36\xa4\x9a\xad\xda\x5a\x3c\x1b\xfe\x53\x52\xec\xcc\xa5\xa4\x74\x11\x8c\x85\x20\xab\xae\x36\x40\x2f\x90\xfd\x1c\xb4\xea\x25\xa5\xf6\x53\x69\x10\x22\x62\xbe\xa0\x65\x69\xb9\x21\x57\x77\xe9\xee\x75\x54\xfa\x2d\x65\x19\x8c\x57\xde\xd4\xd7\x1f\xb7\x2b\xf6\x38\xf3\xa1\xfa\x13\x42\x95\x27\x71\xe6\xeb\x05\x7a\x4f\xa2\x48\x8f\x9d\xc2\x83\x23\xc4\xfc\x6b\xf6\x99\x4c\x94\xfb\x0f\x53\xfd\x5d\x37\x7d\x2b\x97\xe7\xd0\x78\xc9\x52\x69\x2e\x10\xd1\x5f\x36\xc7\x34\x57\x0d\xc4\xa6\xe8\x4a\xc3\xdf\xd9\x0f\x1e\xa0\x18\x84\xc0\xb3\x22\x89\xc8\x05\x37\xd2\x74\xbc\x2c\x9b\x63\xa1\xbf\xf6\x9e\x08\x7d\x75\x5a\x0d\xcd\x0a\xab\x65\xff\x31\xbb\x5b\xb0\x84\x66\xbf\xd7\xfa\x84\x20\x4e\xe4\xf2\x56\x72\x42\x67\x3f\xe2\xe4\xa0\xd6\xa1\x51\xb6\x6a\x8f\x6b\xf6\x69\x9d\x4b\xd6\x4a\xa8\xa5\x9d\x2b\xab\x24\x35\x5c\x73\x21\x61\x09\x2f\xbf\xae\xa0\xad\xbf\xca\xd5\x74\x25\xe4\xfc\x83\xc8\xa6\x71\x2d\xef\xa5\x6b\xea\x4a\x94\xf2\x04\x75\x8d\xc0\xcb\x57\xd5\x35\x93\xe8\xcc\x45\x8b\x28\xeb\xc9\xf2\xba\xed\xc5\x42\xe3\xca\xd6\xb4\x52\xed\x2a\x36\xd9\x42\xa0\x4d\x1e\xf5\x7d\xd9\x06\x02\xeb\x55\xd1\x25\xe3\x88\xb4\xca\x45\x97\x3d\xd6\xea\x0d\x94\x75\x4a\x39\x40\x37\x7a\xd5\xe9\x71\x49\xad\x56\x77\x97\x8a\xab\xf3\x2e\x85\x76\xc5\x6f\xd8\x18\x2e\x6b\x7f\xd3\x8a\x66\xad\x09\x34\x1e\x08\x68\x9e\xf7\xb5\xc6\xd0\x7a\xb8\x60\x15\xb1\xcd\x38\x5b\x25\xfc\x0e\x06\xa2\x02\xb4\xfe\xef\xff\x03\x00\x00\xff\xff\xaa\xb2\x2a\x45\x96\x9c\x00\x00")

func stacksIstioTelemetryStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYml,
		"stacks/istio-telemetry-stack.yml",
	)
}

func stacksIstioTelemetryStackYml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yml", size: 40086, mode: os.FileMode(420), modTime: time.Unix(1544040565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalStorageStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x8f\xd3\x30\x10\x85\xef\xfd\x15\x56\x84\xb4\x80\x36\xf1\x8a\x13\x8a\xc4\xa1\xa2\x59\x81\xb4\xdb\x56\xb4\x9c\x10\x8a\xa6\xce\x6c\x62\xb0\x3d\x96\xc7\x9b\x0b\xf0\xdf\x51\x12\x27\x6c\x2b\x95\x93\xe7\xcd\x7b\x63\xd9\xfe\xac\xc8\x3d\xe9\x96\xcb\x95\x10\x53\x39\x54\x63\x1d\xd1\xc5\x52\xfc\xce\x47\x2d\xc4\xaf\xb4\x0a\x91\x39\x6a\x70\x0f\xb1\x7b\x04\x9f\x95\xe2\xdb\x62\xbc\x0c\x2d\xc1\xac\x14\xd9\xa6\xba\x5f\x7f\x7d\x38\xd6\xfb\xf5\xf1\x53\x7d\xbf\xfb\x52\x6f\x77\xdb\xfa\xe1\xf3\xe1\x58\x6d\xea\xed\x6e\x53\x1d\xb2\xdb\xf3\x41\x0f\xb1\xe3\x8b\xbd\x47\x43\xf6\x10\xa4\xd1\x27\x19\xc0\xa9\x0e\x83\x0c\x9a\x64\x4f\xe6\xd9\x22\x67\x67\xe1\xef\x2f\xd4\x9f\xd5\x65\x77\xea\x18\x38\xa1\xe1\x32\xf5\x14\xc4\x68\xb0\xd0\x24\x55\x40\x88\x14\x4a\xe1\x28\x58\x70\x2b\xc6\xd0\x6b\x85\x63\xd2\x90\x02\x93\x0f\x07\xcc\x7d\xa0\x5e\xb3\x26\x87\x61\x7e\x35\x6b\xc1\x35\x93\xc8\xaf\x44\x93\x99\xe7\x0d\x9e\x9e\xdb\xa4\x38\x42\x88\x8b\x33\x91\x48\x52\x62\x54\x72\xea\xa4\xa5\xf8\xc1\xe4\x66\x4c\x23\xbd\x99\xdd\xff\xb2\xe8\x7a\x1d\xc8\xd9\x01\x6b\xda\x7a\xbf\xdb\xd4\xdb\xf5\x63\x75\xd8\xaf\x3f\x56\x1f\x5e\xbd\x66\x34\x4f\xd2\x81\x45\xf6\xa0\xf0\xcd\x98\x6a\x0d\x9d\xc0\xd4\x1e\x83\xd5\x3c\xdc\x80\xe7\xe9\x81\x2e\xa7\xda\x63\x60\xcd\xc3\x97\x99\x60\x28\x03\xda\xce\xe6\xcd\x5b\x81\xae\xf1\xa4\x5d\xe4\x9b\x7f\xbd\xcb\x99\x33\x8f\x9a\x45\x8e\x34\xf0\xd6\x43\x54\x9d\xc0\x1e\x5d\xe4\xe5\xd5\x28\x40\x8b\xc5\xcf\xf7\x3c\x60\x4b\x52\x19\x60\x4e\x27\xd3\x16\x5a\x2c\xc5\xfc\x5b\xae\xc0\xeb\xef\x8a\xbb\xe2\xdd\xea\x6f\x00\x00\x00\xff\xff\x4c\x0a\x8d\x92\x0c\x03\x00\x00")

func stacksLocalStorageStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalStorageStackYml,
		"stacks/local-storage-stack.yml",
	)
}

func stacksLocalStorageStackYml() (*asset, error) {
	bytes, err := stacksLocalStorageStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/local-storage-stack.yml", size: 780, mode: os.FileMode(420), modTime: time.Unix(1543265968, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xd0\x23\x0e\x6a\xd5\x43\x63\x29\x87\xa8\x72\x45\x0e\x05\x04\x28\xea\x0d\x4d\xd6\x03\x8c\x58\xef\x3a\x3b\x63\x27\xa8\xea\x7f\xaf\x16\xbb\x60\x02\x48\xe5\x36\xfb\x3e\xd8\x79\x7e\x2b\x14\x6a\x36\x24\x69\x0f\xc0\xad\x25\x29\x83\xaf\x59\xd8\x3b\x0a\xf1\x08\x80\x0b\xdc\x50\x0a\xaf\x15\xee\xef\xd8\x8f\xe8\x5d\x29\x38\xb4\x2b\x51\x1f\x70\x43\xa3\x28\x32\x96\xc9\xe9\x99\xd6\xa2\x92\xe8\xc1\x81\x5c\xdd\x58\x25\x30\x9b\x4f\x9f\x9f\x16\x4f\xd3\x49\x36\x5f\x4d\x1e\x7f\x66\x0f\x6e\x2d\x2d\x34\xf9\xb1\x58\x2d\xb2\xf9\x73\x36\x7f\xf8\xf4\xfb\x34\xac\xc6\xd3\xc5\x32\x52\xff\x74\x78\xb3\xc7\xe5\xf8\x9c\x95\xfd\x9a\x4d\xe7\xcb\x03\xd0\x10\x6b\x6f\xab\xa2\x59\x2b\xaa\x72\x54\x4c\x47\x25\x05\x61\x51\x72\xda\xc2\x07\x74\x63\xfd\x0b\xda\x55\x49\xa1\x60\x89\xd7\x3f\xaa\x36\xa4\x43\xcb\xa2\xc3\x37\x54\xb3\x1d\x9a\x40\xa8\x34\xcc\xc9\x92\x12\x5c\x37\xbb\x10\x55\x65\x8e\x57\xd8\xc6\x22\x17\xd7\x25\xd0\x46\x7b\xb7\xfb\x26\x31\xf2\x76\x34\x16\x45\x8e\xff\xd2\xde\xa5\x71\x1f\x96\x07\x1d\xd5\xe4\xb4\x21\xfc\xf7\x32\xe7\x06\x2e\x2f\x3d\xff\xf3\x08\x24\x8a\x41\x53\x40\xfb\x86\x7b\xe9\x1d\x0e\x85\x73\xda\xb1\xd9\xb5\xb6\x00\xec\x58\x93\xb3\xb4\x3b\xad\xc9\x91\x65\x8b\xee\xf3\xfd\xfd\x97\x4e\x51\xba\xe5\x88\x3f\xe3\x8b\x02\x5d\x7e\x52\x27\xd0\x97\x6d\xbf\x3b\x26\xe6\x6c\x2c\x7c\xe5\x14\x12\x8d\x95\xfd\x0a\xd7\xfb\x92\xde\x2c\x08\x5c\x16\xe1\xe4\x7e\xb1\xca\xcd\xf2\xa4\xb2\xc5\x40\xf9\x91\x58\x06\xae\xd9\xd2\x86\xf2\x14\x34\x54\x74\x0a\xc3\xb1\x7e\xf7\x4e\x91\xe3\xcb\xf8\x80\xc5\xa0\x66\x95\xb5\x33\x6f\xd9\xec\x4f\x61\x0f\x5e\x2b\x12\x6d\x3e\xe0\x20\x81\x1a\x03\xe3\x8b\xa5\x14\xae\xec\xda\x1b\x00\xe4\x24\x26\x70\x19\x15\x29\xf4\xc7\x5e\xd4\x61\x41\xe0\xd7\x51\x00\xf1\x99\x53\xe8\xdf\x74\xea\xc4\x73\x69\x96\xbd\x97\x3e\x28\x94\xa8\xdb\x0f\x7e\x7f\x03\x00\x00\xff\xff\xda\xd3\x9d\xd1\x3e\x04\x00\x00")

func stacksNfsStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYml,
		"stacks/nfs-stack.yml",
	)
}

func stacksNfsStackYml() (*asset, error) {
	bytes, err := stacksNfsStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yml", size: 1086, mode: os.FileMode(420), modTime: time.Unix(1544043526, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksStorageclassesStackYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x31\x6b\x33\x31\x0c\x86\xf7\xfc\x0a\x91\xdd\xf9\xf8\xb6\xe2\xb1\x29\xd9\x0a\x85\x42\x3b\x16\xf5\xac\x24\xe2\x6c\xe9\x90\x74\x07\x85\xfe\xf8\x72\xbe\x86\x0e\x9d\x3b\xfa\x7d\x1f\xeb\xb1\x35\xce\xef\x64\x42\x41\x9e\x77\x00\x82\x8d\x7c\xc2\x81\xca\x5b\x43\xe1\x33\x79\x64\xf8\x4c\x3b\x00\x00\x9c\xf8\x85\xcc\x59\x25\x83\x87\x1a\x5e\xe8\x30\xde\xf9\x81\xf5\xdf\xf2\xbf\x13\x23\x4b\xc9\xf0\xbc\x75\xc7\x8a\xee\x3d\x6e\x14\x58\x30\x30\xf7\xd3\x26\xc9\x20\xe7\xad\x9d\x4c\x17\x5e\xa7\x92\x6d\x61\x4f\x53\x4a\xbb\xbf\xb0\x56\x1d\xb0\x7e\x27\x28\xa2\x81\xc1\x2a\x7e\x83\xe0\xe6\x18\xd6\x39\x87\x9f\xe5\xac\x3e\xf6\x54\xe8\x8c\x73\x8d\xd4\xeb\x0c\xfb\xb0\x99\xf6\xbf\xbf\x61\x28\xc3\x95\x6c\xbd\xd4\x85\x69\xc2\xb8\x76\x6c\xd1\x3a\x37\xba\x67\x29\x2c\x97\x47\x2d\x94\xe1\x15\x39\x4e\x6a\x27\x36\x8f\xa3\x8a\xcf\x8d\xac\xb3\xb6\xbe\x82\xdb\x93\x56\x1e\x3e\x32\x3c\x50\xa5\xa0\xaf\x00\x00\x00\xff\xff\x0a\xc5\x63\xf0\xb0\x01\x00\x00")

func stacksStorageclassesStackYmlBytes() ([]byte, error) {
	return bindataRead(
		_stacksStorageclassesStackYml,
		"stacks/storageclasses-stack.yml",
	)
}

func stacksStorageclassesStackYml() (*asset, error) {
	bytes, err := stacksStorageclassesStackYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/storageclasses-stack.yml", size: 432, mode: os.FileMode(420), modTime: time.Unix(1543265968, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/cert-manager-crd-stack.yml": stacksCertManagerCrdStackYml,
	"stacks/cert-manager-stack.yml":     stacksCertManagerStackYml,
	"stacks/coredns-stack.yml":          stacksCorednsStackYml,
	"stacks/istio-crd-stack.yml":        stacksIstioCrdStackYml,
	"stacks/istio-stack.yml":            stacksIstioStackYml,
	"stacks/istio-telemetry-stack.yml":  stacksIstioTelemetryStackYml,
	"stacks/local-storage-stack.yml":    stacksLocalStorageStackYml,
	"stacks/nfs-stack.yml":              stacksNfsStackYml,
	"stacks/storageclasses-stack.yml":   stacksStorageclassesStackYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"cert-manager-crd-stack.yml": &bintree{stacksCertManagerCrdStackYml, map[string]*bintree{}},
		"cert-manager-stack.yml":     &bintree{stacksCertManagerStackYml, map[string]*bintree{}},
		"coredns-stack.yml":          &bintree{stacksCorednsStackYml, map[string]*bintree{}},
		"istio-crd-stack.yml":        &bintree{stacksIstioCrdStackYml, map[string]*bintree{}},
		"istio-stack.yml":            &bintree{stacksIstioStackYml, map[string]*bintree{}},
		"istio-telemetry-stack.yml":  &bintree{stacksIstioTelemetryStackYml, map[string]*bintree{}},
		"local-storage-stack.yml":    &bintree{stacksLocalStorageStackYml, map[string]*bintree{}},
		"nfs-stack.yml":              &bintree{stacksNfsStackYml, map[string]*bintree{}},
		"storageclasses-stack.yml":   &bintree{stacksStorageclassesStackYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
