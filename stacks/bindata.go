// Code generated by go-bindata.
// sources:
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x2d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x4d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x18\x0e\xf6\xc8\x72\x05\x50\xca\xf2\xbf\x54\x19\x43\x96\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\x28\x1f\x12\x45\xe2\x45\x63\x44\xe5\xf2\xb8\x68\x9c\xa6\x67\xa4\x80\x19\x19\xb4\x9b\x38\x23\x09\x17\xb5\x72\x60\x43\xa3\x8c\x21\xa1\x28\x29\xb0\xe9\xff\x5a\x2c\x87\x97\x2f\x45\xc3\x60\x03\xa3\x9e\x08\xdf\x60\x53\xe2\x4c\xa8\xfc\x9b\xf6\x41\x39\x97\x47\x8a\xd3\x71\xfc\xf7\x23\x0b\xfe\xef\x45\x9d\x28\x7a\xcc\x23\x4e\x0c\xf2\x63\xbf\x19\xfe\x86\x5e\xcf\x20\xa0\xc5\xac\x5b\x42\x8e\xee\x45\x14\x9d\x16\x14\xad\xf4\x88\x30\x74\xab\x79\x30\x23\xbd\x58\x8d\x57\x4d\x09\x4d\xe0\x2a\x6b\x29\x60\x8c\x9c\xab\xc8\x2a\xed\x95\x31\x12\x9e\x76\xdf\xf6\x9f\x1e\x9f\x3e\xef\xbf\xee\xbe\x7c\x7f\x7c\xd8\xdd\x50\x43\x31\x49\x50\xce\x5d\x4d\xf1\x5e\x05\x53\x47\x35\xd0\xdc\xd6\x68\xea\x76\xd7\xa7\xda\x87\x48\x78\xb0\x0e\x67\x27\x67\x7b\x0b\xf1\x62\xf1\xfb\x6c\x7c\x4d\x91\x71\x26\xf7\x9d\xf8\x6f\x10\x9d\xe8\x3b\xb9\x19\xe4\x66\x68\x27\x93\xd6\x26\xf0\x3b\x70\x81\x9a\xac\xd3\x15\x2e\x42\xae\x3d\x66\xb2\xba\xde\x38\xba\xf8\xac\xdc\x3e\x21\x79\xcb\x6c\x63\xb8\x6d\xe5\x2c\xe7\xf5\x0f\x95\xf5\x08\x18\x4c\x8a\x36\x64\xbe\x87\x66\x59\xef\x91\x12\x95\xfb\x6e\x50\x1e\x39\xa9\xf9\x46\xcd\xa7\x1e\x51\x9f\x24\x8c\x39\x27\xd9\xb6\x97\x3c\x16\x43\xe4\xb6\xdb\x76\xed\x22\xc2\xd6\xab\x23\x4a\x38\x6d\x59\x1c\x35\x09\x1b\x67\xc1\x64\x2f\x7a\x51\x13\xe2\xd1\x47\x3a\x4b\xf8\xd0\xd5\x20\x12\x2a\xb3\x8f\xc1\x9d\x25\x64\x9a\xaa\xa2\xac\x95\x43\x09\xfd\xea\x4f\x00\x00\x00\xff\xff\xd5\x57\x8c\x0c\x68\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 872, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9c\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x9e\xed\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x24\x8b\x72\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\x92\x0e\x42\x29\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x09\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xa2\x04\xa7\xbb\xe1\x06\xe8\xa3\x49\x90\xd5\x39\x94\x72\x2e\xd7\x1a\x8c\x19\x2a\x69\xb5\x12\x02\xf4\xbd\x62\x90\xa0\x68\xfc\xe9\x53\x54\x42\x48\x6e\x37\x85\x7e\x82\x1e\xc6\x0f\xa3\xf2\x58\x33\x33\x85\x95\x06\xb3\xb9\x01\x41\x76\x09\xba\xec\x99\x52\x94\xf2\x67\xd0\x53\xc8\x94\xb6\x33\xd0\x5b\xd0\x09\xe2\xc6\x72\x85\x2d\x08\x48\xc1\xea\x5d\xf7\xec\xdb\x7c\x74\x37\xba\x1f\xcd\xa7\x5f\x17\x0f\x83\xfb\xd1\x6c\x32\x18\x8e\xbe\x77\xcd\x96\x76\xa9\xc8\x8d\x05\xdd\x15\x8a\x12\x91\x5c\xf7\xae\x2f\x4b\xb3\x2a\xb7\x4b\x95\x4b\x36\xd7\x64\xb5\xe2\xb4\xf4\xa9\x14\x22\x94\x7a\xcf\x07\x77\x77\xe3\x5f\x17\x83\x87\xaf\x55\x02\x60\x45\x72\x61\x87\x3e\x5d\x35\x98\x71\x43\xd5\x16\xf4\xee\x58\x0c\x3e\x99\x12\xa8\x9d\xf3\x14\x54\x6e\x13\xf4\xbe\x29\x5b\xf1\xf5\x84\xd8\x4d\x82\xa2\x18\x2c\x8d\x7d\x80\x71\xa6\xd5\xf3\x2e\xda\xc3\x96\x5c\x12\xbd\xab\x60\xb9\xd1\xb1\x0f\x2a\x5e\x72\x19\x83\xdc\xaa\x00\x6a\x40\x6f\x39\x85\x61\x11\x7c\x95\x30\x6f\xaf\x76\x5a\x13\x2e\x6f\x72\x4d\x2c\x57\x32\x41\x1f\xae\x6a\x87\x32\xa2\x41\xda\xd9\x26\xb7\x4c\x3d\x05\x98\xcb\x34\xf0\x9a\x4b\x0b\x9a\x42\xe6\x44\x45\x9d\xa7\xa3\x9b\xdb\xe9\x68\x38\xaf\xed\xb8\x17\x0e\x58\xca\xe5\x44\x69\x9b\xa0\xcb\xab\x5e\xaf\x17\x86\xed\xda\x64\x22\x88\x84\x41\x7b\x5b\x04\xa9\x1d\x30\xe6\x7a\x6b\x1f\x0b\x17\xca\x76\xcf\xbe\xd5\xe5\x4e\x9c\xf5\x9f\x3b\x9d\x32\x76\xdf\xcc\x01\xb6\xa8\x96\x20\x4b\x10\xa6\xaa\x9c\x17\x27\xc8\xcb\xfd\xd1\x5a\xa8\x25\x11\x8b\x0c\x74\xca\x8d\xe1\x4a\x96\x50\x8c\xce\xdf\x96\x65\xea\x7a\xa5\x2e\x57\xf1\xdb\xf3\x5a\x26\xc1\x3e\x29\xfd\xc8\xe5\x11\xb9\x6b\x7b\x90\x96\x53\x9f\xc9\x23\x98\x8c\xc3\xb3\x05\xe9\xdf\xdb\x7d\xfc\x68\x1c\x80\xe6\xc6\xaa\x54\x83\x51\xb9\xa6\xc0\x60\xc5\x25\x77\x26\x4c\xa0\x58\x6b\xc5\x76\xc3\x35\xcb\x88\xb6\xbb\x4a\xe5\xf5\xc0\x6e\x2d\x6e\xd7\x29\xc7\xfb\x98\xc9\xbd\x38\x36\x96\xd8\x7c\x8f\xd2\x4b\x42\x83\x88\xcb\x53\xaa\x81\x58\xb8\x58\x83\xbd\x10\xdc\xd8\x8b\x27\x62\xe9\xe6\x22\xcf\x18\xb1\x50\xa6\x3a\x25\x99\x29\xd1\x20\x59\xa6\xb8\xb4\xd5\x73\xa6\x58\xf5\xb3\xaa\x77\xf9\x28\x49\x0a\x26\x23\xc1\x81\x62\x50\x63\xa9\x86\xd2\x88\xe1\x0c\x1e\xb9\xa3\xb0\xce\x41\xab\x25\x41\x8b\xa6\x29\x91\x2c\xa9\x65\x08\x63\xa1\xd6\x0b\x95\xdb\x2c\xb7\x0b\x01\x5b\x10\x7d\x06\xcb\x7c\x8d\x30\xd6\x60\x76\x92\xf6\xdf\x6d\x0e\x26\xdb\xd4\x06\x71\xc1\xaf\xc1\x90\x17\x90\xd8\x1d\xef\x51\x20\xb7\x5c\x2b\x99\x3a\xf6\x0d\x54\x27\xe3\x1b\x4f\x6f\xfd\xb3\xff\x1b\x10\xab\xd8\x85\xfa\xa6\x45\xee\xe7\x21\x04\xf9\x7c\x34\x90\xb7\x77\xe3\xf9\x62\xfe\x79\x3a\x9e\xcf\xef\x46\xfd\xab\x60\x2a\x2b\xe1\x70\x30\xfc\x3c\x5a\xcc\x7e\xf9\x32\x98\x7d\xee\x5f\xd5\x53\x9f\x92\x35\x94\x43\x18\x17\x83\x75\xd9\xed\x75\xaf\x02\xea\xf1\x29\x4e\x10\x67\xae\xe1\xed\xae\x08\x96\x82\xb6\x26\x1c\xbb\x82\x8d\xea\xf0\xe0\x39\x53\x06\xc2\x70\xfd\x3c\xc7\x1b\x6b\xb3\xe6\xe1\x65\x2f\x5e\xeb\x8c\x06\x87\xd7\xbd\xeb\xf7\x1e\x78\xe1\xfe\xe0\x54\x49\x6e\x95\xe6\x72\x7d\xc4\x6d\xf7\xe6\xed\xbb\x03\xc7\xab\x5a\x07\x76\x9b\x84\x89\x11\xc6\x4d\x62\x0d\x44\x01\xd3\x34\x14\x2c\xa4\x99\x20\x16\x3e\x71\x01\x81\xe0\x90\xe5\x0b\x02\x5f\x14\xac\xb6\x23\xa9\xe8\xda\x34\x13\x0d\x4b\xed\x74\x19\x40\x1a\xbc\xf9\xaf\xb7\xd0\xed\xc3\x6c\x3e\x78\x18\x8e\x16\xb7\x93\x0a\xc7\xb3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x78\xd8\xa8\x51\x25\xa9\x6b\xd4\xa8\x8f\x4b\x08\xc9\x32\x90\x0c\x33\x69\xb0\xf7\xb0\xbf\xdf\x44\x9c\xd4\xb5\x08\x76\x4b\x43\xff\x63\xef\xa7\x5e\xf3\x78\xa3\x8c\x75\x2a\xfd\xf2\x2d\x9d\xba\xbc\x62\x85\x0d\x5f\x4b\x60\x98\x92\xa6\xc1\x12\x8b\x8d\x55\x9a\xac\x01\xef\xb3\xd2\xd7\x5c\x61\xb3\x33\x16\xd2\x13\x97\xc8\x93\xe6\x16\x1a\x24\xb4\xa7\x2f\x42\xa9\xca\xe5\xe1\x69\xf1\xd8\x62\xc9\xd1\x26\x03\x01\x16\x10\x83\x4c\xa8\x9d\x2b\xb4\x79\x29\x6c\xb7\xfe\x12\xd0\x22\x69\xb7\xeb\xb9\xba\x60\xe9\x0a\x18\x5c\x01\x7f\x47\x47\x43\x26\x38\x25\x66\xcf\xcb\xaf\xea\x9c\x35\xb1\xf0\x44\x76\x6d\xb7\x7a\x54\xca\xa2\x04\x45\xee\x3d\x5a\x12\x11\x9d\xa8\x4c\xe4\xfc\x2c\xae\xa0\xc0\xdb\x13\x17\x66\xf4\x63\xe5\xb7\xf1\x96\x6b\x9b\x13\x51\xe5\xf8\x24\x9e\x81\xb1\x5c\xfa\x15\x41\xe7\xe2\x15\x0a\x65\xa4\x25\xb0\x38\x5e\x28\xcd\xdc\xce\x67\xac\xca\xf0\x8a\x6b\x63\xdb\xaf\xbb\x56\x16\x76\x03\x63\x12\x74\xf6\x6d\x32\x9e\xce\x67\xdf\x0f\xf9\x33\x6a\x21\xd0\xe8\xaf\x30\xa8\x56\x79\x93\x37\xf1\x36\x78\x88\xde\x45\x0d\xca\x6b\xdd\xab\x03\xc4\xf9\xa5\x39\x47\xff\x3b\x85\xc2\xb8\xb1\xea\x86\xfa\x1f\xae\xbc\x81\x23\x62\x8c\xdb\x17\xe1\x86\x07\x69\xcf\x99\x38\x09\xf4\xfc\x1d\x7c\x01\x34\x6c\x78\x13\x47\xe5\xa7\x6f\x9d\x17\xd7\xd4\xef\x3c\x7b\xe4\xb2\x5c\x99\xc3\x04\x37\xf3\xeb\xf6\x34\xc3\xbe\xb0\xec\x24\xb2\xb9\xc9\x87\x38\xbf\xd3\x47\xff\xe0\xa6\x6a\x14\xfa\xa5\x23\xe1\x0a\x5f\x6c\xf8\x95\x0c\xe4\xf6\x3f\xb9\xda\x30\xba\x9d\xcd\x6f\xc7\x8b\xfb\xd1\x7c\xb0\xf8\xf1\x5b\x2b\x2e\x0b\xe3\x39\xba\x16\xf9\xf9\x70\x97\xa2\x3b\x0b\x57\xc4\x72\xb1\x2e\x87\x1d\x97\x4c\xd8\xf9\x2d\x77\x74\xe1\x49\x0c\xa3\x2d\xd1\xdc\x7d\x9b\x27\xa8\xe5\x53\xb8\xe3\xbe\x5c\x0d\xd5\x3c\x2b\xbe\xe3\xa2\x83\x0f\xe8\x7a\x69\x8e\x3a\x9d\xce\x9f\x01\x00\x00\xff\xff\x87\x77\x60\xa3\x0d\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4109, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\xdb\xb8\x96\xff\xbf\x9f\x82\x70\x0b\x4c\x0b\xc4\x8f\xe4\xb6\xbb\x37\x02\xf2\x87\x1b\x3b\x33\xde\x9d\x3a\x46\xec\xec\x62\x77\x70\x21\x30\xd2\xb1\xcd\x8d\x44\x6a\x49\xca\xa9\x7b\xb3\xfb\xd9\x2f\x48\xbd\xa8\xa7\xa5\x74\x72\x8b\x7b\x47\x9d\x41\xeb\x88\xe7\x77\x48\x1e\x9e\x97\x0e\x69\xc6\x61\x74\x4b\x76\xc2\x7a\x83\xd0\x8e\xe3\x2d\xa6\x78\xe8\x62\xb1\x7f\x60\x98\xbb\x01\x67\x07\xe2\x02\xd7\xad\x08\x39\x8c\x4a\xa0\xd2\x42\xcf\xfa\x47\x84\x70\x40\xfe\x03\xb8\x20\x8c\x5a\xe8\x3c\x7e\x56\xc0\x20\x34\x44\x2e\x11\xf8\xc1\x83\x19\x78\x20\x35\xed\x16\x7b\x02\xe2\x66\x84\xb6\xcc\x73\x81\x5b\x88\x08\x49\x58\xfa\x94\x62\x1f\x8a\xcf\x58\xa0\xf0\x29\x67\xdd\x1d\x96\x7b\x0b\x8d\x0f\x98\x8f\x3d\xf2\x30\x8e\xa7\x30\x4e\xa7\x20\xc6\x05\x16\x7c\xb7\x70\xb3\xd1\x22\x24\x8f\x01\x58\x68\x4b\x3c\xc8\x49\x40\x62\xc1\x42\xee\x40\xdd\xd4\xab\x27\x8f\x50\x09\x19\x89\x00\x3b\x0e\x08\x61\x29\xe9\x7c\x3d\x1a\xc3\x07\x97\x48\x25\x1b\x0b\x49\x1e\x82\xd1\x40\xc4\x0c\xb6\x38\xf4\x64\xa9\xe5\x7f\x04\xa3\x33\x2c\xb1\x29\x05\x84\x24\xf1\x61\x41\x25\xf0\x03\xf6\x2c\xf4\x49\x18\x8d\x91\x24\x57\x9c\xf9\x20\xf7\x10\x9a\x4d\x25\x69\x24\xf2\x08\xaa\xa8\x43\xee\x59\x68\x2f\x65\x60\x8d\xc7\x19\xc1\xe8\xdd\x5f\x57\x77\xb7\x5f\xe6\x9b\x5f\xe6\xf7\x6b\x7b\x39\xfd\x32\x5f\xaf\xa6\xd7\xf3\xff\x1b\x89\x83\x33\x72\xbc\x50\x48\xe0\x23\x8f\x39\xd8\xb3\x2e\x27\x97\x93\x37\x6f\x04\xf0\x03\x89\xe5\x13\x0b\x3c\x9a\x0b\xd0\x03\xe1\x8c\xfa\x4a\xd0\x6f\x22\xb9\xfd\x7c\x37\xbd\x99\x2e\xa7\xf6\xea\xf6\x6e\x73\xf5\xa7\xc9\x64\x92\x3c\xbf\xb1\xa7\xf7\x9b\x5f\xec\xcf\xd3\xf5\xe2\xda\x9e\x2f\xa7\x9f\x7f\x9d\xcf\xae\x32\xbd\xca\x28\xa6\xcb\xdb\xe5\x7f\x7d\xb9\xbd\x5f\xa7\x54\xa9\x3c\xab\x88\x6e\xef\x7e\xb6\xef\x6e\x7f\x9d\x5f\x4d\x5d\x9f\xd0\x8c\x6c\x35\xdd\xfc\xb2\xb6\x67\xd3\xcd\xf4\x6a\xac\xd6\x38\xd1\x34\x4d\x41\x7c\xbc\x03\x0b\xb9\x98\x88\x3d\xa6\xe7\x97\x97\x17\x49\xb3\xe5\x61\x09\x42\x66\x54\xab\xd0\xf3\x56\xcc\x23\xce\xd1\x42\xd8\x7b\xc2\xc7\x48\xc0\xf0\x35\x60\x02\x92\x59\xab\x89\x8e\x95\xa0\x13\xdd\x4b\x2c\x54\x35\x36\x58\xe9\x18\xa4\x93\x9a\x80\x7e\xac\xd4\x93\xd0\x9d\x69\x0f\x65\xdc\xe8\x88\x7d\xaf\xc4\x3d\xd3\xe3\x26\xb6\x29\x95\xf9\x39\x63\x78\x60\x5e\xe8\x43\x3a\x76\x45\x63\x15\xe5\xa7\x0d\x74\x28\xc1\x03\x1f\x24\x3f\x46\xb4\x3b\x8f\x3d\x60\xcf\x0e\x80\xfb\x44\x88\xcc\xea\x87\x88\x33\x0f\xae\x62\xbd\x1a\xe2\x74\x95\xe2\x35\xd0\xcc\xc6\x3e\xf9\x0a\xdc\x3a\x1f\x4d\x46\x1f\x4f\x8a\xde\x61\xbe\x8f\xa9\x9b\xb0\x1f\x0e\xb1\xeb\x72\x10\x22\xfe\x39\xa4\xe4\xab\x35\x1e\x8f\x05\x73\x1e\x23\xbe\x23\xf5\x11\x64\x4a\x1f\xad\xcf\x5a\x32\x0e\xf7\x77\xbf\x5e\x3d\xfe\x59\x58\xe3\x71\xa1\x35\x36\xe6\x25\xf6\x41\x04\xd8\x81\xab\x77\x7f\xcd\x2c\xa5\x4a\x52\xa1\x2b\x86\x51\x3f\x96\xee\xba\xd6\x40\x6e\x67\xf3\xcf\xf7\x3f\x5f\xed\x1c\xc9\x15\xdf\x8b\x0a\x75\xba\x9c\x5c\xfe\x69\x2c\x9d\xe0\x4c\xa9\xd4\xd0\x67\x94\x48\xc6\x09\xdd\xc5\xcd\x1f\x2f\x3e\x5e\x5c\xe8\xf6\x82\xd5\x0b\xe2\xc2\x23\x71\x1e\x53\x4f\x16\xad\x94\xf6\x61\x99\xf7\x31\xfb\x52\x7f\xde\xa2\x21\x3a\xff\x34\xb9\x9c\x64\x5d\x02\x3d\xb0\xa3\xc2\xf9\x86\x4b\x3c\xff\x34\x99\x7c\x54\x34\xc6\xb3\xcb\xc9\xe5\xb9\x86\xed\x78\xe0\xa4\xcf\x73\x4b\xab\x7b\x3f\x5c\x18\x8b\x5b\x5a\xc4\x88\x57\xde\xd5\xaa\xa5\x88\x1d\xcf\x75\xa4\x3b\x46\x53\x41\x03\x73\x20\x09\x7e\xa0\x8c\xf8\x26\x8a\x10\x49\x83\xb6\x09\x63\x44\x63\x3d\x47\x3b\xe5\xa1\x4d\x60\x24\xfd\xc0\xcb\x71\x53\x71\x84\x33\x6f\xe5\x61\x0a\xd3\x50\xee\x23\x7d\x34\x48\x96\xb7\xcb\x79\x26\xda\xe2\x7a\x47\x34\xab\xdb\x99\xf6\xb3\x57\xef\xde\x0b\xf0\xb6\x63\xe5\xe0\x3f\x54\xb4\x6b\xed\x32\x89\xb4\xea\x99\x94\x8b\xe5\x7a\x33\x5d\x5e\xcf\xed\xc5\x2a\xa1\x23\x41\x46\x20\xc0\xe1\x20\x85\x85\x88\x0b\x54\x12\x79\x8c\x5c\x81\x03\x5c\x66\x71\x21\xa7\xb8\x35\xca\xfb\xe6\x31\x7c\x00\x4e\x41\x46\x74\xe9\x58\x5c\xdb\x09\x85\x64\xbe\xcd\x21\x72\x1d\xb6\x0b\x5b\x42\x49\x1a\xe6\x87\x48\x49\x93\x38\xa3\xc8\x8c\x46\x5a\xe2\x23\xc2\xc6\x87\x73\xec\x05\x7b\x7c\xa1\x69\x78\xe8\x41\x33\x85\x11\xae\x1a\xe9\xb2\x71\x36\xd3\x25\x5a\xd1\x4c\x85\xa5\xe4\xe4\x21\x94\xe0\x63\x4a\xb6\x20\x64\x33\x39\xa1\x42\x62\xea\x9c\x62\xea\xe2\x40\x85\xd4\x46\xa2\x3d\xa6\xae\x77\x8a\xc8\x63\x3b\xa0\x4a\x57\x1b\xa9\x84\x74\x09\x6b\x2b\x35\xa0\x87\x26\x52\x63\xe1\x13\x91\x58\xe8\x79\xa8\x55\xc7\xcc\xa7\x06\x75\x3c\x06\x9a\xf4\x91\x50\xd7\x2a\x4b\x57\xb7\xf9\x20\xb1\x6b\xa4\x47\x46\x1e\x99\x79\x04\x11\x80\x93\x10\xa4\x6c\x0c\x15\x66\x9c\xec\x08\x1d\x91\xc0\x4c\xb2\x0e\xd8\x0b\x61\xa3\xd3\xa3\xc5\xca\x9e\xce\x66\x77\xf3\xf5\xba\x08\x09\x89\x5b\x83\x59\x6f\xee\x16\xcb\x9f\x4b\xf4\x02\x78\x3b\x00\x87\xff\x0d\x95\x0a\xed\x01\x9b\xe9\x75\x25\xc8\xfe\x32\x5d\x95\x80\x6d\x47\x96\x76\xc4\x84\xec\x86\x50\x26\xc6\x3a\xf6\xa2\x13\xf8\x4e\x08\x0e\x58\x30\xda\x15\xb3\x05\xde\x55\xd2\xc2\xd9\x83\x0f\xdd\x30\x92\x49\xec\xd9\x82\x7c\x83\x7c\x7e\x9e\x57\x9f\xe5\xe6\x5f\x3e\x96\xbb\x2b\x80\x4e\x02\x54\xce\x5f\x03\xd8\x2c\xbe\xcc\xd7\x9b\xe9\x97\xb2\x16\x28\x85\xc3\xbb\x5c\x44\x69\x9e\x97\x08\x18\x15\xca\x27\xb9\x6d\x47\x17\x23\xdc\x90\x63\xfd\xbe\x57\x8d\x9a\xdd\xdf\x4d\x37\x8b\xdb\x65\x19\xf8\x02\x0d\x8f\x91\x2f\x92\x7e\x8c\xed\x20\xfe\xa4\xb7\x2e\xf2\x8f\xe2\x5b\x7b\xff\x90\xd0\x2b\xff\x80\xde\xa2\xd9\x7c\x75\x37\xbf\x9e\x6e\xe6\xb3\x2e\xe8\x80\x13\xea\x90\x00\x7b\xed\xfa\x74\x41\x48\x42\xf5\xa2\xb5\x1f\xa8\x09\xfa\x8e\xfe\x02\xc6\xeb\x54\x32\x2f\x7e\x87\x51\x0a\x8e\xc6\xc0\xa1\xb5\x1e\x1b\xa8\xb6\x13\x33\x20\x1c\x1c\x20\x07\x70\x47\x0f\xc7\x5c\x9c\x68\x37\xcc\x3c\xda\xd6\x4a\xda\x95\x87\x00\x2a\x5f\xd6\x7b\x86\x7c\x59\xcf\x5d\xcd\xd8\x80\xfa\xd2\xab\x1b\xee\xe7\xdb\xdb\x5f\xab\x65\xa5\xdd\x14\xb8\xb6\xca\xd6\x81\xdb\x3a\x7e\xb7\x5d\x2f\x09\x5f\xe5\x28\xe0\x4c\x32\x87\xb5\xd4\xc1\x04\xa5\x8c\x59\x48\xec\xd7\x85\xfc\xb2\x45\x9b\xc8\xd6\xa0\xb7\x68\x06\x01\x07\x07\x4b\x70\xcf\xd0\x23\x04\x12\x6d\x19\x57\xef\x2f\x01\x96\xe4\x81\x78\x44\x1e\x4b\x3d\x70\x50\xd6\x91\x96\x51\xda\x49\x34\x8f\xd4\x29\x53\x27\x81\xa4\xd0\xd6\x9e\x00\x07\x64\x14\xbf\x63\xb5\x07\x1c\xe2\x9c\xaf\x35\x80\x05\xd0\xa8\x90\x15\x90\x6e\x1a\x91\x44\x4a\x1c\xca\x7d\x57\x8f\x96\xc3\xe2\xd0\x25\x40\x9d\x5a\x93\x6d\xee\x57\x25\xd3\xb2\x6b\xca\xa2\xb1\x8e\x87\x89\xff\x82\x04\x51\x83\x39\x7e\xb2\x5b\x30\x28\x83\x03\x62\x3f\xc2\xf1\x34\x68\x38\xfc\x3b\xe4\xfb\xd9\x1b\x49\xab\x7c\x3f\x0e\x97\x5d\xf2\xfd\x18\xe2\xe1\x07\xa8\x75\x72\x15\xb2\x8e\x61\xc5\x51\xb7\x06\xb6\x77\x87\x06\x40\xbf\x72\x75\x42\xb1\x27\xda\x56\xf5\x62\x44\x62\xf8\xe8\xc5\xc9\x4a\xcc\x61\xea\x38\x2c\x6c\x1b\xd6\xf3\xd0\x96\x2a\x1b\x83\x9e\x18\x7f\xf4\x18\x76\x3b\xe7\x64\x29\xb0\xf3\x62\xe4\x90\x1d\x56\xc5\x4c\x94\xba\x28\xa9\x89\xeb\xaa\xa9\x26\xb6\xbb\xba\x9a\xe8\x0e\xca\x64\xc2\xda\x4b\xd7\x44\xa9\xf0\x85\x09\x05\xfe\x42\xfc\x77\xac\x4c\x6a\x02\x9d\x2d\xa0\x82\xcb\xcb\x12\xf0\x04\xfc\xb2\xb9\x9b\xe8\xef\x93\x41\x87\xe2\x41\x05\xba\x93\x0b\x30\xf1\xdd\x4d\xba\x12\xfd\x32\xe9\xbd\xc4\xb8\x5f\x1c\x0c\x75\x55\xae\x21\x00\xc6\x05\xc0\x52\xf4\x63\xa1\x0c\x42\x39\x15\xff\x26\x54\x57\xd9\x56\xd8\x4b\xc7\x91\xd4\x10\x1b\x86\x12\xed\x7d\x7a\x6c\x57\x1a\x8c\x80\x03\x70\x22\x8f\x16\xfa\x69\xb0\xa0\x5b\x36\xf8\x29\x6e\xc8\x92\xf1\x5c\xb1\xe3\x4d\x22\x4a\x4e\xf0\x83\x57\x0e\xe0\x8b\xc0\xca\x42\x39\x7a\x46\x24\x78\x3f\x98\x8c\xf4\x7f\x83\x0f\x05\xda\x69\x90\x11\x47\xae\xf1\xb7\x01\x0e\x82\xc1\x5f\xd0\x33\x1a\x0c\x0a\xc4\xab\x34\x0b\x2c\xbd\x59\x57\x91\x2f\xf5\xbc\x8d\x00\x5c\x45\xf4\x9f\xb1\xba\x58\x95\xc1\xa1\x8e\x6d\xa4\x57\xa5\xe0\x5e\x45\x7e\xab\xdd\x6e\x2e\xa2\xe7\xc9\x0c\xe5\xd5\xd2\x28\x47\x8b\x4a\x91\x18\x64\x8b\x02\xaa\x41\xea\x06\xd9\x3a\xb2\xf2\x5f\x94\x8b\xa8\x75\x1e\xb5\x7d\x66\x72\xab\x35\xbe\x5a\x6c\xb4\x30\x45\x77\xdf\x48\x1e\x0b\xbc\x32\x44\xd4\x02\x63\xd1\x97\x82\x60\x2d\xc0\x50\xb0\xca\x7a\x4a\x1e\x88\x03\x72\x1d\xa5\xe8\x75\xb9\x7b\x89\xfe\xdf\xe1\x68\x15\x73\x75\xf4\x5c\x2c\x2a\xff\x36\xf8\x3a\xc4\x01\x19\x3e\xc2\xb1\xb8\xea\xe9\x3b\x54\xa1\x3c\x8a\x9e\x4b\x2f\xde\x0a\xb8\x97\x32\xc8\xc0\x71\x61\xb8\x50\x28\xce\x77\xa0\x4f\x17\x98\x55\xe1\x7c\x73\x52\x75\xbb\x66\x2e\x58\xf9\xb2\x24\x7a\x46\x93\x12\xdd\x9a\x7c\x33\xe9\x04\xf9\x56\xa4\xd3\x3d\x25\x64\x59\x09\xb6\x8a\x6a\x61\x8c\xdd\x10\x55\xfc\x68\x48\xdc\xa2\xb4\x1c\x8f\x00\x95\x1b\x8e\x1d\xa8\xc1\x46\x14\x43\xbd\x6b\x5b\xc1\xc0\xc3\x12\xa8\x73\xb4\xca\xe5\x54\x45\x37\xf1\xc5\xc0\x7c\x61\x8f\xab\x27\xb6\x00\x27\x54\x0e\xd5\x0e\xe2\x7d\x6e\x87\x51\x57\xef\xa6\x61\xef\xfd\xfb\xca\xa2\x80\x62\x47\xe8\x03\x0b\xa9\x3b\xf8\x80\xae\xae\xd0\x80\x85\x32\xfa\xf1\x0c\x0d\x42\xfa\x48\xd9\x13\x1d\x9c\xe5\x38\x15\x4a\x3c\xe8\x39\x3a\xd1\x73\x86\x06\x7e\x28\x43\xec\xd9\xd2\x13\x0a\x4d\x19\x85\xc1\x87\x0f\x45\x69\x82\xbb\xd6\xb5\x9d\xc8\x1a\x4f\x15\x7f\x0a\x5a\x22\x80\x4f\x75\xf9\xba\x5c\xd1\xae\x56\x98\x8d\x19\x4b\x8c\xca\xad\x41\x18\x95\xe7\x3e\xeb\xea\x5a\x45\x25\x3f\xa7\x11\xea\xad\x3c\xa5\x2c\x95\x9d\x0b\xca\x13\x6d\x3a\x14\x77\x21\xf2\xe3\x54\x96\x32\x0d\xe5\x9e\x45\x91\xb0\xa4\x2a\x16\x4e\x1a\xb5\x8e\x98\xbb\x33\x79\x46\x5f\x6f\x18\x7f\xc2\xdc\x05\xf7\x86\xf1\x4a\x9d\xdb\x26\x04\xea\x53\xa4\x71\x89\xa3\x36\x06\x1d\x29\xc7\xf7\xeb\x4e\x14\x78\xd4\x27\xc3\xa5\xa5\x11\x21\x3e\x86\x00\x6e\xb6\xf7\x1b\x1d\x3d\xfa\x69\x10\x9d\xfd\x88\x93\x81\xd7\xcc\x4c\xa4\x13\x7c\x5f\x72\x62\x96\x00\xd1\x73\xd6\xf2\x7e\x70\x31\x39\xff\xd7\xe1\xe4\x7c\x38\x39\xdf\x4c\x26\x96\xfe\xff\xbf\xd3\xb9\x57\x24\x30\x99\x15\xcc\x75\x51\xbb\x54\xe6\xae\x8a\xf0\x7d\xbe\x63\x92\xf7\xf9\x4e\x09\xfb\x4f\x92\xef\x64\xb9\x47\x55\xaa\x21\x9d\xa0\x2a\x18\xce\x92\x7d\x8b\xaa\xcd\x8c\x3f\x76\x10\x2d\x44\xbc\xda\xad\xaa\xba\xc0\x57\xb9\xbb\x94\x23\xd6\x11\xf1\xae\x65\x37\xd1\xbe\x54\x19\xbf\x3e\xd1\x63\x05\xee\x9f\x26\x7a\xf1\x30\x3e\x6e\x56\x1d\xb9\xb2\xd7\x7f\x33\x64\xf9\x58\x3a\xfb\x0a\x23\x51\x73\xd3\x09\x39\x7a\xae\xc8\xd6\x55\xeb\x8e\x07\x4e\xa2\x1f\xd8\xc9\x9d\xb2\x4e\x0f\x13\xa5\x45\x85\x51\xd6\xbb\xfa\x93\x1c\x5b\xaa\x38\xf0\xec\xb1\xdd\x28\x17\x87\x5f\x55\x1e\xc9\x59\xc2\xb6\x22\x31\x1c\xc7\xef\x32\x67\x33\x9d\xf8\x9d\xa6\x1d\x9d\x7e\x6b\x98\x78\x6c\xed\xba\x5e\x56\x9a\xbc\xae\x39\x59\x68\x70\x9e\x4c\xd3\x25\x3e\x50\x91\x3f\x43\xff\xf7\x32\x99\x24\x4c\xdb\x4f\x27\x13\x81\xc4\x61\xd6\x21\x6d\x5a\xca\x0c\xca\xc5\xb7\x26\x46\x41\x73\x7e\x53\x07\xc3\x4d\x39\x54\x1d\x28\xd9\xe0\x2c\x02\xe3\xe7\x35\x60\x43\x82\x86\xc0\x1a\x33\x80\x56\x3c\x4c\xd1\x35\x17\x2f\x4f\xb2\x0c\x5a\xc4\xf0\x46\x06\xf8\x64\x12\xd6\x08\x4f\x05\x5b\xc5\xa2\xbd\x74\xd3\xaa\x7d\x53\x66\xd6\x86\x43\x74\x54\xa1\xb6\xa0\xde\x89\x4d\xc5\x0a\x95\x8a\xf3\x95\x0c\x63\x7f\x60\x67\x29\x93\xb9\x01\x5e\x53\xac\xa9\xe0\x12\xbd\xd9\xda\x4e\x65\xb5\xe5\x62\x32\xf9\x87\x4b\x9c\x1a\x22\xf6\xfd\x72\xbd\x9a\x5f\x2f\x6e\x16\xf3\xd9\xf7\x86\xed\xb6\xfe\x3a\xc9\x43\xeb\x5c\xf6\xa9\xaa\x4f\xef\xc8\x7b\x47\xde\x3b\xf2\xde\x91\xf7\x8e\xfc\x07\x3b\x72\x41\xbe\x41\xbd\x13\xaf\xdc\x55\xe8\x7d\x77\xef\xbb\x7b\xdf\xdd\xfb\xee\xde\x77\xff\x38\xdf\x1d\x89\xb2\xd9\x79\x57\xef\x1c\xf7\xde\xbb\xf7\xde\xbd\xf7\xee\xbd\x77\xef\xbd\x7f\x94\xf7\x96\x4e\xa0\xb7\x7f\xa0\xbe\xe2\x7d\x6a\x83\xaa\x77\xe2\xbd\x13\xef\x9d\x78\x07\x27\xde\xd9\xfb\xfe\x68\x27\xde\xfb\xd4\x97\xf8\xd4\x64\x5f\xbe\x85\x5f\xad\x3d\x29\xd0\xfb\xd6\xde\xb7\xf6\xbe\xb5\xf7\xad\x7f\x14\xdf\x5a\xb8\x34\xab\xdb\xd7\x71\x22\xc7\x6c\x9c\x3b\xc9\x17\x97\xa3\x13\x4e\xa9\xe0\x93\x53\x27\x76\xf9\xec\xc7\x28\xbe\x27\xa9\x74\xaf\x58\x36\xd0\xeb\xdb\xfb\xe5\x66\x7e\x97\x3e\xd5\x6a\x1c\x69\x82\x79\x8a\x25\x59\x2c\xe3\x51\xe6\x9a\xca\x0f\x53\x53\x2c\x37\x25\xf6\x5e\xdf\x92\xe9\x61\x99\x26\xb6\x2e\xa3\xa1\x60\xd7\x35\x2d\x55\x03\xaa\xf2\x52\x27\x9a\x2b\x87\x56\xe1\x1a\x6a\x5a\x63\x4b\x6a\x6e\xd5\x7d\xb4\x20\x29\x0e\xa3\xf8\x86\x9a\x6b\x32\x5e\x3b\x8d\xe7\xf5\x36\x5b\xad\x7a\x76\xb2\xf1\xac\xc8\x19\x75\xc5\x09\x25\x4c\xc8\x5b\xe8\xe1\x6c\xb1\xde\xdc\x2d\x3e\xdf\xe7\x6e\x8d\xe8\x95\xb1\x57\x46\xf3\x26\xbc\x87\xd0\x79\x04\x99\xfb\xba\x32\x7c\x0d\x3c\xe2\x10\x69\x57\xb4\x21\xa4\x23\x88\xb0\xd0\x6f\x93\xd1\x64\xf2\xe9\x0c\x4d\x46\x93\x73\xfd\xf7\x45\xf4\x83\xfe\x5b\x3f\x89\x1e\x7c\x3a\x43\xe7\x67\xe8\x42\xfd\xab\x3e\x4e\xfe\x52\x63\x07\x3a\xbd\x3d\xa1\xfc\x82\x7c\x83\x5e\xf1\x7b\xc5\x7f\x3d\xc5\x67\x14\xa8\x24\xd8\xfb\x5c\xa5\xfa\x34\xf4\x6f\x08\x25\x12\x92\x56\xf4\xe7\x5c\xbb\x70\xb0\x07\xf9\x5b\x7e\x11\xda\x71\xf6\x24\xf7\x37\xd8\x91\x8c\x5b\xe8\x7c\x52\x52\xff\x78\x06\x27\xf4\x3f\xdb\x48\xe9\x0d\xa0\x37\x00\xa3\xe9\x1f\xdd\x00\xa4\x13\xd8\x02\x68\x1c\x00\x9a\x13\x71\xa3\x22\xdd\xe7\xe1\x7f\x20\x03\x68\x9d\x54\x2b\x65\x4a\x0a\x66\x1d\x14\x2a\xad\xb1\xf5\x4a\xd5\x2b\x95\xf3\xba\xdf\xa0\x09\x38\xf3\xd3\x2b\xe7\x7f\xc4\x97\x8a\x2a\x7e\xe5\x40\xe5\xb7\x6c\x2a\xaa\x1e\xe5\xd6\xc2\xeb\x68\x99\xc0\xc8\x58\x2a\xc2\x56\xb1\xf5\x35\x85\xfe\xaa\xdf\x5a\x6a\x2b\xd4\x72\x04\x2b\x37\x16\xbc\xd1\xf7\x09\x26\x77\x65\x74\x83\x84\xea\x0a\x67\x6f\xd1\xd3\x1e\x28\xe2\x21\xa5\x84\xee\xd0\x96\x33\x1f\xe9\xdb\xf9\x11\x67\x4c\x9e\xa1\x50\x00\x92\x7b\x40\x5b\xe6\x79\xec\x49\x91\x44\xa3\x42\x78\x2b\x81\x23\xec\xba\xea\x19\x4e\xb9\x89\xa3\xff\xa0\x8c\x0c\x79\x84\x3e\x22\xc9\x10\x36\x86\x98\x60\xb7\xc4\x03\x74\x20\xe9\x10\xdf\xa6\xf0\x77\xc8\xa3\x68\x28\xd0\xff\x8f\x47\x0a\x36\x8e\x01\x7a\x44\xe3\xf8\xc6\xee\x71\xc6\x50\x7f\x8c\x68\x4a\xac\xb2\x26\x3b\xfa\xe5\x26\x83\x16\x5c\x06\xaf\xaa\xa6\xaa\x1f\x2c\x25\xdf\x01\x55\x94\x29\x75\xee\x5a\xbd\x93\xba\x58\x5e\xf2\x5a\x75\xcc\xee\xe8\x1b\x15\x6e\xf2\x7b\xad\x29\x4a\x27\x68\x33\xcb\xdf\xcd\x30\x7f\xac\x30\x0a\x7c\x6a\xee\x6d\x4a\xfb\xad\xb0\xbe\x15\x16\x42\x1b\x98\xf2\xa7\x84\x83\x9b\x91\xeb\xdf\xf2\xa1\x4c\x48\x35\xc7\x5a\x1b\xe3\xe2\xe8\x1f\x92\x6c\x63\x2e\x24\xb9\x7b\x60\x62\x0a\xd2\x74\xb3\x01\x7a\x8b\xdc\xe8\xf7\x69\xa8\x5e\x42\xaa\x46\x46\xb6\x04\x5c\x44\x02\x65\xd9\x49\x6f\x66\xc4\xd5\x5d\x9a\x5b\x1d\x85\x7e\x73\x49\x06\xe3\x85\x2f\xea\xab\x27\xc6\x16\x67\x3a\x55\xfb\x81\x50\xe5\x48\x8c\xf5\x7a\x8b\x6e\x88\xe7\xe9\xb9\x53\x78\x32\x84\x18\xf9\x28\x43\x26\xca\xfb\xbb\xa1\x03\x6e\x7c\x29\xd7\xc8\xe0\xf1\x8e\x85\x32\xba\x3f\x44\x68\x67\x44\x53\xd5\x40\x6c\x8b\x6e\x35\xfd\x26\xfe\x1d\x04\xc8\x07\x21\xf0\x2e\xcb\x21\x52\xc1\x59\x9a\xcf\x28\x49\xe6\x98\x6b\x9f\xbc\x26\x42\xdf\x9c\x56\x82\xc5\xc2\xaa\xd9\x7e\x4c\xae\x16\xcc\xc1\xa2\x67\xe8\x19\x81\x1f\xc8\xe3\x5a\x72\x42\x77\x5f\x70\xf0\xbe\xd4\x61\xa4\x6c\xc5\x1e\x4f\x6c\xd3\x1a\x77\xac\xe5\xa0\xb9\x8d\xab\x58\x49\x4a\xd8\xe8\x3e\xc2\x1c\x2e\xbd\xad\xa0\xae\xbf\xc2\xcd\x74\x39\x70\x92\xcd\xe1\xa8\xf1\xe4\xd8\x73\xb7\xd4\xe5\x38\xa5\xf9\xe9\x09\x81\xe7\x6f\xaa\xab\x66\xd1\x7a\x14\x35\xa2\x2c\xe7\xca\xa7\x76\x17\x33\x8d\xcb\x5b\x53\xa3\xda\x15\x6c\xb2\x86\x41\x9d\x3c\xca\xdb\xb2\x15\x0c\x4e\xab\xa2\xc9\xc6\x10\x69\x71\x14\x6d\xb6\x58\x8b\x17\x50\x96\x39\xa5\x04\xed\xf8\x15\x97\xc7\x64\xd5\xac\xee\x26\x17\x53\xe7\x4d\x0e\xf5\x8a\x5f\xb1\x2f\x9c\xd7\xfe\xaa\x17\x9a\x93\x26\x50\x79\x1e\xa0\x7a\xdd\x4f\x1a\x43\xed\xd9\x82\x26\x66\xdd\x46\xd6\x24\xfc\x16\x06\xa2\x02\xf4\xdf\x02\x00\x00\xff\xff\x62\x87\x18\x63\x61\x6f\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 28513, mode: os.FileMode(420), modTime: time.Unix(1547486568, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\xdb\x30\x14\x7d\xcf\xaf\xb8\x84\x40\x61\x34\x1f\x1d\x7b\x32\xe4\xc1\xa4\xda\x16\x68\xd3\x60\x27\xdd\xa3\xb9\xb1\x55\xe7\x12\x59\xf2\x24\xd9\x69\xc9\xfa\xdf\x87\x1c\x69\xe9\x46\x53\x96\x17\x73\x3f\xce\x39\xbe\xe8\xde\x93\x2b\xf9\x44\xa5\x89\x7a\x00\x3b\x42\x41\xc3\x63\xc1\xe5\x00\xb9\x92\x96\x4b\x1b\xc1\xaf\x61\x97\x03\x18\xae\x5b\xae\x23\x9f\x01\xd4\x4a\xdb\x08\x3e\x4f\x26\x93\x1b\x5f\xe3\xcf\x96\x6b\x89\x22\x73\x50\xca\xb9\x39\x81\x4b\x8d\x4f\x28\xf1\x54\x00\x68\xb4\x88\x60\x70\xf8\x96\xc4\x5f\xe3\x45\x9c\xad\x93\xbb\xd7\xde\x5b\x62\x37\xd3\x91\x50\x0a\xb5\x41\x91\xd5\x5c\x57\x64\x0c\x29\xe9\x95\x87\xd0\x2f\xb9\xbd\x16\x64\xec\xf5\x1e\x6d\xbe\x05\xc9\xed\x5e\xe9\x1d\xc9\x72\x44\xc6\x92\x1a\x91\x1a\xb7\xa4\x6d\x83\x22\x68\xf7\x2f\xa0\x16\xdc\x58\x92\x68\x49\x49\xdd\x88\xcb\xb8\xfe\x7f\x5c\x5a\x4d\x97\x31\x4b\xb4\x7c\x8f\x2f\x67\x39\xc7\x3d\x9d\xf0\x9f\xce\x01\xcf\x77\x36\xee\x7b\xbe\x8d\x75\x6d\x3e\xe8\x36\x56\x99\x1c\x05\xc9\x32\x80\xa8\xc2\x92\x47\x50\xa8\x7c\xc7\xb5\x9b\xa9\xdb\xde\xf1\x1b\xb5\x93\xd1\xcd\xa4\x83\x71\xd9\x92\x56\xb2\x72\x97\xe5\xc5\xe3\xd9\x6a\xfe\xc8\xb2\x45\x7c\xcf\xd2\x65\x3c\x63\xd3\xc1\xe1\x4f\xfc\xea\x31\x29\x4b\x1e\x59\x92\xcd\x12\x76\xcb\x16\xab\x79\x7c\x97\x66\xeb\x94\x25\x0e\x37\x1d\x1c\x42\xf8\x01\x7a\x19\xa7\xe9\x8f\x87\xe4\x76\x3a\x38\x84\x30\xa0\x97\xc9\xc3\x3d\x5b\x7d\x67\xeb\x34\x73\xc4\xf9\x8c\xb9\x53\x74\xc0\x53\xa3\xbb\xcd\xa3\x2b\xaa\x0a\x65\x11\x66\xf7\x8e\xf1\xd9\xf8\xad\x8b\x1a\xdd\x5d\xcd\xd8\xef\xea\x05\x2b\x11\x48\xad\x0f\xae\xbe\x5c\x05\xab\x05\x1f\xba\xf2\x5f\x5e\xfc\x2f\x4d\xfe\x5c\x2b\xc3\x03\xbf\x73\xe4\x78\x6b\x6d\xdd\xeb\xfd\x6c\xdc\x01\x7b\xbf\x0c\xa1\x45\x4d\xb8\x11\x3c\x82\xf0\x66\x1d\xa7\xe0\x26\xd7\x54\x3b\x60\x04\xfd\xc6\x38\x13\x57\x1c\xac\x02\xa1\x4a\x92\x50\xa0\xd9\x6e\x14\xea\xa2\xff\x8f\x4a\x78\xcb\x77\x54\x6a\x34\x66\xaf\x74\xf1\xae\xca\xef\x00\x00\x00\xff\xff\x77\x6e\x69\x96\x7a\x04\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1146, mode: os.FileMode(420), modTime: time.Unix(1547483121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\xd8\x04\xb0\xdd\x46\x72\xd2\x97\x3d\x54\x41\x51\xf4\x0e\x01\xae\xb8\xdd\xbd\xe0\x36\x5f\x0e\xbd\xac\x40\x53\x63\x9b\x0d\x45\xea\xc8\x91\x1d\xa3\xe9\x7f\x3f\x90\x94\x64\xd9\xf1\x5b\xdc\xb4\xb9\x76\x93\x0f\xb1\x2d\x91\x33\x0f\x67\x1e\xce\x90\x43\x72\xad\x86\x62\x64\x93\x27\x00\x85\xd1\x39\xd2\x18\x4b\x1b\x85\xa7\xee\x21\x00\xd7\x8a\x50\x51\x02\x70\x13\xf9\x07\x00\x23\xa9\x07\x4c\x26\xd5\x2f\x00\xcb\x0d\x2b\x30\x15\x8a\xd0\x4c\x98\x4c\xe0\xe4\x95\x7d\xb2\xf0\xaa\xa5\xc6\xfd\x45\xf0\x51\x0f\x52\xc5\x72\x4c\xa0\x23\x2c\x09\x1d\xe5\x68\xc7\x9d\x46\xe2\x01\xfc\x73\x82\xc6\x88\x0c\x81\xc6\x58\x29\x84\x0c\x87\xac\x94\x04\x4c\x65\x95\x60\x20\x66\x46\x48\x16\x86\x46\xe7\x40\x63\x61\x9d\x64\xc0\x09\x9a\x19\xbc\x02\x8b\x5c\xab\xcc\xc6\xeb\x91\x36\x40\x01\xae\xca\x01\x1a\x85\x84\x36\xb5\xd9\x32\x62\x87\xd9\x68\x89\x09\xa0\xca\x0a\x2d\x14\xcd\x3b\x02\xb8\x91\xd8\x82\x71\x6c\xb5\x6f\x9e\x2f\x3e\x8a\xe0\xf0\xd3\xc5\xd9\x2f\x67\xbf\x9e\x5d\xfc\xeb\xdf\xe9\x6f\xef\x7e\x3d\xfb\xfd\xfc\xdd\xdf\xce\x3e\x37\x8d\x0c\x4a\x36\x40\xb9\x0a\x80\xd5\xa5\xe1\x98\xfa\xf7\x36\x81\x0f\x69\x9a\x23\xb1\xb4\x0d\x1c\xcd\x44\x70\xf4\xa6\x3d\x82\xdb\xef\x6b\xf0\x69\xa1\x0d\xf9\x56\x97\x2d\x74\x8c\x93\xd0\x2a\x81\x2b\xc4\xa2\xf5\xd8\xe0\x08\xaf\x13\x08\x7e\x22\x94\x98\x23\x99\xd9\xe9\x9c\x2f\x4f\x6a\xa7\xfd\x1e\x9c\x12\xa0\xc3\x50\x1b\x40\x35\xd1\x33\xb0\xc4\x1a\x7b\x2d\xf8\xde\xbf\x8e\xfc\xeb\xce\x4e\x4e\x72\xaa\x05\xb7\x69\xc1\x68\x9c\x40\xdf\xf7\xec\xdf\x42\xb2\xb3\x33\x0b\x9d\xdd\x8f\xe1\x0b\xed\xb5\x10\x13\x0a\xcd\x3e\xd6\xed\xc4\x4f\xa3\x60\x0d\x37\x9a\xce\x46\xe5\x2c\xcb\x0c\x5a\x9b\xa6\xab\x5c\xec\x90\x30\xa5\x34\x31\xa7\x2e\x9d\xdb\x26\x15\xda\x03\x5b\x85\xc9\x60\x21\x19\xc7\xdb\xb0\xba\x1f\xfe\x48\x2e\x9f\xf5\xba\x6f\x93\xe4\x3f\xd9\xb3\xde\xdb\xd3\xae\xfb\x58\x68\xe7\x7b\xe6\x3e\x44\x1c\x9e\x24\x27\xaf\x8e\x5f\x1f\xb7\xde\x87\x09\x1a\xd0\x27\xd0\xc2\xde\x1a\x61\x8d\xc2\x37\xca\xd9\x0a\xeb\xac\x1e\x66\xf0\x57\x37\x6e\x01\xda\xc5\x57\xcd\x6c\xdd\xcd\x12\x8b\x23\x68\x3a\xdf\x99\x1e\xeb\xf8\xb0\x4d\x63\xdd\x77\x69\x0e\xa4\x6b\xf9\x7a\x00\x67\xd7\x5c\x96\x19\x82\xd5\x39\x82\x1e\xfa\x18\x1a\x66\x62\x35\x7f\x80\xc6\x8c\x60\xcc\x26\x08\x39\xb3\x56\x4c\x10\x38\x33\x99\x50\x4c\x0a\x9a\xb5\x24\x5d\xb8\x90\x2a\x85\x25\xc8\xd9\x0c\x14\x62\x06\xa4\x61\x80\x50\x98\x52\x61\x06\xc3\xd2\xd0\x18\x0d\xe4\x7a\x22\x94\x9f\xf2\x53\x66\xb2\x23\x60\x16\x84\x1a\x6a\x93\x63\xd6\x92\x36\x98\x41\x81\xc6\x3d\x66\x8a\x63\x15\xc7\x99\x64\x03\xe1\xd4\x02\xa1\x25\xa1\x46\xf1\x06\xd3\x02\x97\xa5\x25\x34\xde\x22\x70\xb9\x62\x1e\x75\x75\x49\x03\x5d\xaa\xec\x46\xa8\xf0\xd9\x9a\x02\x3e\x5e\xf4\xe2\xa7\x9d\x15\x7e\xc8\x8c\x2e\x36\x69\x26\x5e\xa4\x85\xc1\xa1\xb8\xfe\xb6\x7a\x9d\xf5\xd1\x45\x95\x6a\xea\xac\xd6\x1e\x3f\xeb\xed\x23\x3c\xf5\x86\x4c\xd3\x95\x42\x3d\x65\x52\x92\x76\x3f\xe0\xbb\xc8\xe6\x45\x9a\xe9\xa9\xb2\x64\x90\xe5\x5f\x4d\xcd\x98\xa8\x48\xbb\xde\x09\x37\x2c\xcb\x85\xda\xd3\x15\x3b\xa8\xaa\xf9\xd9\x95\x83\x1b\xe3\xf2\xe4\xcd\x40\x78\x4e\x10\x1a\xc5\xe4\x4d\xce\xae\x6f\xb4\x11\x23\x37\xd5\xb6\xa3\x58\xb1\x50\x2a\xb4\x14\x7c\xf6\xb0\x4b\xa5\x83\x85\x3c\x5c\x2b\xb3\x2e\x34\x74\xfa\xd5\xab\x36\x42\xcb\xc7\x98\xe3\x62\x3b\xe7\x93\x4e\xfc\x00\xab\xaf\x5f\xfe\xfa\x1d\x2e\xbb\x82\xd7\x4f\x9d\xd1\xa2\x5c\x2b\x41\xda\x08\x35\x5a\xcf\x92\x66\x99\xf6\x48\x94\xbd\x89\xf2\x63\x2c\xd3\x77\xa0\x4c\x21\xa4\xa6\x47\xa2\xec\x4d\x94\xef\x33\xa2\x38\xa7\xef\xc2\x8e\x11\x93\x12\x1f\xe3\xc8\x9f\x8c\x1e\xc1\xeb\x6b\xf8\x71\x50\xbb\xb8\xb5\xd3\x7f\x77\xfe\x1e\x1c\x2c\x34\x2b\x77\xfa\x73\x70\x11\x2b\x44\xd5\xb0\xf3\xcd\xbd\x51\x31\xa2\x45\x3a\x47\x94\x04\xdc\x38\xe7\x42\x49\xda\xb4\x5d\x03\x0b\x7f\x9c\xa5\x43\xe1\x50\xf4\x27\xcc\xf4\x4d\xa9\xfa\x16\xb9\x41\xb2\xfd\x39\xfa\x58\xe8\x7e\xe5\x1c\xc6\xb9\x2e\x15\xf5\x39\x8b\xb9\x99\x6b\x1c\x20\x33\x68\x52\xd2\x57\xa8\xf6\x92\xe7\x7b\xfe\xff\xd3\x68\x2e\xe6\x74\xd1\xb8\xd1\x0e\x35\x81\xa5\xba\x42\xcb\x1e\x95\x03\x63\x3b\xe1\xc9\xcb\x97\x2f\x36\x10\x52\xe9\x0c\x2d\x74\x5d\x5f\x89\xd4\xdb\x42\x4a\xdf\xba\xf3\xe3\xf0\x62\xc7\x09\xe5\x86\xbd\x0b\x97\xf6\x29\xd1\x38\xd9\xab\x6b\x34\xf7\x4f\x80\x1d\x2b\x3f\x0e\xd1\x32\x8d\xeb\x4a\x57\xbc\x50\xd7\x5a\x86\xd8\xce\x3f\xeb\x71\xf6\x59\x21\xfa\x93\x93\xbe\x67\x53\xff\xf0\xf0\xd3\xc9\xe7\x7e\x61\xf4\xf5\xac\x4e\x52\x0d\x5f\x6f\x97\x4a\xff\x11\x88\x0a\xfc\x5d\x36\x11\x56\x9b\x3a\x55\x1d\x34\x7d\x7c\x31\x46\x58\x30\xf8\xdf\x52\x18\xcc\x9a\x6e\x61\x78\x70\x12\xff\x25\x7e\xe1\x33\xb0\x64\x84\xe6\x08\xa6\x63\x34\xd8\x08\x84\x65\x0c\x5d\x1a\x6b\x8b\x30\xf5\xff\x7d\xb8\x84\x01\x8e\x84\x82\xa9\xa0\x31\x74\xe6\xf5\xcc\x4e\x2f\xd4\x8a\x06\x88\x0a\x0c\xe6\x7a\xe2\x94\x87\xb4\x8e\x8d\xb8\x7a\x00\x75\x8d\xa9\x8e\x1e\x31\x04\xe4\x2e\xfb\x87\x69\x6a\xfd\xca\xa1\xc1\x55\x37\x04\xd2\x8d\x30\xb7\x77\x16\x38\x71\x6b\x0c\x87\xae\x92\x79\xdb\x26\xef\xd5\xb2\x05\x8e\x23\xf7\xff\xf9\x91\xd3\x31\xef\x09\xcc\x20\x68\x25\x67\x80\xd7\x85\xb6\x98\x81\x56\x0b\x28\x1a\x89\x7f\xbf\xb8\x38\x6f\x20\x9d\x42\x69\x11\x7e\xda\xe4\xe4\x4f\x27\x9f\x93\x97\x27\xaf\x5f\x2e\x3a\xfa\xa7\x46\x9e\x50\xa1\xda\xc6\x99\x45\xe8\x3a\xef\xa0\xb2\x65\xcb\x2f\x1d\x1b\x74\x86\xa4\x08\x63\x66\x55\x87\x82\xad\x33\x61\xd9\x40\x62\xe6\x3d\xd2\x48\x74\xb0\xa3\x88\xb3\xd0\x3d\x72\xc1\xf9\xcd\x71\x63\xfe\xa1\x64\xa3\xde\x1a\xf2\x38\x17\x08\x0b\x4a\x13\x28\xe4\x68\x2d\x33\xb3\xb0\x64\x1b\xeb\x52\x66\x30\xc0\xc6\xbd\x62\xc9\xb0\x3f\xbb\x76\x8d\x34\x64\x46\x0a\x34\xe0\xb2\xb8\xd0\xca\x1e\x81\x36\x20\x08\xa6\x42\x4a\xe0\xcc\x19\xcd\xa1\x6c\xca\x8d\xbe\x66\x18\x9c\x9f\x01\x4d\x05\xc7\x78\x4b\x40\xae\x87\xf7\x18\x93\x1f\x63\x72\xed\xea\xaf\x13\x93\xfb\x35\xd5\x36\x2c\x26\x2a\xbf\xce\x17\xa0\xdb\xe8\x5b\x75\x88\x9a\x0e\xf7\xb0\xd6\xbd\x97\xb5\xde\xda\xb3\xa1\x30\xe8\xdd\x17\x78\x64\xca\xbb\x1d\x82\xec\x80\xc0\x4d\xf0\x7d\xce\x48\xd2\xaa\xef\x12\x0b\x02\x89\x7c\xbc\x78\x7b\xb7\x33\xa2\xad\x58\x1d\xe7\xf6\x43\xba\x81\xb5\xb7\x49\x7f\xe7\xe3\xbf\xed\xc0\x77\x3e\x02\xdc\x2d\x22\xec\x77\x4c\x78\xf8\xfc\x0b\x03\x59\x3d\xce\x87\x38\x03\x5c\x25\x67\xef\x7d\xd7\x3d\x00\xd8\x12\x8a\x0a\x9d\xdd\x3d\xfa\x6c\x3a\x19\xf7\xeb\xae\x21\x0c\x85\xb1\x04\x34\xd5\xc1\x71\x61\x89\x55\x18\xb4\xa8\xe8\xc8\x09\x68\xad\x2a\xea\xd4\x0f\x83\x99\x5f\x18\x84\x22\x83\x45\xee\x16\x42\x1f\xf5\x60\xd3\x99\xdf\x1d\xcf\xb8\xbf\x7a\x1c\x5b\xd2\x6e\x45\x86\x9c\x99\xd4\x0f\xc9\x03\x20\x46\xa5\x5d\x05\x60\xe1\x7c\x69\xf7\x09\xbf\x05\x40\x50\x9c\x93\xbc\x8b\x4e\x37\xea\x2f\xd2\xfa\x7d\x84\xc3\x07\xbe\x0d\xd1\x0a\x73\x8f\x57\x21\xee\xfd\x2a\xc4\xa6\x80\x17\xb5\x23\xcc\x97\xee\x21\x90\x78\x3f\xc8\xe3\x68\xc8\xf6\x8d\xd6\xe4\xbf\xc6\x05\xe6\xed\x1e\x68\x68\x5d\x1f\xf7\x3f\xe2\x63\x26\xd4\x52\xa7\x2b\x9c\xad\xeb\x73\x85\xb3\xa5\xc6\x42\x85\x11\xa5\xf6\x4a\x14\xe9\x04\x8d\x18\xce\x42\x08\x73\x41\x79\x4e\x6f\xc8\x34\x86\x7d\x9e\x2d\x0b\xc7\x73\xa8\x62\xad\x62\xf9\xc2\x15\x8b\x87\xb8\x28\xf5\x75\x42\xf7\x01\x54\x91\x18\x42\x00\x86\xb9\x1a\xb7\xe7\x65\x59\x86\x99\x4b\x3f\x75\x2b\xa1\x3e\x22\x27\x6d\x5a\xfb\x5a\xbf\x5d\xf7\xd1\x74\xaa\xcd\x95\xd4\x2c\xf3\x61\x35\xad\x2f\xa8\x70\xa6\x7c\x32\x2b\x90\x8b\xa1\xe0\x4c\xca\x19\x78\xc6\xfa\x6a\x02\xf3\x39\x8f\x34\x08\x95\x09\xce\x08\x41\x90\x85\xe6\x72\x8b\x06\x83\x1c\xc5\x04\xc1\xc9\x04\x32\x6c\x38\x14\xfc\x8b\x12\xdf\x9a\xd4\xb3\x43\x20\xdc\x9c\x33\x56\x5b\xbb\xdb\xfd\xf0\xc7\xe9\xe5\xb3\xde\xa9\xff\x7c\xda\xeb\xdd\x74\xab\x6f\xa7\x21\x9d\xfc\x60\xf9\xe4\xd2\x9f\x75\x29\x39\xf3\xf6\x80\xfa\xfa\x8d\x2f\xe6\x08\x0b\x63\x6d\x29\x71\x53\x6b\x8d\x01\x03\x9d\x34\x8d\xd1\x4c\x85\x45\x60\x0a\xf0\x9a\x0c\xab\x10\x57\x45\x36\xb7\x5f\xee\xcc\xf9\xe9\xf6\x9a\x3e\x36\x55\x91\x6a\x6d\x0e\x4a\x16\x53\xcf\x63\x62\x7c\x4c\x8c\x2e\x31\x3e\xa9\xb6\x16\x4b\x37\xba\x43\x8c\x0e\x47\xb5\x69\x81\x26\x17\xd6\x97\xed\xc2\xf3\x28\x9c\x95\x54\xdf\x6b\x09\xd5\xcf\xc5\x32\x44\xe4\x54\xd5\x5f\xab\x92\x8a\x2f\xa6\x54\x8f\x42\x4e\xc8\x59\x51\xb7\x71\x4c\x2f\x8d\x7c\xb3\x50\x00\x17\x39\x1b\xb9\xa4\x62\x74\xde\xba\xbc\x9b\x4c\x9e\xc7\x2f\xe2\x93\x79\x8b\xf3\x52\xca\x73\x7f\xf1\x25\x81\xf7\xc3\xdf\x34\x9d\x87\xcd\x85\x6f\x11\xca\xb8\xf5\x00\x5e\x1f\xbf\x3e\xee\xbb\x89\xe3\x7f\x2f\x64\xa6\x68\xc5\xcd\x76\x9f\x69\xe7\x8f\x5b\x5f\xe3\x59\x2e\x2b\x19\x79\xce\x54\x56\xcb\x88\x22\x4b\xda\xb0\x11\xc6\x64\xb3\x41\x6c\x90\x50\x39\xdf\xbc\xf9\x79\xdc\xb4\x08\xc2\x63\x97\xcc\xdf\x6c\xd1\xf0\xbf\x00\x00\x00\xff\xff\xb8\xd0\x81\xbe\x78\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12152, mode: os.FileMode(420), modTime: time.Unix(1547483121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xdb\x8a\x1b\x31\x0c\x7d\xcf\x57\xe8\x2d\x50\xe2\xdc\x28\x65\xd7\x5f\xb1\x7f\x50\x14\xfb\xec\xc4\xd4\x37\x6c\x4d\x66\x53\xfa\xf1\x65\xc6\x33\xc9\xa6\xa4\xb0\x8f\x3e\x17\xe9\x58\x92\x49\xf1\xdd\x75\x55\xaf\x88\xb8\x97\x54\x0d\x7b\xa8\x06\x8e\x18\x91\x49\x51\x10\x45\xd3\x1f\x35\xbd\x89\x10\xf9\xe4\xa1\x9a\x54\x92\xfa\x8d\x92\x34\x49\xe9\x31\x0b\x02\x7f\xcc\x6c\x9f\x55\x61\x81\xa6\xc3\x7e\xe6\xc6\x72\xec\x22\xca\xd8\xc4\xf4\xa5\x20\x9a\xab\x12\x2e\x1d\x44\x65\x14\x83\x28\xdc\x8d\x8e\xed\x97\x2c\x16\xef\xdc\x7b\xd1\x74\x98\xd5\x55\xa6\x74\x83\x8b\x36\x0d\x9a\x7e\xec\xeb\x4c\x64\x8e\xce\xdc\xf1\x05\x16\x67\x7e\x29\x17\x05\xe5\xc2\x5e\xd3\x71\xc1\x1f\xbe\xa7\xe4\x5c\x50\xcf\xc9\x5b\x4d\xdf\xc3\x53\x45\x57\xd8\x60\xfc\x81\x4b\x56\xd3\x31\xac\x56\x15\xe5\xe2\x0c\xa6\xd9\x76\x2c\x18\xf8\xda\x46\xda\xf9\x74\x62\xff\x33\xa3\x04\x57\xab\x4b\xb1\x36\x5c\xd1\xfa\x1b\xb5\xd9\x07\xce\x75\x7d\x07\x71\x41\x94\x1b\xd0\x41\x36\xde\x55\xd9\xf4\xd9\xb2\x60\x33\xb0\x98\xf3\xc6\xc2\x43\x40\xc5\xa5\xad\x61\x11\x8f\xad\x4b\xbb\x25\xc3\x27\x67\x53\x7f\xf2\x8f\x16\x75\x5b\xfe\x13\xf3\x08\x17\x98\x14\x02\xa2\x65\x19\x03\x3f\xad\x47\x39\xd9\xfa\x6f\xc6\x46\xcf\x9d\x10\x6d\x4e\x2e\xca\x7f\xfc\xb7\xb4\x13\xed\xc2\x74\x08\x96\x5d\x3d\x73\x3c\xbc\xbe\x1e\x77\x0f\x49\x8b\xb6\xb8\xdc\x95\x6f\xbd\xf7\x6f\xc9\x3b\x73\xd5\xc4\x7e\xe0\x6b\x6b\x82\x8f\x9c\x2a\x96\x01\xbf\xec\x77\x67\x91\x3c\x5f\x76\x08\x1c\xed\x42\x3d\xd6\x9e\x41\xa5\x2c\x4e\x7d\xb7\xc4\x6d\x5b\xbc\x71\x63\x68\xc4\x65\x4d\x2f\xfb\xf5\xea\x6f\x00\x00\x00\xff\xff\xc0\xfd\x0e\x9f\x4f\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 847, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":         stacksCorednsStackYaml,
	"stacks/istio-crd-stack.yaml":       stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":           stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":      stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":  stacksRioAutoscalerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":         &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":       &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":           &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":      &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":  &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
